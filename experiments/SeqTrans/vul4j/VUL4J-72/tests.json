{
  "vul_id": "VUL4J-72",
  "cve_id": "CVE-2018-15801",
  "repository": {
    "name": "spring-projects_spring-security",
    "url": "https://github.com/spring-projects/spring-security",
    "human_patch": []
  },
  "tests": {
    "overall_metrics": {
      "number_running": 80,
      "number_passing": 79,
      "number_error": 0,
      "number_failing": 1,
      "number_skipping": 0
    },
    "failures": [
      {
        "test_class": "org.springframework.security.oauth2.jwt.JwtIssuerValidatorTests",
        "test_method": "testCVE_2018_15801",
        "failure_name": "java.lang.AssertionError",
        "detail": "java.lang.AssertionError: \nExpecting actual not to be empty",
        "is_error": false
      }
    ],
    "passing_tests": [
      "org.springframework.security.oauth2.jwt.ReactiveRemoteJWKSourceTests#getWhenMatchThenCreatesKeys",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenInvalidSignatureThenFail",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenInvalidUrl",
      "org.springframework.security.oauth2.jwt.ReactiveJwtDecodersTests#issuerWhenResponseIsNonCompliantThenThrowsRuntimeException",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#decodeWhenJwtValidationHasTwoErrorsThenJwtExceptionMessageShowsFirstError",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenExpiredThenFail",
      "org.springframework.security.oauth2.jwt.JwtTimestampValidatorTests#setClockWhenInvokedWithNullThenThrowsIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverterTests#constructWhenAnyParameterIsNullThenIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#constructorWhenJwkSetUrlIsNullThenThrowIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.JwtTimestampValidatorTests#validateWhenExpiryIsValidAndNotBeforeIsNotSpecifiedThenReturnsSuccessfulResult",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#setClaimSetConverterWhenIsNullThenThrowsIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverterTests#withDefaultsWhenAnyParameterIsNullThenIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.ReactiveRemoteJWKSourceTests#getWhenNoMatchAndNoKeyIdThenEmpty",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenNoPeriodThenFail",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#setJwtValidatorWhenGivenNullThrowsIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.ReactiveRemoteJWKSourceTests#getWhenNoMatchAndKeyIdMatchThenEmpty",
      "org.springframework.security.oauth2.jwt.JwtTests#constructorWhenClaimsIsEmptyThenThrowIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#constructorWhenJwsAlgorithmIsNullThenThrowIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenInvalidAlgMismatchThenFail",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#decodeWhenCustomRestOperationsSetThenUsed",
      "org.springframework.security.oauth2.jwt.ReactiveJwtDecodersTests#issuerWhenRespondingIssuerMismatchesRequestedIssuerThenThrowsIllegalStateException",
      "org.springframework.security.oauth2.jwt.JwtTests#constructorWhenHeadersIsEmptyThenThrowIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.JwtDecodersTests#issuerWhenResponseIsMalformedThenThrowsRuntimeException",
      "org.springframework.security.oauth2.jwt.ReactiveJwtDecodersTests#issuerWhenResponseIsTypicalThenReturnedDecoderValidatesIssuer",
      "org.springframework.security.oauth2.jwt.JwtTimestampValidatorTests#validateWhenConfiguredWithFixedClockThenValidatesUsingFixedTime",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#decodeWhenJwtIsMalformedThenReturnsStockException",
      "org.springframework.security.oauth2.jwt.JwtTests#constructorWhenParametersProvidedAndValidThenCreated",
      "org.springframework.security.oauth2.jwt.JwtTimestampValidatorTests#validateWhenNotBeforeIsValidAndExpiryIsNotSpecifiedThenReturnsSuccessfulResult",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#setRestOperationsWhenNullThenThrowIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.JwtTimestampValidatorTests#validateWhenNeitherExpiryNorNotBeforeIsSpecifiedThenReturnsSuccessfulResult",
      "org.springframework.security.oauth2.jwt.JWKContextTests#getJwkListWhenNotEmpty",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenIssuedAtThenSuccess",
      "org.springframework.security.oauth2.jwt.ReactiveRemoteJWKSourceTests#getWhenNoMatchAndKeyIdNotMatchThenRefreshAndFoundThenFound",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenUsingCustomValidatorThenValidatorIsInvoked",
      "org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverterTests#convertWhenUsingDefaultsThenFailedConversionThrowsIllegalStateException",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#constructorWhenJwkSetUrlInvalidThenThrowIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.JwtTests#constructorWhenTokenValueIsNullThenThrowIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.JwtDecodersTests#issuerWhenResponseIsNonCompliantThenThrowsRuntimeException",
      "org.springframework.security.oauth2.jwt.JwtIssuerValidatorTests#constructorWhenNullIssuerIsGivenThenThrowsIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenUnsignedTokenThenMessageDoesNotMentionClass",
      "org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverterTests#convertWhenUsingDefaultsThenCoercesAudienceAccordingToJwtSpec",
      "org.springframework.security.oauth2.jwt.JwtDecodersTests#issuerWhenRespondingIssuerMismatchesRequestedIssuerThenThrowsIllegalStateException",
      "org.springframework.security.oauth2.jwt.ReactiveJwtDecodersTests#issuerWhenRequestedIssuerIsUnresponsiveThenThrowsIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.JwtDecodersTests#issuerWhenResponseIsTypicalThenReturnedDecoderValidatesIssuer",
      "org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverterTests#convertWhenConverterReturnsNullThenClaimIsRemoved",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#decodeWhenJwtFailsValidationThenReturnsCorrespondingErrorMessage",
      "org.springframework.security.oauth2.jwt.JwtTimestampValidatorTests#constructorWhenInvokedWithNullDurationThenThrowsIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#decodeWhenPlainJwtThenExceptionDoesNotMentionClass",
      "org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverterTests#convertWhenConverterReturnsValueWhenEntryIsMissingThenEntryIsAdded",
      "org.springframework.security.oauth2.jwt.JWKContextJWKSourceTests#getWhenKeysNotEmptyThenContainsKeys",
      "org.springframework.security.oauth2.jwt.JwtTimestampValidatorTests#validateWhenBothExpiryAndNotBeforeAreValidThenReturnsSuccessfulResult",
      "org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverterTests#convertWhenUsingCustomExpiresAtConverterThenIssuedAtConverterStillConsultsIt",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenRSAPublicKeyThenSuccess",
      "org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverterTests#convertWhenUsingDefaultsThenBasesIssuedAtOffOfExpiration",
      "org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverterTests#convertWhenUsingDefaultsThenCoercesAllAttributesInJwtSpec",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#decodeWhenJwtInvalidThenThrowJwtException",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenAlgNoneThenFail",
      "org.springframework.security.oauth2.jwt.JwtTimestampValidatorTests#validateWhenConfiguredWithClockSkewThenValidatesUsingThatSkew",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#decodeWhenJwkEndpointIsUnresponsiveThenReturnsJwtException",
      "org.springframework.security.oauth2.jwt.JwtIssuerValidatorTests#validateWhenJwtHasNoIssuerThenReturnsError",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#decodeWhenJwkResponseIsMalformedThenReturnsStockException",
      "org.springframework.security.oauth2.jwt.ReactiveRemoteJWKSourceTests#getWhenMultipleRequestThenCached",
      "org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverterTests#convertWhenUsingConstructorThenOnlyConvertersInThatMapAreUsedForConversion",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenInvalidJwkSetUrlThenFail",
      "org.springframework.security.oauth2.jwt.JwtTimestampValidatorTests#validateWhenJwtIsExpiredThenErrorMessageIndicatesExpirationTime",
      "org.springframework.security.oauth2.jwt.JwtIssuerValidatorTests#constructorWhenMalformedIssuerIsGivenThenThrowsIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#decodeWhenExpClaimNullThenDoesNotThrowException",
      "org.springframework.security.oauth2.jwt.JwtTimestampValidatorTests#validateWhenJwtIsTooEarlyThenErrorMessageIndicatesNotBeforeTime",
      "org.springframework.security.oauth2.jwt.JwtDecodersTests#issuerWhenRequestedIssuerIsUnresponsiveThenThrowsIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.JWKContextTests#getJwkListWhenEmpty",
      "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoderTests#decodeWhenMessageReadScopeThenSuccess",
      "org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupportTests#decodeWhenUsingSignedJwtThenReturnsClaimsGivenByClaimSetConverter",
      "org.springframework.security.oauth2.jwt.JwtIssuerValidatorTests#validateWhenJwtIsNullThenThrowsIllegalArgumentException",
      "org.springframework.security.oauth2.jwt.MappedJwtClaimSetConverterTests#convertWhenUsingCustomConverterThenAllOtherDefaultsAreStillUsed",
      "org.springframework.security.oauth2.jwt.JwtIssuerValidatorTests#validateWhenIssuerMatchesThenReturnsSuccess",
      "org.springframework.security.oauth2.jwt.JwtIssuerValidatorTests#validateWhenIssuerMismatchesThenReturnsError",
      "org.springframework.security.oauth2.jwt.ReactiveRemoteJWKSourceTests#getWhenNoMatchAndKeyIdNotMatchThenRefreshAndNotFoundThenEmpty",
      "org.springframework.security.oauth2.jwt.ReactiveJwtDecodersTests#issuerWhenResponseIsMalformedThenThrowsRuntimeException",
      "org.springframework.security.oauth2.jwt.JWKContextTests#constructorWhenNullThenIllegalArgumentException"
    ],
    "skipping_tests": []
  }
}