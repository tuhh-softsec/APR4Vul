switch ( var1 ) { case var2 . getHandshakeStatus ( ) ; case NOT_HANDSHAKING : if ( _closing ) { case str : break ; case NEED_UNWRAP : checkRenegotiate ( ) ; break ; case NEED_UNWRAP : r . unconsume ( ) ; break ; case POST = Long . parseLong ( var1 ) ; break ; case DELETE : } case PATCH : } while ( var1 ) ; synchronized ( var2 ) }
switch ( var1 ) { case var2 . getHandshakeStatus ( ) ; case NOT_HANDSHAKING : if ( _closing ) { case str : break ; case NEED_UNWRAP : checkRenegotiate ( ) ; break ; case NEED_UNWRAP : r . unconsume ( ) ; break ; case POST = Long . parseLong ( var1 ) ; break ; case DELETE : } case PATCH : } while ( var1 ) ; synchronized ( var2 ) )
switch ( var1 ) { case var2 . getHandshakeStatus ( ) ; case NOT_HANDSHAKING : if ( _closing ) { case str : break ; case NEED_UNWRAP : checkRenegotiate ( ) ; break ; case NEED_UNWRAP : r . unconsume ( ) ; break ; case POST = Long . parseLong ( var1 ) ; break ; case DELETE : } case PATCH : } while ( var1 ) ; synchronized ( var2 ) ) }
switch ( var1 ) { case var2 . getHandshakeStatus ( ) ; case NOT_HANDSHAKING : if ( _closing ) { case str : break ; case NEED_UNWRAP : checkRenegotiate ( ) ; break ; case NEED_UNWRAP : r . unconsume ( ) ; break ; case POST = Long . parseLong ( var1 ) ; break ; case DELETE : } case PATCH : } while ( var1 ) ; synchronized ( var2 ) ; break ; case nullChar : }
switch ( var1 ) { case var2 . getHandshakeStatus ( ) ; case NOT_HANDSHAKING : if ( _closing ) { case str : break ; case NEED_UNWRAP : checkRenegotiate ( ) ; break ; case NEED_UNWRAP : r . unconsume ( ) ; break ; case POST = Long . parseLong ( var1 ) ; break ; case DELETE : } case PATCH : } while ( var1 ) ; synchronized ( var2 ) ; break ; case NEED_TASK : }
switch ( var1 ) { case var2 . getHandshakeStatus ( ) ; case NOT_HANDSHAKING : if ( _closing ) { case str : break ; case NEED_UNWRAP : checkRenegotiate ( ) ; break ; case NEED_UNWRAP : r . unconsume ( ) ; break ; case POST = Long . parseLong ( var1 ) ; break ; case DELETE : } case PATCH : } while ( var1 ) ; synchronized ( var2 ) ; synchronized ( cookieName ) ; break ; case eof : }
switch ( var1 ) { case var2 . getHandshakeStatus ( ) ; case NOT_HANDSHAKING : if ( _closing ) { case str : break ; case NEED_UNWRAP : checkRenegotiate ( ) ; break ; case NEED_UNWRAP : r . unconsume ( ) ; break ; case POST = Long . parseLong ( var1 ) ; break ; case DELETE : } case PATCH : } while ( var1 ) ; synchronized ( var2 ) ; synchronized ( Arrays ) ; break ; case eof : }
switch ( var1 ) { case var2 . getHandshakeStatus ( ) ; case NOT_HANDSHAKING : if ( _closing ) { case str : break ; case NEED_UNWRAP : checkRenegotiate ( ) ; break ; case NEED_UNWRAP : r . unconsume ( ) ; break ; case POST = Long . parseLong ( var1 ) ; break ; case DELETE : } case PATCH : } while ( var1 ) ; synchronized ( var2 ) ; synchronized ( cookieName ) ; break ; case NEED_TASK : }
switch ( var1 ) { case var2 . getHandshakeStatus ( ) ; case NOT_HANDSHAKING : if ( _closing ) { case str : break ; case NEED_UNWRAP : checkRenegotiate ( ) ; break ; case NEED_UNWRAP : r . unconsume ( ) ; break ; case POST = Long . parseLong ( var1 ) ; break ; case DELETE : } case PATCH : } while ( var1 ) ; synchronized ( var2 ) ; synchronized ( cookieName ) ; break ; case default : }
switch ( var1 ) { case var2 . getHandshakeStatus ( ) ; case NOT_HANDSHAKING : if ( _closing ) { case str : break ; case NEED_UNWRAP : checkRenegotiate ( ) ; break ; case NEED_UNWRAP : r . unconsume ( ) ; break ; case POST = Long . parseLong ( var1 ) ; break ; case DELETE : } case PATCH : } while ( var1 ) ; synchronized ( var2 ) ; synchronized ( cookieName ) ; break ; case nullChar : }
