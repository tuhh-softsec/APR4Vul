Cookie [ ] var2 = ServletActionContext . getRequest ( ) . getCookies ( ) ; <START_VUL> for ( Cookie var1 : var2 ) { String name = var1 . getName ( ) ; String value = var1 . getValue ( ) ; if ( acceptedPattern . matcher ( name ) . matches ( ) ) { if ( cookiesNameSet . contains ( str ) ) { if ( LOG . isDebugEnabled ( ) ) { LOG . debug ( str + name + str + value + str ) ; } populateCookieValueIntoStack ( name , value , cookiesMap , stack ) ; } else if ( cookiesNameSet . contains ( var1 . getName ( ) ) ) { populateCookieValueIntoStack ( name , value , cookiesMap , stack ) ; } } else { LOG . warn ( str + name + str + acceptedPattern + str ) ; }   } <END_VUL>
private Pattern var2 = Pattern . compile ( ACCEPTED_PATTERN ) ; String var1 = cookie . getName ( ) ; <START_VUL> if ( var2 . matcher ( var1 ) . matches ( ) ) { if ( cookiesNameSet . contains ( str ) ) { if ( LOG . isDebugEnabled ( ) ) { LOG . debug ( str + var1 + str + value + str ) ; } populateCookieValueIntoStack ( var1 , value , cookiesMap , stack ) ; } else if ( cookiesNameSet . contains ( cookie . getName ( ) ) ) { populateCookieValueIntoStack ( var1 , value , cookiesMap , stack ) ; } } else <END_VUL>
