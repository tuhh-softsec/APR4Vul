cd /workdir/Arja_vul4j_codehaus-plexus_plexus-utils_VUL4J-42;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/jdk1.7.0_80/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/jdk1.7.0_80";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m -cp /script/../libs/jmetal.jar:/script/../repair_tools/arja.jar us.msu.cse.repair.Main \
	Arja \
	-DexternalProjRoot /script/../libs/arja_external \
	-DprojectDir /workdir/Arja_vul4j_codehaus-plexus_plexus-utils_VUL4J-42 \
    -DtestFiltered false \
    -DrunTestCommand "mvn test -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" \
	-DsrcJavaDir /workdir/Arja_vul4j_codehaus-plexus_plexus-utils_VUL4J-42/src/main/java \
	-DbinJavaDir /workdir/Arja_vul4j_codehaus-plexus_plexus-utils_VUL4J-42/target/classes \
	-DbinTestDir /workdir/Arja_vul4j_codehaus-plexus_plexus-utils_VUL4J-42/target/test-classes \
	-DdiffFormat true \
	-Dseed 0 \
	-DgzoltarDataDir /script/../data/benchmarks/vul4j/perfectfl/VUL4J-42 \
	-Ddependences /root/.m2/repository/junit/junit/3.8.2/junit-3.8.2.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
Fault localization starts...
Number of positive tests: 272
Number of negative tests: 12
Negative tests: [org.codehaus.plexus.util.cli.CommandlineTest#testPathWithShellExpansionStrings, org.codehaus.plexus.util.cli.shell.BourneShellTest#testEscapeSingleQuotesOnArgument, org.codehaus.plexus.util.cli.shell.BourneShellTest#testQuoteWorkingDirectoryAndExecutable, org.codehaus.plexus.util.cli.shell.BourneShellTest#testQuoteWorkingDirectoryAndExecutable_WDPathWithSingleQuotes_BackslashFileSep, org.codehaus.plexus.util.cli.shell.BourneShellTest#testBourneShellQuotingCharacters, org.codehaus.plexus.util.cli.CommandlineTest#testGetShellCommandLineBash_WithSingleQuotedArg, org.codehaus.plexus.util.cli.CommandlineTest#testGetShellCommandLineBash_WithWorkingDirectory, org.codehaus.plexus.util.cli.shell.BourneShellTest#testQuoteWorkingDirectoryAndExecutable_WDPathWithSingleQuotes, org.codehaus.plexus.util.cli.shell.BourneShellTest#testArgumentsWithsemicolon, org.codehaus.plexus.util.cli.shell.BourneShellTest#testPreserveSingleQuotesOnArgument, org.codehaus.plexus.util.cli.CommandlineTest#testGetShellCommandLineNonWindows, org.codehaus.plexus.util.cli.CommandlineTest#testGetShellCommandLineBash]
Faulty Lines: 
org.codehaus.plexus.util.cli.Commandline#651:1.0
org.codehaus.plexus.util.cli.shell.BourneShell#164:1.0
org.codehaus.plexus.util.cli.Commandline#636:1.0
org.codehaus.plexus.util.cli.Commandline#672:1.0
org.codehaus.plexus.util.cli.shell.Shell#167:1.0
org.codehaus.plexus.util.cli.shell.Shell#147:1.0
org.codehaus.plexus.util.cli.shell.Shell#165:1.0
org.codehaus.plexus.util.cli.shell.BourneShell#79:1.0
org.codehaus.plexus.util.cli.Commandline#486:1.0
org.codehaus.plexus.util.cli.shell.BourneShell#169:1.0
org.codehaus.plexus.util.cli.shell.BourneShell#59:1.0
org.codehaus.plexus.util.cli.shell.Shell#149:1.0
org.codehaus.plexus.util.cli.shell.BourneShell#57:1.0
org.codehaus.plexus.util.cli.shell.BourneShell#157:1.0
org.codehaus.plexus.util.cli.Commandline#256:1.0
org.codehaus.plexus.util.cli.shell.BourneShell#129:1.0
org.codehaus.plexus.util.cli.shell.Shell#281:1.0
Fault localization is finished!
AST parsing starts...
AST parsing is finished!
Detection of local variables starts...
Detection of local variables is finished!
Detection of fields starts...
Detection of fields is finished!
Detection of methods starts...
Detection of methods is finished!
Ingredient screener starts...
Ingredient screener is finished!
Initialization of manipulations starts...
Initialization of manipulations is finished!
Filtering of the tests starts...
Number of positive tests considered: 272
Filtering of the tests is finished!
----------------------------------
Patch Candidate:
@@ -668,11 +668,6 @@ public class Commandline
{
shell.setWorkingDirectory( workingDir );
}
-
-        if ( shell.getExecutable() == null )
-        {
-            shell.setExecutable( executable );
-        }
}

public Properties getSystemEnvVars()
Number of failed tests: 12, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -278,8 +278,6 @@ public class Shell
commandLine.addAll( getShellArgsList() );
}

-        commandLine.addAll( getCommandLine( getExecutable(), arguments ) );
-
return commandLine;

}
Number of failed tests: 12, 14
Weighted failure rate: 1.025735294117647
----------------------------------
Patch Candidate:
@@ -668,11 +668,6 @@ public class Commandline
{
shell.setWorkingDirectory( workingDir );
}
-
-        if ( shell.getExecutable() == null )
-        {
-            shell.setExecutable( executable );
-        }
}

public Properties getSystemEnvVars()
diff --git a/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java b/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java
index d3432820fd44..21dc35fc8a64 100644
--- a/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java
+++ b/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java
@@ -161,11 +161,6 @@ public class BourneShell
return null;
}

-        if ( path.indexOf( " " ) == -1 && path.indexOf( "'" ) != -1 && path.indexOf( "\"" ) == -1 )
-        {
-            return StringUtils.escape( path );
-        }
-
return StringUtils.quoteAndEscape( path, '\"', BASH_QUOTING_TRIGGER_CHARS );
}
}
Number of failed tests: 12, 2
Weighted failure rate: 1.0036764705882353
----------------------------------
Patch Candidate:
@@ -126,7 +126,6 @@ public class BourneShell
StringBuilder sb = new StringBuilder();
sb.append( "cd " );

-        sb.append( unifyQuotes( dir ) );
sb.append( " && " );

return sb.toString();
Number of failed tests: 12, 1
Weighted failure rate: 1.0018382352941178
----------------------------------
Patch Candidate:
@@ -668,11 +668,6 @@ public class Commandline
{
shell.setWorkingDirectory( workingDir );
}
-
-        if ( shell.getExecutable() == null )
-        {
-            shell.setExecutable( executable );
-        }
}

public Properties getSystemEnvVars()
Number of failed tests: 12, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -161,11 +161,6 @@ public class BourneShell
return null;
}

-        if ( path.indexOf( " " ) == -1 && path.indexOf( "'" ) != -1 && path.indexOf( "\"" ) == -1 )
-        {
-            return StringUtils.escape( path );
-        }
-
return StringUtils.quoteAndEscape( path, '\"', BASH_QUOTING_TRIGGER_CHARS );
}
}
Number of failed tests: 12, 2
Weighted failure rate: 1.0036764705882353
----------------------------------
Patch Candidate:
@@ -668,11 +668,6 @@ public class Commandline
{
shell.setWorkingDirectory( workingDir );
}
-
-        if ( shell.getExecutable() == null )
-        {
-            shell.setExecutable( executable );
-        }
}

public Properties getSystemEnvVars()
Number of failed tests: 12, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -161,11 +161,6 @@ public class BourneShell
return null;
}

-        if ( path.indexOf( " " ) == -1 && path.indexOf( "'" ) != -1 && path.indexOf( "\"" ) == -1 )
-        {
-            return StringUtils.escape( path );
-        }
-
return StringUtils.quoteAndEscape( path, '\"', BASH_QUOTING_TRIGGER_CHARS );
}
}
Number of failed tests: 12, 2
Weighted failure rate: 1.0036764705882353
----------------------------------
Patch Candidate:
@@ -668,11 +668,6 @@ public class Commandline
{
shell.setWorkingDirectory( workingDir );
}
-
-        if ( shell.getExecutable() == null )
-        {
-            shell.setExecutable( executable );
-        }
}

public Properties getSystemEnvVars()
diff --git a/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java b/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java
index 6d748fb28ba9..d16d08b3a254 100644
--- a/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java
+++ b/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java
@@ -163,8 +163,6 @@ public class Shell
if ( isQuotedArgumentsEnabled() )
{
char[] escapeChars = getEscapeChars( isSingleQuotedArgumentEscaped(), isDoubleQuotedArgumentEscaped() );
-
-                sb.append( StringUtils.quoteAndEscape( arguments[i], getArgumentQuoteDelimiter(), escapeChars, getQuotingTriggerChars(), getArgumentEscapePattern(), false ) );
}
else
{
Number of failed tests: 7, 1
Weighted failure rate: 0.585171568627451
----------------------------------
Patch Candidate:
@@ -668,11 +668,6 @@ public class Commandline
{
shell.setWorkingDirectory( workingDir );
}
-
-        if ( shell.getExecutable() == null )
-        {
-            shell.setExecutable( executable );
-        }
}

public Properties getSystemEnvVars()
diff --git a/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java b/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java
index d3432820fd44..c1809741149c 100644
--- a/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java
+++ b/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java
@@ -126,7 +126,6 @@ public class BourneShell
StringBuilder sb = new StringBuilder();
sb.append( "cd " );

-        sb.append( unifyQuotes( dir ) );
sb.append( " && " );

return sb.toString();
Number of failed tests: 12, 1
Weighted failure rate: 1.0018382352941178
----------------------------------
Patch Candidate:
@@ -54,7 +54,6 @@ public class BourneShell

public BourneShell( boolean isLoginShell )
{
-        setShellCommand( "/bin/sh" );
setArgumentQuoteDelimiter( '\'' );
setExecutableQuoteDelimiter( '\"' );
setSingleQuotedArgumentEscaped( true );
Number of failed tests: 12, 7
Weighted failure rate: 1.0128676470588236
----------------------------------
Patch Candidate:
@@ -54,7 +54,6 @@ public class BourneShell

public BourneShell( boolean isLoginShell )
{
-        setShellCommand( "/bin/sh" );
setArgumentQuoteDelimiter( '\'' );
setExecutableQuoteDelimiter( '\"' );
setSingleQuotedArgumentEscaped( true );
Number of failed tests: 12, 7
Weighted failure rate: 1.0128676470588236
----------------------------------
Patch Candidate:
@@ -163,8 +163,6 @@ public class Shell
if ( isQuotedArgumentsEnabled() )
{
char[] escapeChars = getEscapeChars( isSingleQuotedArgumentEscaped(), isDoubleQuotedArgumentEscaped() );
-
-                sb.append( StringUtils.quoteAndEscape( arguments[i], getArgumentQuoteDelimiter(), escapeChars, getQuotingTriggerChars(), getArgumentEscapePattern(), false ) );
}
else
{
@@ -278,8 +276,6 @@ public class Shell
commandLine.addAll( getShellArgsList() );
}

-        commandLine.addAll( getCommandLine( getExecutable(), arguments ) );
-
return commandLine;

}
Number of failed tests: 12, 14
Weighted failure rate: 1.025735294117647
----------------------------------
Patch Candidate:
@@ -56,7 +56,6 @@ public class BourneShell
{
setShellCommand( "/bin/sh" );
setArgumentQuoteDelimiter( '\'' );
-        setExecutableQuoteDelimiter( '\"' );
setSingleQuotedArgumentEscaped( true );
setSingleQuotedExecutableEscaped( false );
setQuotedExecutableEnabled( true );
@@ -126,7 +125,6 @@ public class BourneShell
StringBuilder sb = new StringBuilder();
sb.append( "cd " );

-        sb.append( unifyQuotes( dir ) );
sb.append( " && " );

return sb.toString();
diff --git a/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java b/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java
index 6d748fb28ba9..d7e490c825a1 100644
--- a/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java
+++ b/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java
@@ -278,8 +278,6 @@ public class Shell
commandLine.addAll( getShellArgsList() );
}

-        commandLine.addAll( getCommandLine( getExecutable(), arguments ) );
-
return commandLine;

}
Number of failed tests: 12, 14
Weighted failure rate: 1.025735294117647
----------------------------------
Patch Candidate:
@@ -163,8 +163,6 @@ public class Shell
if ( isQuotedArgumentsEnabled() )
{
char[] escapeChars = getEscapeChars( isSingleQuotedArgumentEscaped(), isDoubleQuotedArgumentEscaped() );
-
-                sb.append( StringUtils.quoteAndEscape( arguments[i], getArgumentQuoteDelimiter(), escapeChars, getQuotingTriggerChars(), getArgumentEscapePattern(), false ) );
}
else
{


Node: b97f25038321



Date: Fri Sep 16 20:18:08 EDT 2022

