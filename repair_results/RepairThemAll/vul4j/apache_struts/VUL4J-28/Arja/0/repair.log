cd /workdir/Arja_vul4j_apache_struts_VUL4J-28;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/jdk1.7.0_80/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/jdk1.7.0_80";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m -cp /script/../libs/jmetal.jar:/script/../repair_tools/arja.jar us.msu.cse.repair.Main \
	Arja \
	-DexternalProjRoot /script/../libs/arja_external \
	-DprojectDir /workdir/Arja_vul4j_apache_struts_VUL4J-28 \
    -DtestFiltered false \
    -DrunTestCommand "mvn test -pl core -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" \
	-DsrcJavaDir /workdir/Arja_vul4j_apache_struts_VUL4J-28/core/src/main/java \
	-DbinJavaDir /workdir/Arja_vul4j_apache_struts_VUL4J-28/core/target/classes \
	-DbinTestDir /workdir/Arja_vul4j_apache_struts_VUL4J-28/core/target/test-classes \
	-DdiffFormat true \
	-Dseed 0 \
	-DgzoltarDataDir /script/../data/benchmarks/vul4j/perfectfl/VUL4J-28 \
	-Ddependences /root/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/root/.m2/repository/mockobjects/mockobjects-jdk1.3-j2ee1.3/0.09/mockobjects-jdk1.3-j2ee1.3-0.09.jar:/root/.m2/repository/jmock/jmock/1.2.0/jmock-1.2.0.jar:/root/.m2/repository/javassist/javassist/3.11.0.GA/javassist-3.11.0.GA.jar:/root/.m2/repository/org/easymock/easymock/2.4/easymock-2.4.jar:/root/.m2/repository/asm/asm-commons/3.3/asm-commons-3.3.jar:/root/.m2/repository/org/testng/testng/5.1/testng-5.1-jdk15.jar:/root/.m2/repository/asm/asm/3.3/asm-3.3.jar:/root/.m2/repository/mockobjects/mockobjects-jdk1.3/0.09/mockobjects-jdk1.3-0.09.jar:/root/.m2/repository/asm/asm-tree/3.3/asm-tree-3.3.jar:/root/.m2/repository/org/apache/struts/struts-annotations/1.0.5/struts-annotations-1.0.5.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/mockobjects/mockobjects-core/0.09/mockobjects-core-0.09.jar:/root/.m2/repository/org/apache/commons/commons-lang3/3.1/commons-lang3-3.1.jar:/root/.m2/repository/sslext/sslext/1.2-0/sslext-1.2-0.jar:/root/.m2/repository/org/freemarker/freemarker/2.3.19/freemarker-2.3.19.jar:/root/.m2/repository/mockobjects/mockobjects-alt-jdk1.3-j2ee1.3/0.09/mockobjects-alt-jdk1.3-j2ee1.3-0.09.jar:/root/.m2/repository/org/apache/velocity/velocity/1.6.4/velocity-1.6.4.jar:/root/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/apache/velocity/velocity-tools/1.3/velocity-tools-1.3.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/mockobjects/mockobjects-alt-jdk1.3/0.09/mockobjects-alt-jdk1.3-0.09.jar:/root/.m2/repository/commons-validator/commons-validator/1.3.1/commons-validator-1.3.1.jar:/root/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar:/root/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/root/.m2/repository/ognl/ognl/3.0.6/ognl-3.0.6.jar:/root/.m2/repository/commons-digester/commons-digester/2.0/commons-digester-2.0.jar:/root/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/root/.m2/repository/javax/servlet/jsp-api/2.0/jsp-api-2.0.jar:/root/.m2/repository/org/apache/struts/xwork/xwork-core/2.3.16.2-SNAPSHOT/xwork-core-2.3.16.2-SNAPSHOT.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar:/root/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
Fault localization starts...
Number of positive tests: 854
Number of negative tests: 1
Negative tests: [org.apache.struts2.interceptor.CookieInterceptorTest#testCookiesWithClassPollution]
Faulty Lines: 
org.apache.struts2.interceptor.CookieInterceptor#176:1.0
org.apache.struts2.interceptor.CookieInterceptor#226:1.0
Fault localization is finished!
AST parsing starts...
AST parsing is finished!
Detection of local variables starts...
Detection of local variables is finished!
Detection of fields starts...
Detection of fields is finished!
Detection of methods starts...
Detection of methods is finished!
Ingredient screener starts...
Ingredient screener is finished!
Initialization of manipulations starts...
Initialization of manipulations is finished!
Filtering of the tests starts...
Number of positive tests considered: 854
Filtering of the tests is finished!
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,18 +223,7 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                populateCookieValueIntoStack(name, value, cookiesMap, stack);
}
}

Number of failed tests: 1, 4
Weighted failure rate: 1.0023419203747073
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("entering MessageStoreInterceptor ...");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,18 +223,9 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("Clearing HttpSession");
+				}
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                cookie.setMaxAge(1209600);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -223,18 +223,7 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (cookiesNameSet.contains(cookie.getName())) {
+					populateCookieValueIntoStack(name, value, cookiesMap, stack);
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,18 +223,7 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                cookie.setMaxAge(1209600);
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,7 +223,12 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug(
+							"Bypassing automatic checkbox detection due to multiple checkboxes of the same name: #0",
+							name);
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -223,18 +223,9 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("start interception");
+				}
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (cookiesNameSet.contains(cookie.getName())) {
+					populateCookieValueIntoStack(name, value, cookiesMap, stack);
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,18 +223,7 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                return null;
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,18 +223,9 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("entering MessageStoreInterceptor ...");
+				}
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,18 +223,7 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                ServletActionContext.getRequest().getSession(true);
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,18 +223,11 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("after Locale=#0", invocation.getStack()
+							.findValue("locale"));
+					LOG.debug("intercept } ");
+				}
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,18 +223,13 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                if (LOG.isDebugEnabled()) {
+					LOG.debug(
+							"Sending cookie [#0] with value [#1] for domain [#2]",
+							cookie.getName(), cookie.getValue(), (cookie
+									.getDomain() != null ? cookie.getDomain()
+									: "no domain"));
+				}
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,7 +223,12 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug(
+							"Bypassing automatic checkbox detection due to multiple checkboxes of the same name: #0",
+							name);
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -223,18 +223,7 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                invocation.getProxy().setExecuteResult(false);
}
}

Number of failed tests: 1, 7
Weighted failure rate: 1.0040983606557377
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                populateCookieValueIntoStack(name, value, cookiesMap, stack);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 4
Weighted failure rate: 1.0023419203747073
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("Creating new HttpSession and new SessionMap in ServletActionContext");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -224,6 +224,27 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                stack.push(value);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("Clearing HttpSession");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -223,18 +223,7 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                cookie.setMaxAge(1209600);
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 1, 6
Weighted failure rate: 1.0035128805620608
----------------------------------
Patch Candidate:
@@ -223,18 +223,7 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                populateCookieValueIntoStack(name, value, cookiesMap, stack);
}
}

Number of failed tests: 1, 4
Weighted failure rate: 1.0023419203747073


Node: 7bf757db1356



Date: Wed Nov 30 13:15:02 EST 2022

