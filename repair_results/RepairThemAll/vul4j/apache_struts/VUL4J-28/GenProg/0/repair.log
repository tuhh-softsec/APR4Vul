cd /workdir/GenProg_vul4j_apache_struts_VUL4J-28;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/jdk1.7.0_80/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/jdk1.7.0_80";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m -cp /script/../libs/jmetal.jar:/script/../repair_tools/arja.jar us.msu.cse.repair.Main \
	GenProg \
	-DexternalProjRoot /script/../libs/arja_external \
	-DprojectDir /workdir/GenProg_vul4j_apache_struts_VUL4J-28 \
    -DtestFiltered false \
    -DrunTestCommand "mvn test -pl core -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" \
	-DsrcJavaDir /workdir/GenProg_vul4j_apache_struts_VUL4J-28/core/src/main/java \
	-DbinJavaDir /workdir/GenProg_vul4j_apache_struts_VUL4J-28/core/target/classes \
	-DbinTestDir /workdir/GenProg_vul4j_apache_struts_VUL4J-28/core/target/test-classes \
	-DdiffFormat true \
	-Dseed 0 \
	-DgzoltarDataDir /script/../data/benchmarks/vul4j/perfectfl/VUL4J-28 \
	-Ddependences /root/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/root/.m2/repository/mockobjects/mockobjects-jdk1.3-j2ee1.3/0.09/mockobjects-jdk1.3-j2ee1.3-0.09.jar:/root/.m2/repository/jmock/jmock/1.2.0/jmock-1.2.0.jar:/root/.m2/repository/javassist/javassist/3.11.0.GA/javassist-3.11.0.GA.jar:/root/.m2/repository/org/easymock/easymock/2.4/easymock-2.4.jar:/root/.m2/repository/asm/asm-commons/3.3/asm-commons-3.3.jar:/root/.m2/repository/org/testng/testng/5.1/testng-5.1-jdk15.jar:/root/.m2/repository/asm/asm/3.3/asm-3.3.jar:/root/.m2/repository/mockobjects/mockobjects-jdk1.3/0.09/mockobjects-jdk1.3-0.09.jar:/root/.m2/repository/asm/asm-tree/3.3/asm-tree-3.3.jar:/root/.m2/repository/org/apache/struts/struts-annotations/1.0.5/struts-annotations-1.0.5.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/mockobjects/mockobjects-core/0.09/mockobjects-core-0.09.jar:/root/.m2/repository/org/apache/commons/commons-lang3/3.1/commons-lang3-3.1.jar:/root/.m2/repository/sslext/sslext/1.2-0/sslext-1.2-0.jar:/root/.m2/repository/org/freemarker/freemarker/2.3.19/freemarker-2.3.19.jar:/root/.m2/repository/mockobjects/mockobjects-alt-jdk1.3-j2ee1.3/0.09/mockobjects-alt-jdk1.3-j2ee1.3-0.09.jar:/root/.m2/repository/org/apache/velocity/velocity/1.6.4/velocity-1.6.4.jar:/root/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/apache/velocity/velocity-tools/1.3/velocity-tools-1.3.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/mockobjects/mockobjects-alt-jdk1.3/0.09/mockobjects-alt-jdk1.3-0.09.jar:/root/.m2/repository/commons-validator/commons-validator/1.3.1/commons-validator-1.3.1.jar:/root/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar:/root/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/root/.m2/repository/ognl/ognl/3.0.6/ognl-3.0.6.jar:/root/.m2/repository/commons-digester/commons-digester/2.0/commons-digester-2.0.jar:/root/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/root/.m2/repository/javax/servlet/jsp-api/2.0/jsp-api-2.0.jar:/root/.m2/repository/org/apache/struts/xwork/xwork-core/2.3.16.2-SNAPSHOT/xwork-core-2.3.16.2-SNAPSHOT.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar:/root/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
Fault localization starts...
Number of positive tests: 854
Number of negative tests: 1
Negative tests: [org.apache.struts2.interceptor.CookieInterceptorTest#testCookiesWithClassPollution]
Faulty Lines: 
org.apache.struts2.interceptor.CookieInterceptor#176:1.0
org.apache.struts2.interceptor.CookieInterceptor#226:1.0
Fault localization is finished!
AST parsing starts...
AST parsing is finished!
Detection of local variables starts...
Detection of local variables is finished!
Detection of fields starts...
Detection of fields is finished!
Detection of methods starts...
Detection of methods is finished!
Ingredient screener starts...
Ingredient screener is finished!
Initialization of manipulations starts...
Initialization of manipulations is finished!
Filtering of the tests starts...
Number of positive tests considered: 854
Filtering of the tests is finished!
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,9 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,9 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("Clearing HttpSession");
+				}
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,14 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug(
+							"Sending cookie [#0] with value [#1] for domain [#2]",
+							cookie.getName(), cookie.getValue(), (cookie
+									.getDomain() != null ? cookie.getDomain()
+									: "no domain"));
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,11 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("before Locale=#0", invocation.getStack()
+							.findValue("locale"));
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("start interception");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,7 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                boolean result = false;
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,9 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                Map session = (Map) invocation.getInvocationContext().get(
+						ActionContext.SESSION);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 8
Fitness: 9.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                invocation.getProxy().setExecuteResult(false);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 8
Fitness: 9.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,11 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                if (LOG.isDebugEnabled()) {
+					LOG.debug(
+							"Bypassing automatic checkbox detection due to multiple checkboxes of the same name: #0",
+							name);
+				}
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,13 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+							+ name
+							+ "] with value ["
+							+ value
+							+ "] will be injected");
+				}
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,11 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("before Locale=#0", invocation.getStack()
+							.findValue("locale"));
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,11 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("before Locale=#0", invocation.getStack()
+							.findValue("locale"));
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,14 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug(
+							"Sending cookie [#0] with value [#1] for domain [#2]",
+							cookie.getName(), cookie.getValue(), (cookie
+									.getDomain() != null ? cookie.getDomain()
+									: "no domain"));
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,14 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug(
+							"Sending cookie [#0] with value [#1] for domain [#2]",
+							cookie.getName(), cookie.getValue(), (cookie
+									.getDomain() != null ? cookie.getDomain()
+									: "no domain"));
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,7 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                boolean result = false;
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("start interception");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("start interception");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,7 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                boolean result = false;
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:162)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:272)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:154)
	at java.io.BufferedReader.readLine(BufferedReader.java:317)
	at java.io.BufferedReader.readLine(BufferedReader.java:382)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,9 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				ActionContext ac = invocation.getInvocationContext();
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 8
Fitness: 9.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,8 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                injectIntoCookiesAwareAction(invocation.getAction(), cookiesMap);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:162)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:325)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:154)
	at java.io.BufferedReader.readLine(BufferedReader.java:317)
	at java.io.BufferedReader.readLine(BufferedReader.java:382)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,11 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                if (LOG.isDebugEnabled()) {
+					LOG.debug("exit executing MessageStoreInterceptor");
+				}
+				boolean fileIsAcceptable = false;
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,11 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				ServletActionContext.getRequest().getSession(true);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,11 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				ServletActionContext.getRequest().getSession(true);
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -222,19 +222,6 @@ public class CookieInterceptor extends AbstractInterceptor {
for (Cookie cookie : cookies) {
String name = cookie.getName();
String value = cookie.getValue();
-
-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,9 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
}
}

Number of failed tests: 7
Fitness: 8.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,28 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                populateCookieValueIntoStack(name, value, cookiesMap, stack);
+				if (isAcceptableName(name)) {
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 5
Fitness: 6.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,28 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                populateCookieValueIntoStack(name, value, cookiesMap, stack);
+				if (isAcceptableName(name)) {
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 5
Fitness: 6.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,11 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				ActionContext ac = invocation.getInvocationContext();
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 8
Fitness: 9.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,11 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				ActionContext ac = invocation.getInvocationContext();
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 8
Fitness: 9.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -224,17 +224,26 @@ public class CookieInterceptor extends AbstractInterceptor {
String value = cookie.getValue();

if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,28 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                populateCookieValueIntoStack(name, value, cookiesMap, stack);
+				if (isAcceptableName(name)) {
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 5
Fitness: 6.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,18 +223,28 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
-                    if (cookiesNameSet.contains("*")) {
-                        if (LOG.isDebugEnabled()) {
-                            LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");
-                        }
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    } else if (cookiesNameSet.contains(cookie.getName())) {
-                        populateCookieValueIntoStack(name, value, cookiesMap, stack);
-                    }
-                } else {
-                    LOG.warn("Cookie name [" + name + "] does not match accepted cookie names pattern [" + acceptedPattern + "]");
-                }
+                populateCookieValueIntoStack(name, value, cookiesMap, stack);
+				if (isAcceptableName(name)) {
+					if (cookiesNameSet.contains("*")) {
+						if (LOG.isDebugEnabled()) {
+							LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name ["
+									+ name
+									+ "] with value ["
+									+ value
+									+ "] will be injected");
+						}
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					} else if (cookiesNameSet.contains(cookie.getName())) {
+						populateCookieValueIntoStack(name, value, cookiesMap,
+								stack);
+					}
+				} else {
+					LOG.warn("Cookie name ["
+							+ name
+							+ "] does not match accepted cookie names pattern ["
+							+ acceptedPattern + "]");
+				}
}
}

Number of failed tests: 5
Fitness: 6.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -223,7 +223,10 @@ public class CookieInterceptor extends AbstractInterceptor {
String name = cookie.getName();
String value = cookie.getValue();

-                if (isAcceptableName(name)) {
+                LOG.warn("Cookie name [" + name
+						+ "] does not match accepted cookie names pattern ["
+						+ acceptedPattern + "]");
+				if (isAcceptableName(name)) {
if (cookiesNameSet.contains("*")) {
if (LOG.isDebugEnabled()) {
LOG.debug("contains cookie name [*] in configured cookies name set, cookie with name [" + name + "] with value [" + value + "] will be injected");


Node: 2c8178711f7b



Date: Fri Sep 30 15:41:54 EDT 2022

