cd /workdir/TBar_vul4j_apache_struts_VUL4J-30;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/jdk1.7.0_80/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/jdk1.7.0_80";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m \
    -cp /script/../libs/tbar_external/com.gzoltar-0.1.1-jdk7.jar:/script/../repair_tools/tbar.jar edu.lu.uni.serval.tbar.main.Main \
    "/workdir/TBar_vul4j_apache_struts_VUL4J-30" "com.opensymphony.xwork2.validator.URLValidatorTest#testValidUrl2" "/core/src/main/java/" "/core/src/test/java/" "/core/target/classes/" "/core/target/test-classes/" "/script/../data/benchmarks/vul4j/perfectfl/VUL4J-30/spectra.txt" "mvn test -pl core -Dtest=com.opensymphony.xwork2.validator.URLValidatorTest -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" "mvn test -pl core -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" "/root/.m2/repository/javax/servlet/servlet-api/2.4/servlet-api-2.4.jar:/root/.m2/repository/org/objenesis/objenesis/2.2/objenesis-2.2.jar:/root/.m2/repository/org/slf4j/slf4j-simple/1.7.12/slf4j-simple-1.7.12.jar:/root/.m2/repository/org/ow2/asm/asm-tree/5.1/asm-tree-5.1.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.7.12/slf4j-api-1.7.12.jar:/root/.m2/repository/dom4j/dom4j/1.1/dom4j-1.1.jar:/root/.m2/repository/commons-chain/commons-chain/1.1/commons-chain-1.1.jar:/root/.m2/repository/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar:/root/.m2/repository/org/springframework/spring-aspects/4.1.6.RELEASE/spring-aspects-4.1.6.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/4.1.6.RELEASE/spring-context-support-4.1.6.RELEASE.jar:/root/.m2/repository/org/apache/commons/commons-collections4/4.1/commons-collections4-4.1.jar:/root/.m2/repository/org/apache/struts/struts-taglib/1.3.8/struts-taglib-1.3.8.jar:/root/.m2/repository/org/ow2/asm/asm/5.1/asm-5.1.jar:/root/.m2/repository/org/springframework/spring-web/4.1.6.RELEASE/spring-web-4.1.6.RELEASE.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/root/.m2/repository/mockobjects/mockobjects-core/0.09/mockobjects-core-0.09.jar:/root/.m2/repository/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar:/root/.m2/repository/org/apache/struts/struts-core/1.3.8/struts-core-1.3.8.jar:/root/.m2/repository/mockobjects/mockobjects-alt-jdk1.3-j2ee1.3/0.09/mockobjects-alt-jdk1.3-j2ee1.3-0.09.jar:/root/.m2/repository/ognl/ognl/3.1.12/ognl-3.1.12.jar:/root/.m2/repository/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.9.2/commons-beanutils-1.9.2.jar:/root/.m2/repository/mockobjects/mockobjects-alt-jdk1.3/0.09/mockobjects-alt-jdk1.3-0.09.jar:/root/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/root/.m2/repository/commons-validator/commons-validator/1.3.1/commons-validator-1.3.1.jar:/root/.m2/repository/org/apache/logging/log4j/log4j-core/2.7/log4j-core-2.7.jar:/root/.m2/repository/org/springframework/spring-core/4.1.6.RELEASE/spring-core-4.1.6.RELEASE.jar:/root/.m2/repository/org/springframework/spring-beans/4.1.6.RELEASE/spring-beans-4.1.6.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/4.1.6.RELEASE/spring-expression-4.1.6.RELEASE.jar:/root/.m2/repository/commons-digester/commons-digester/2.1/commons-digester-2.1.jar:/root/.m2/repository/com/beust/jcommander/1.12/jcommander-1.12.jar:/root/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/root/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/root/.m2/repository/org/springframework/spring-aop/4.1.6.RELEASE/spring-aop-4.1.6.RELEASE.jar:/root/.m2/repository/mockobjects/mockobjects-jdk1.3-j2ee1.3/0.09/mockobjects-jdk1.3-j2ee1.3-0.09.jar:/root/.m2/repository/jmock/jmock/1.2.0/jmock-1.2.0.jar:/root/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar:/root/.m2/repository/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar:/root/.m2/repository/mockobjects/mockobjects-jdk1.3/0.09/mockobjects-jdk1.3-0.09.jar:/root/.m2/repository/org/testng/testng/5.14.10/testng-5.14.10.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/root/.m2/repository/commons-fileupload/commons-fileupload/1.3.2/commons-fileupload-1.3.2.jar:/root/.m2/repository/org/springframework/spring-context/4.1.6.RELEASE/spring-context-4.1.6.RELEASE.jar:/root/.m2/repository/sslext/sslext/1.2-0/sslext-1.2-0.jar:/root/.m2/repository/cglib/cglib-nodep/2.1_3/cglib-nodep-2.1_3.jar:/root/.m2/repository/antlr/antlr/2.7.2/antlr-2.7.2.jar:/root/.m2/repository/org/ow2/asm/asm-commons/5.1/asm-commons-5.1.jar:/root/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/root/.m2/repository/org/apache/struts/struts-tiles/1.3.8/struts-tiles-1.3.8.jar:/root/.m2/repository/org/easymock/easymock/3.4/easymock-3.4.jar:/root/.m2/repository/org/apache/logging/log4j/log4j-api/2.7/log4j-api-2.7.jar:/root/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar:/root/.m2/repository/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar:/root/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/root/.m2/repository/javax/servlet/jsp-api/2.0/jsp-api-2.0.jar:/root/.m2/repository/org/freemarker/freemarker/2.3.23/freemarker-2.3.23.jar:/root/.m2/repository/junit/junit/4.12/junit-4.12.jar:/root/.m2/repository/org/apache/struts/struts-annotations/1.0.6/struts-annotations-1.0.6.jar:/root/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.8.5/aspectjweaver-1.8.5.jar:/root/.m2/repository/org/springframework/spring-test/4.1.6.RELEASE/spring-test-4.1.6.RELEASE.jar";
echo "\n\nNode: `hostname`\n";
echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
08:31:46,637 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Could NOT find resource [logback-test.xml]
08:31:46,637 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Could NOT find resource [logback.groovy]
08:31:46,637 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Found resource [logback.xml] at [jar:file:/repair_tools/tbar.jar!/logback.xml]
08:31:46,652 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@32e02ddd - URL [jar:file:/repair_tools/tbar.jar!/logback.xml] is not of type file
08:31:46,689 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
08:31:46,691 |-INFO in ch.qos.logback.classic.joran.action.ContextNameAction - Setting logger context name as [TBar]
08:31:46,692 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
08:31:46,694 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
08:31:46,734 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.hibernate.engine.query.HQLQueryPlan] to DEBUG
08:31:46,734 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.hibernate.engine.query.HQLQueryPlan] to false
08:31:46,734 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [com.piedra.logback] to DEBUG
08:31:46,734 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - Could not find an appender named [FILE]. Did you define it below instead of above in the configuration file?
08:31:46,734 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - See http://logback.qos.ch/codes.html#appender_order for more details.
08:31:46,734 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to DEBUG
08:31:46,735 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
08:31:46,735 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - Could not find an appender named [ROLLINGFILE]. Did you define it below instead of above in the configuration file?
08:31:46,735 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - See http://logback.qos.ch/codes.html#appender_order for more details.
08:31:46,735 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
08:31:46,736 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@1be32243 - Registering current configuration as safe fallback point

2022-10-17 08:31:47.794 [main] INFO  edu.lu.uni.serval.tbar.AbstractFixer - TBar_vul4j_apache_struts_VUL4J-30 Failed Tests: 1
2022-10-17 08:31:47.797 [main] INFO  edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Start to fix suspicious code======
2022-10-17 08:31:47.797 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - com.opensymphony.xwork2.validator.validators.URLValidator ===58
2022-10-17 08:31:48.160 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
            addFieldError(fieldName, object);
        }
2022-10-17 08:31:49.582 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if ((!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) || (value.toString().length() == 0)) {
2022-10-17 08:31:49.582 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:31:50.699 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:32:15.696 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if ((!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) && (value.toString().length() == 0)) {
2022-10-17 08:32:15.696 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:32:16.884 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:32:42.181 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if ((!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) || !(value.toString().length() == 0)) {
2022-10-17 08:32:42.181 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:32:43.346 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:33:07.840 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if ((!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) && !(value.toString().length() == 0)) {
2022-10-17 08:33:07.840 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:33:08.902 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:33:33.417 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (value != object && (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches())) {
2022-10-17 08:33:33.417 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:33:34.575 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:33:58.996 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (value != object || (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches())) {
2022-10-17 08:33:58.996 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:33:59.944 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:34:25.732 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (value == object && (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches())) {
2022-10-17 08:34:25.732 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:34:26.594 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:34:51.106 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (value == object || (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches())) {
2022-10-17 08:34:51.106 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:34:52.178 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:35:17.362 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (!Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
2022-10-17 08:35:17.362 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:35:18.603 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:35:42.914 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (!(value.getClass().equals(String.class))) {
2022-10-17 08:35:42.914 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:35:44.066 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:36:08.904 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (!(value.getClass().equals(String.class)) && !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
2022-10-17 08:36:08.904 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:36:10.089 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:36:34.930 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (!(object.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
2022-10-17 08:36:34.931 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:36:36.065 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:37:00.626 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(object)).matches()) {
2022-10-17 08:37:00.627 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:37:01.826 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:37:26.781 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (!(getUrlRegex().getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
2022-10-17 08:37:26.781 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:37:27.744 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:37:52.532 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(getUrlRegex())).matches()) {
2022-10-17 08:37:52.532 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:37:53.444 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:38:18.246 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,9 +55,12 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (Pattern.CASE_INSENSITIVE != null) {
+	if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+	}
+
2022-10-17 08:38:18.247 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:38:19.322 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 08:38:19.339 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,10 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (Pattern.CASE_INSENSITIVE == null) {
+	    throw new IllegalArgumentException("Null 'Pattern.CASE_INSENSITIVE' argument.");
+	}
+if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
2022-10-17 08:38:19.339 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:38:20.394 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 08:38:20.412 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,10 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (Pattern.CASE_INSENSITIVE == null) {
+	    return;
+	}
+if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
2022-10-17 08:38:20.412 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:38:21.353 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 08:38:21.372 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,8 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (Pattern.CASE_INSENSITIVE == null) Pattern.CASE_INSENSITIVE = new null();
+ if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
2022-10-17 08:38:21.372 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:38:21.698 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 08:38:21.717 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,9 +55,11 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)) != null) {if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+	}
+
2022-10-17 08:38:21.717 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:38:22.817 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:38:47.278 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,9 +55,12 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        if (value.getClass() != null && Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)) != null && Pattern.CASE_INSENSITIVE != null) {
+	if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+	}
+
2022-10-17 08:38:47.279 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:38:48.382 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 08:38:48.428 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -46,7 +46,10 @@ public class URLValidator extends FieldValidatorSupport {
-        String fieldName = getFieldName();
+        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+            addFieldError(fieldName, object);
+        }
+	String fieldName = getFieldName();
@@ -55,9 +58,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
-            addFieldError(fieldName, object);
-        }
+
2022-10-17 08:38:48.429 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:38:49.563 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 08:38:49.579 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -47,7 +47,10 @@ public class URLValidator extends FieldValidatorSupport {
-        Object value = this.getFieldValue(fieldName, object);
+        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+            addFieldError(fieldName, object);
+        }
+	Object value = this.getFieldValue(fieldName, object);
@@ -55,9 +58,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
-            addFieldError(fieldName, object);
-        }
+
2022-10-17 08:38:49.579 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:38:50.729 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 08:38:50.746 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -51,13 +51,14 @@ public class URLValidator extends FieldValidatorSupport {
-        if (value == null || value.toString().length() == 0) {
-            return;
-        }
-
+	if (value == null || value.toString().length() == 0) {
+            return;
+        }
+
+
2022-10-17 08:38:50.746 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:38:51.836 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:39:16.405 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,9 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
-            addFieldError(fieldName, object);
-        }
+        addFieldError(fieldName, object);
2022-10-17 08:39:16.406 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:39:17.581 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:39:42.324 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,9 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
-            addFieldError(fieldName, object);
-        }
+
2022-10-17 08:39:42.324 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:39:43.425 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:40:07.666 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -45,20 +45,7 @@ public class URLValidator extends FieldValidatorSupport {
-    public void validate(Object object) throws ValidationException {
-        String fieldName = getFieldName();
-        Object value = this.getFieldValue(fieldName, object);
-
-        // if there is no value - don't do comparison
-        // if a value is required, a required validator should be added to the field
-        if (value == null || value.toString().length() == 0) {
-            return;
-        }
-
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
-            addFieldError(fieldName, object);
-        }
-    }
+
2022-10-17 08:40:07.666 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:40:08.801 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 08:40:08.830 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,9 +55,7 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
-            addFieldError(fieldName, object);
-        }
+        validate(value);
2022-10-17 08:40:08.830 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:40:09.971 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:40:34.965 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -55,7 +55,8 @@ public class URLValidator extends FieldValidatorSupport {
-        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
+        validate(value);
+	if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {
2022-10-17 08:40:34.965 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:40:36.068 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:41:00.792 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -58,6 +58,7 @@ public class URLValidator extends FieldValidatorSupport {
+	validate(value);
2022-10-17 08:41:00.792 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 08:41:01.969 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 08:41:27.509 [main] INFO  edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Finish off fixing======
Failed to fix bug


Node: 2c8178711f7b



Date: Mon Oct 17 08:41:27 EDT 2022

