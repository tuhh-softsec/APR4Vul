{
  "repair_end": "2022-09-08 23:10:45.783912", 
  "repair_begin": "2022-09-08 22:41:23.540164", 
  "patches": [
    {
      "PATCH_DIFF_ORIG": "--- \\/workdir\\/jGenProg_vul4j_neo4j_neo4j_VUL4J-62\\/enterprise\\/security\\/src\\/main\\/java\\/org\\/neo4j\\/server\\/security\\/enterprise\\/auth\\/LdapRealmjava\\n+++ \\/workdir\\/jGenProg_vul4j_neo4j_neo4j_VUL4J-62\\/enterprise\\/security\\/src\\/main\\/java\\/org\\/neo4j\\/server\\/security\\/enterprise\\/auth\\/LdapRealmjava\\n@@ -235,86 +235,86 @@\\n-\\t\\t\\treturn ctx;\\n-\\t\\t}\\n-\\t\\t catch (java.io.IOException e) \\n-\\t\\t{\\n-\\t\\t\\torg.apache.shiro.realm.ldap.LdapUtils.closeContext(ctx);\\n-\\t\\t\\tsecurityLog.error(withRealm(\\\"Failed to negotiate TLS connection with '%s': \\\", \\n-\\t\\t\\tserver(jndiLdapContextFactory), e));\\n-\\t\\t\\tthrow new javax.naming.CommunicationException(e.getMessage());\\n-\\t\\t}\\n-\\t\\t catch (java.lang.Throwable t) \\n-\\t\\t{\\n-\\t\\t\\torg.apache.shiro.realm.ldap.LdapUtils.closeContext(ctx);\\n-\\t\\t\\tsecurityLog.error(withRealm(\\\"Unexpected failure to negotiate TLS connection with '%s': \\\", \\n-\\t\\t\\tserver(jndiLdapContextFactory), t));\\n-\\t\\t\\tthrow t;\\n-\\t\\t}\\n-\\t}\\n-\\n-\\t@java.lang.Override\\n-\\tprotected org.apache.shiro.authz.AuthorizationInfo queryForAuthorizationInfo(org.apache.shiro.subject.PrincipalCollection principals, \\n-\\torg.apache.shiro.realm.ldap.LdapContextFactory ldapContextFactory) throws javax.naming.NamingException \\n-\\t{\\n-\\t\\tif (authorizationEnabled) \\n-\\t\\t{\\n-\\t\\t\\tjava.lang.String username = getUsername(principals);\\n-\\t\\t\\tif (username == null) \\n-\\t\\t\\t{\\n-\\t\\t\\t\\treturn null;\\n-\\t\\t\\t}\\n-\\n-\\t\\t\\tif (useSystemAccountForAuthorization) \\n-\\t\\t\\t{\\n-\\n-\\t\\t\\t\\tjavax.naming.ldap.LdapContext ldapContext = (useStartTls) ? getSystemLdapContextUsingStartTls(ldapContextFactory) : \\n-\\t\\t\\t\\tldapContextFactory.getSystemLdapContext();\\n-\\n-\\t\\t\\t\\tjava.util.Set<java.lang.String> roleNames;\\n-\\t\\t\\t\\ttry \\n-\\t\\t\\t\\t{\\n-\\t\\t\\t\\t\\troleNames = findRoleNamesForUser(username, ldapContext);\\n-\\t\\t\\t\\t} finally \\n-\\n-\\t\\t\\t\\t{\\n-\\t\\t\\t\\t\\torg.apache.shiro.realm.ldap.LdapUtils.closeContext(ldapContext);\\n-\\t\\t\\t\\t}\\n-\\n-\\t\\t\\t\\treturn new org.apache.shiro.authz.SimpleAuthorizationInfo(roleNames);\\n-\\t\\t\\t} else \\n-\\n-\\t\\t\\t{\\n-\\n-\\t\\t\\t\\torg.apache.shiro.cache.Cache<java.lang.Object, org.apache.shiro.authz.AuthorizationInfo> authorizationCache = getAuthorizationCache();\\n-\\t\\t\\t\\torg.apache.shiro.authz.AuthorizationInfo authorizationInfo = authorizationCache.get(username);\\n-\\t\\t\\t\\tif (authorizationInfo == null) \\n-\\t\\t\\t\\t{\\n-\\n-\\n-\\n-\\n-\\t\\t\\t\\t\\tthrow new org.neo4j.graphdb.security.AuthorizationExpiredException(\\\"LDAP authorization info expired.\\\");\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t\\treturn authorizationInfo;\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn null;\\n-\\t}\\n-\\n-\\tprivate java.lang.String getUsername(org.apache.shiro.subject.PrincipalCollection principals) \\n-\\t{\\n-\\t\\tjava.lang.String username = null;\\n-\\t\\tjava.util.Collection ldapPrincipals = principals.fromRealm(getName());\\n-\\t\\tif (!ldapPrincipals.isEmpty()) \\n-\\t\\t{\\n-\\t\\t\\tusername = ((java.lang.String) (ldapPrincipals.iterator().next()));\\n-\\t\\t} else \\n-\\t\\tif (useSystemAccountForAuthorization) \\n-\\t\\t{\\n-\\t\\t\\tusername = ((java.lang.String) (principals.getPrimaryPrincipal()));\\n-\\t\\t}\\n-\\t\\treturn username;\\n-\\t}\\n-\\n-\\tprivate javax.naming.ldap.LdapContext getSystemLdapContextUsingStartTls(org.apache.shiro.realm.ldap.LdapContextFactory ldapContextFactory) throws \\n-\\tjavax.naming.NamingException \\n-\\t{\\n-\\t\\torg.apache.shiro.realm.ldap.JndiLdapContextFactory jndiLdapContextFactory = ((org.apache.shiro.realm.ldap.JndiLdapContextFactory) (ldapContextFactory));\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n@@ -322 +322 @@\\n-\\t\\tjndiLdapContextFactory.getSystemPassword());\\n+\\t\\t\\tjndiLdapContextFactory.getSystemPassword());} catch (java.io.IOException e) { \\t\\t\\torg.apache.shiro.realm.ldap.LdapUtils.closeContext(ctx); \\t\\t\\tsecurityLog.error(withRealm(\\\"Failed to negotiate TLS connection with '%s': \\\", server(jndiLdapContextFactory), e)); \\t\\t\\tthrow new javax.naming.CommunicationException(e.getMessage());} catch (java.lang.Throwable t) { \\t\\t\\torg.apache.shiro.realm.ldap.LdapUtils.closeContext(ctx); \\t\\t\\tsecurityLog.error(withRealm(\\\"Unexpected failure to negotiate TLS connection with '%s': \\\", server(jndiLdapContextFactory), t)); \\t\\t\\tthrow t;}} \\t@java.lang.Override \\tprotected org.apache.shiro.authz.AuthorizationInfo queryForAuthorizationInfo(org.apache.shiro.subject.PrincipalCollection principals, org.apache.shiro.realm.ldap.LdapContextFactory ldapContextFactory) throws javax.naming.NamingException { \\t\\tif (authorizationEnabled) { \\t\\t\\tjava.lang.String username = getUsername(principals); \\t\\t\\tif (username == null) { \\t\\t\\t\\treturn null;} \\t\\t\\tif (useSystemAccountForAuthorization) { \\t\\t\\t\\tjavax.naming.ldap.LdapContext ldapContext = (useStartTls) ? getSystemLdapContextUsingStartTls(ldapContextFactory) : ldapContextFactory.getSystemLdapContext(); \\t\\t\\t\\tjava.util.Set<java.lang.String> roleNames; \\t\\t\\t\\ttry { \\t\\t\\t\\t\\troleNames = findRoleNamesForUser(username, ldapContext);} finally { \\t\\t\\t\\t\\torg.apache.shiro.realm.ldap.LdapUtils.closeContext(ldapContext);} \\t\\t\\t\\treturn new org.apache.shiro.authz.SimpleAuthorizationInfo(roleNames);} else { \\t\\t\\t\\torg.apache.shiro.cache.Cache<java.lang.Object, org.apache.shiro.authz.AuthorizationInfo> authorizationCache = getAuthorizationCache(); \\t\\t\\t\\torg.apache.shiro.authz.AuthorizationInfo authorizationInfo = authorizationCache.get(username); \\t\\t\\t\\tif (authorizationInfo == null) { \\t\\t\\t\\t\\tthrow new org.neo4j.graphdb.security.AuthorizationExpiredException(\\\"LDAP authorization info expired.\\\");} \\t\\t\\t\\treturn authorizationInfo;}} \\t\\treturn null;} \\tprivate java.lang.String getUsername(org.apache.shiro.subject.PrincipalCollection principals) { \\t\\tjava.lang.String username = null; \\t\\tjava.util.Collection ldapPrincipals = principals.fromRealm(getName()); \\t\\tif (!ldapPrincipals.isEmpty()) { \\t\\t\\tusername = ((java.lang.String) (ldapPrincipals.iterator().next()));} else if (useSystemAccountForAuthorization) { \\t\\t\\tusername = ((java.lang.String) (principals.getPrimaryPrincipal()));} \\t\\treturn username;} \\tprivate javax.naming.ldap.LdapContext getSystemLdapContextUsingStartTls(org.apache.shiro.realm.ldap.LdapContextFactory ldapContextFactory) throws javax.naming.NamingException { \\t\\torg.apache.shiro.realm.ldap.JndiLdapContextFactory jndiLdapContextFactory = ((org.apache.shiro.realm.ldap.JndiLdapContextFactory) (ldapContextFactory)); \\t\\treturn getLdapContextUsingStartTls(ldapContextFactory, jndiLdapContextFactory.getSystemUsername(), jndiLdapContextFactory.getSystemPassword());\\n\\n", 
      "patchhunks": [
        {
          "MODIFIED_FILE_PATH": "\\/workdir\\/jGenProg_vul4j_neo4j_neo4j_VUL4J-62\\/.\\/output_astor\\/AstorMain-neo4j_neo4j-VUL4J-62\\/\\/src\\/\\/variant-104\\/org\\/neo4j\\/server\\/security\\/enterprise\\/auth\\/LdapRealm.java", 
          "ORIGINAL_CODE": "return ctx", 
          "INGREDIENT_SCOPE": "LOCAL", 
          "PATCH_HUNK_CODE": "return getLdapContextUsingStartTls(ldapContextFactory, jndiLdapContextFactory.getSystemUsername(), \\njndiLdapContextFactory.getSystemPassword())", 
          "INGREDIENT_PARENT": "return getLdapContextUsingStartTls(ldapContextFactory, jndiLdapContextFactory.getSystemUsername(), \\njndiLdapContextFactory.getSystemPassword())", 
          "LOCATION": "org.neo4j.server.security.enterprise.auth.LdapRealm", 
          "BUGGY_CODE_TYPE": "CtReturnImpl|CtBlockImpl", 
          "OPERATOR": "ReplaceOp", 
          "PATH": "\\/workdir\\/jGenProg_vul4j_neo4j_neo4j_VUL4J-62\\/enterprise\\/security\\/src\\/main\\/java\\/org\\/neo4j\\/server\\/security\\/enterprise\\/auth\\/LdapRealm.java", 
          "LINE": "235", 
          "MP_RANKING": "1", 
          "SUSPICIOUNESS": "1", 
          "PATCH_HUNK_TYPE": "CtReturnImpl|CtBlockImpl"
        }
      ], 
      "GENERATION": "52", 
      "VARIANT_ID": "104", 
      "TIME": "1661", 
      "VALIDATION": "|true|0|0|[]|", 
      "FOLDER_SOLUTION_CODE": "\\/workdir\\/jGenProg_vul4j_neo4j_neo4j_VUL4J-62\\/.\\/output_astor\\/AstorMain-neo4j_neo4j-VUL4J-62\\/\\/src\\/\\/variant-104"
    }
  ]
}