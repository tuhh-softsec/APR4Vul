cd /workdir/TBar_vul4j_inversoft_prime-jwt_VUL4J-48;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-8-openjdk-amd64/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m \
    -cp /script/../libs/tbar_external/com.gzoltar-0.1.1-jdk7.jar:/script/../repair_tools/tbar.jar edu.lu.uni.serval.tbar.main.Main \
    "/workdir/TBar_vul4j_inversoft_prime-jwt_VUL4J-48" "org.primeframework.jwt.VulnerabilityTest#test_unsecuredJWT_validation" "/src/main/java/" "/src/test/java/" "/target/classes/" "/target/test-classes/" "/script/../data/benchmarks/vul4j/perfectfl/VUL4J-48/spectra.txt" "mvn test -Dtest=org.primeframework.jwt.VulnerabilityTest#test_unsecuredJWT_validation -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" "mvn test -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" "/root/.m2/repository/com/beust/jcommander/1.27/jcommander-1.27.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/root/.m2/repository/org/testng/testng/6.8.7/testng-6.8.7.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.8.1/jackson-core-2.8.1.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.8.1/jackson-annotations-2.8.1.jar:/root/.m2/repository/org/yaml/snakeyaml/1.12/snakeyaml-1.12.jar:/root/.m2/repository/junit/junit/4.10/junit-4.10.jar:/root/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.8.1/jackson-databind-2.8.1.jar";
echo "\n\nNode: `hostname`\n";
echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
09:28:58,327 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Could NOT find resource [logback-test.xml]
09:28:58,327 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Could NOT find resource [logback.groovy]
09:28:58,327 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Found resource [logback.xml] at [jar:file:/repair_tools/tbar.jar!/logback.xml]
09:28:58,336 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@5a42bbf4 - URL [jar:file:/repair_tools/tbar.jar!/logback.xml] is not of type file
09:28:58,373 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
09:28:58,374 |-INFO in ch.qos.logback.classic.joran.action.ContextNameAction - Setting logger context name as [TBar]
09:28:58,374 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
09:28:58,377 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
09:28:58,417 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.hibernate.engine.query.HQLQueryPlan] to DEBUG
09:28:58,417 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.hibernate.engine.query.HQLQueryPlan] to false
09:28:58,417 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [com.piedra.logback] to DEBUG
09:28:58,417 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - Could not find an appender named [FILE]. Did you define it below instead of above in the configuration file?
09:28:58,417 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - See http://logback.qos.ch/codes.html#appender_order for more details.
09:28:58,417 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to DEBUG
09:28:58,417 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
09:28:58,418 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - Could not find an appender named [ROLLINGFILE]. Did you define it below instead of above in the configuration file?
09:28:58,418 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - See http://logback.qos.ch/codes.html#appender_order for more details.
09:28:58,418 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
09:28:58,419 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@270421f5 - Registering current configuration as safe fallback point

2022-10-17 09:28:58.475 [main] INFO  edu.lu.uni.serval.tbar.AbstractFixer - TBar_vul4j_inversoft_prime-jwt_VUL4J-48 Failed Tests: 1
2022-10-17 09:28:58.487 [main] INFO  edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Start to fix suspicious code======
2022-10-17 09:28:58.487 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.primeframework.jwt.JWTDecoder ===154
2022-10-17 09:28:58.890 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
int index = encodedJWT.lastIndexOf(".");
2022-10-17 09:28:59.661 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,7 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    double index = encodedJWT.lastIndexOf(".");
2022-10-17 09:28:59.661 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:00.230 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:00.237 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,7 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    float index = encodedJWT.lastIndexOf(".");
2022-10-17 09:29:00.238 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:00.754 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:00.764 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,7 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    long index = encodedJWT.lastIndexOf(".");
2022-10-17 09:29:00.764 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:01.390 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:01.396 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,7 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    short index = encodedJWT.lastIndexOf(".");
2022-10-17 09:29:01.396 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:01.958 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:01.964 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,7 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    char index = encodedJWT.lastIndexOf(".");
2022-10-17 09:29:01.964 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:02.578 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:02.584 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,7 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    byte index = encodedJWT.lastIndexOf(".");
2022-10-17 09:29:02.584 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:03.134 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:03.176 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,7 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    int index = getInstance().lastIndexOf(".");
2022-10-17 09:29:03.176 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:03.803 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:03.829 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,9 +151,12 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    if (encodedJWT != null) {
+	int index = encodedJWT.lastIndexOf(".");
+	}
+
2022-10-17 09:29:03.830 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:04.426 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:04.432 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,10 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    if (encodedJWT == null) {
+	    throw new IllegalArgumentException("Null 'encodedJWT' argument.");
+	}
+int index = encodedJWT.lastIndexOf(".");
2022-10-17 09:29:04.432 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:04.973 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:29:09.430 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,10 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    if (encodedJWT == null) {
+	    return null;
+	}
+int index = encodedJWT.lastIndexOf(".");
2022-10-17 09:29:09.430 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:10.043 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:29:13.653 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,8 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    if (encodedJWT == null) encodedJWT = new String();
+ int index = encodedJWT.lastIndexOf(".");
2022-10-17 09:29:13.653 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:14.291 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:29:18.049 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,8 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    if (encodedJWT == null) return new JWT();
+	 int index = encodedJWT.lastIndexOf(".");
2022-10-17 09:29:18.049 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:18.749 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:29:22.601 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,7 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+
2022-10-17 09:29:22.601 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:23.150 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:23.166 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -150,41 +150,7 @@ public class JWTDecoder {
-  private JWT decode(String encodedJWT, Header header, String[] parts, Verifier verifier) {
-    int index = encodedJWT.lastIndexOf(".");
-    // The message comprises the first two segments of the entire JWT, the signature is the last segment.
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
-
-    // If a signature is provided and verifier must be provided.
-    if (parts.length == 3 && verifier == null) {
-      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
-    }
-
-    // A verifier was provided but no signature exists, this is treated as an invalid signature.
-    if (parts.length == 2 && verifier != null) {
-      throw new InvalidJWTSignatureException();
-    }
-
-    if (parts.length == 3) {
-      // Verify the signature before de-serializing the payload.
-      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
-      verifier.verify(header.algorithm, message, signature);
-    }
-
-    JWT jwt = Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-
-    // Verify expiration claim
-    if (jwt.isExpired()) {
-      throw new JWTExpiredException();
-    }
-
-    // Verify the notBefore claim
-    if (jwt.isUnavailableForProcessing()) {
-      throw new JWTUnavailableForProcessingException();
-    }
-
-    return jwt;
-  }
+
2022-10-17 09:29:23.166 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:23.755 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:23.777 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.primeframework.jwt.JWTDecoder ===156
2022-10-17 09:29:23.801 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
2022-10-17 09:29:23.845 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,7 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    byte[] message = getInstance().substring(0, index).getBytes(StandardCharsets.UTF_8);
2022-10-17 09:29:23.845 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:24.517 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:24.524 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,7 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    byte[] message = encodedJWT.substring(0, getInstance()).getBytes(StandardCharsets.UTF_8);
2022-10-17 09:29:24.524 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:25.135 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:25.161 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,10 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (encodedJWT != null) {
+	byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+	}
+
2022-10-17 09:29:25.161 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:25.802 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:25.808 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,10 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (encodedJWT == null) {
+	    throw new IllegalArgumentException("Null 'encodedJWT' argument.");
+	}
+byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
2022-10-17 09:29:25.808 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:26.417 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:29:30.240 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,10 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (encodedJWT == null) {
+	    return null;
+	}
+byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
2022-10-17 09:29:30.240 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:30.848 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:29:34.757 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,8 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (encodedJWT == null) encodedJWT = new String();
+ byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
2022-10-17 09:29:34.757 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:35.405 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:29:39.322 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,8 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (encodedJWT == null) return new JWT();
+	 byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
2022-10-17 09:29:39.322 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:40.015 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:29:43.620 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,10 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (StandardCharsets.UTF_8 != null) {
+	byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+	}
+
2022-10-17 09:29:43.621 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:44.202 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:44.208 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,10 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (StandardCharsets.UTF_8 == null) {
+	    throw new IllegalArgumentException("Null 'StandardCharsets.UTF_8' argument.");
+	}
+byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
2022-10-17 09:29:44.208 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:44.835 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:29:48.589 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,10 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (StandardCharsets.UTF_8 == null) {
+	    return null;
+	}
+byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
2022-10-17 09:29:48.589 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:49.273 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:29:53.075 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,8 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (StandardCharsets.UTF_8 == null) StandardCharsets.UTF_8 = new null();
+ byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
2022-10-17 09:29:53.075 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:53.375 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:53.381 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,8 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (StandardCharsets.UTF_8 == null) return new JWT();
+	 byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
2022-10-17 09:29:53.381 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:53.961 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:29:57.788 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,10 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (encodedJWT != null && StandardCharsets.UTF_8 != null) {
+	byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+	}
+
2022-10-17 09:29:57.788 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:58.368 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:58.434 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,7 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+
2022-10-17 09:29:58.434 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:59.107 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:29:59.116 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.primeframework.jwt.JWTDecoder ===168
2022-10-17 09:29:59.126 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
if (parts.length == 3) {
      // Verify the signature before de-serializing the payload.
      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
      verifier.verify(header.algorithm, message, signature);
    }
2022-10-17 09:29:59.141 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if (parts.length!=3) {
2022-10-17 09:29:59.141 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:29:59.730 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:03.597 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if (parts.length<3) {
2022-10-17 09:30:03.597 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:04.337 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:08.426 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if (parts.length<=3) {
2022-10-17 09:30:08.426 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:09.079 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:12.908 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if (parts.length>3) {
2022-10-17 09:30:12.908 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:13.578 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:17.484 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if (parts.length>=3) {
2022-10-17 09:30:17.484 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:18.129 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:21.905 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || (parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:30:21.905 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:22.577 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:30:22.582 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && (parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:30:22.582 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:23.216 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:30:23.223 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || !(parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:30:23.223 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:23.895 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:30:23.902 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && !(parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:30:23.902 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:24.491 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:30:24.497 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || (parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:30:24.497 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:25.179 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:28.768 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && (parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:30:28.769 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:29.417 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:32.934 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || !(parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:30:32.935 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:33.576 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:37.215 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && !(parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:30:37.215 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:37.842 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:41.680 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || (parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:30:41.680 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:42.235 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:30:42.245 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && (parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:30:42.245 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:42.787 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:30:42.792 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || !(parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:30:42.793 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:43.391 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:30:43.397 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && !(parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:30:43.397 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:43.919 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:30:43.924 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || (parts.length == 2)) {
2022-10-17 09:30:43.924 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:44.525 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:48.076 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && (parts.length == 2)) {
2022-10-17 09:30:48.076 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:48.762 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:52.539 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || !(parts.length == 2)) {
2022-10-17 09:30:52.539 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:53.235 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:30:57.287 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && !(parts.length == 2)) {
2022-10-17 09:30:57.287 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:30:57.933 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:01.721 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || ((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:31:01.721 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:02.388 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:06.150 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && ((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:31:06.151 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:06.785 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:10.776 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || !((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:31:10.776 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:11.404 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:15.807 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && !((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:31:15.807 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:16.402 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:20.064 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || (verifiers.length == 0)) {
2022-10-17 09:31:20.065 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:20.707 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:31:20.713 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && (verifiers.length == 0)) {
2022-10-17 09:31:20.713 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:21.318 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:31:21.325 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) || !(verifiers.length == 0)) {
2022-10-17 09:31:21.325 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:21.907 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:31:21.912 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,7 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+    if ((parts.length == 3) && !(verifiers.length == 0)) {
2022-10-17 09:31:21.912 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:22.481 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:31:22.604 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -151,7 +151,12 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    if (parts.length == 3) {
+      // Verify the signature before de-serializing the payload.
+      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
+      verifier.verify(header.algorithm, message, signature);
+    }
+	int index = encodedJWT.lastIndexOf(".");
@@ -165,11 +170,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
-      // Verify the signature before de-serializing the payload.
-      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
-      verifier.verify(header.algorithm, message, signature);
-    }
+
2022-10-17 09:31:22.604 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:23.230 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:31:23.236 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -153,7 +153,12 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+    if (parts.length == 3) {
+      // Verify the signature before de-serializing the payload.
+      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
+      verifier.verify(header.algorithm, message, signature);
+    }
+	byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
@@ -165,11 +170,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
-      // Verify the signature before de-serializing the payload.
-      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
-      verifier.verify(header.algorithm, message, signature);
-    }
+
2022-10-17 09:31:23.236 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:23.866 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:31:23.872 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -156,7 +156,12 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length == 3) {
+      // Verify the signature before de-serializing the payload.
+      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
+      verifier.verify(header.algorithm, message, signature);
+    }
+	if (parts.length == 3 && verifier == null) {
@@ -165,11 +170,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
-      // Verify the signature before de-serializing the payload.
-      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
-      verifier.verify(header.algorithm, message, signature);
-    }
+
2022-10-17 09:31:23.872 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:24.488 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:28.201 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -161,15 +161,16 @@ public class JWTDecoder {
-    if (parts.length == 2 && verifier != null) {
-      throw new InvalidJWTSignatureException();
-    }
-
+	if (parts.length == 2 && verifier != null) {
+      throw new InvalidJWTSignatureException();
+    }
+
+
2022-10-17 09:31:28.202 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:28.842 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:32.557 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,13 +165,15 @@ public class JWTDecoder {
-    if (parts.length == 3) {
+
+
+    JWT jwt = Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+	if (parts.length == 3) {
-    JWT jwt = Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
2022-10-17 09:31:32.557 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:33.250 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:36.874 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,11 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
-      // Verify the signature before de-serializing the payload.
-      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
-      verifier.verify(header.algorithm, message, signature);
-    }
+
@@ -177,6 +173,12 @@ public class JWTDecoder {
+	if (parts.length == 3) {
+      // Verify the signature before de-serializing the payload.
+      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
+      verifier.verify(header.algorithm, message, signature);
+    }
+
2022-10-17 09:31:36.874 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:37.475 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:41.577 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,11 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
-      // Verify the signature before de-serializing the payload.
-      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
-      verifier.verify(header.algorithm, message, signature);
-    }
+
@@ -182,6 +178,12 @@ public class JWTDecoder {
+	if (parts.length == 3) {
+      // Verify the signature before de-serializing the payload.
+      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
+      verifier.verify(header.algorithm, message, signature);
+    }
+
2022-10-17 09:31:41.578 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:42.141 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:45.745 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,11 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
-      // Verify the signature before de-serializing the payload.
-      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
-      verifier.verify(header.algorithm, message, signature);
-    }
+
@@ -184,6 +180,12 @@ public class JWTDecoder {
+	if (parts.length == 3) {
+      // Verify the signature before de-serializing the payload.
+      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
+      verifier.verify(header.algorithm, message, signature);
+    }
+
2022-10-17 09:31:45.746 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:46.381 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:31:46.406 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,11 +165,8 @@ public class JWTDecoder {
-    if (parts.length == 3) {
-      // Verify the signature before de-serializing the payload.
-      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
+    byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
-    }
2022-10-17 09:31:46.406 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:47.034 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:51.210 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -165,11 +165,7 @@ public class JWTDecoder {
-    if (parts.length == 3) {
-      // Verify the signature before de-serializing the payload.
-      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
-      verifier.verify(header.algorithm, message, signature);
-    }
+
2022-10-17 09:31:51.211 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:31:51.833 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:31:55.625 [main] INFO  edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Finish off fixing======
Failed to fix bug


Node: 2c8178711f7b



Date: Mon Oct 17 09:31:55 EDT 2022

