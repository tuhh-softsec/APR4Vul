cd /workdir/TBar_vul4j_inversoft_prime-jwt_VUL4J-49;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-8-openjdk-amd64/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m \
    -cp /script/../libs/tbar_external/com.gzoltar-0.1.1-jdk7.jar:/script/../repair_tools/tbar.jar edu.lu.uni.serval.tbar.main.Main \
    "/workdir/TBar_vul4j_inversoft_prime-jwt_VUL4J-49" "org.primeframework.jwt.JWTTest#test_SingedWithoutSignature" "/src/main/java/" "/src/test/java/" "/target/classes/" "/target/test-classes/" "/script/../data/benchmarks/vul4j/perfectfl/VUL4J-49/spectra.txt" "mvn test -Dtest=org.primeframework.jwt.JWTTest#test_SingedWithoutSignature -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" "mvn test -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" "/root/.m2/repository/com/beust/jcommander/1.27/jcommander-1.27.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/root/.m2/repository/org/testng/testng/6.8.7/testng-6.8.7.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.8.1/jackson-core-2.8.1.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.8.1/jackson-annotations-2.8.1.jar:/root/.m2/repository/org/yaml/snakeyaml/1.12/snakeyaml-1.12.jar:/root/.m2/repository/junit/junit/4.10/junit-4.10.jar:/root/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.8.1/jackson-databind-2.8.1.jar";
echo "\n\nNode: `hostname`\n";
echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
09:32:06,439 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Could NOT find resource [logback-test.xml]
09:32:06,439 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Could NOT find resource [logback.groovy]
09:32:06,439 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Found resource [logback.xml] at [jar:file:/repair_tools/tbar.jar!/logback.xml]
09:32:06,448 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@5a42bbf4 - URL [jar:file:/repair_tools/tbar.jar!/logback.xml] is not of type file
09:32:06,495 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
09:32:06,497 |-INFO in ch.qos.logback.classic.joran.action.ContextNameAction - Setting logger context name as [TBar]
09:32:06,497 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
09:32:06,499 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
09:32:06,536 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.hibernate.engine.query.HQLQueryPlan] to DEBUG
09:32:06,536 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.hibernate.engine.query.HQLQueryPlan] to false
09:32:06,536 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [com.piedra.logback] to DEBUG
09:32:06,536 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - Could not find an appender named [FILE]. Did you define it below instead of above in the configuration file?
09:32:06,536 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - See http://logback.qos.ch/codes.html#appender_order for more details.
09:32:06,536 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to DEBUG
09:32:06,536 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
09:32:06,537 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - Could not find an appender named [ROLLINGFILE]. Did you define it below instead of above in the configuration file?
09:32:06,537 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - See http://logback.qos.ch/codes.html#appender_order for more details.
09:32:06,537 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
09:32:06,538 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@270421f5 - Registering current configuration as safe fallback point

2022-10-17 09:32:06.610 [main] INFO  edu.lu.uni.serval.tbar.AbstractFixer - TBar_vul4j_inversoft_prime-jwt_VUL4J-49 Failed Tests: 1
2022-10-17 09:32:06.614 [main] INFO  edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Start to fix suspicious code======
2022-10-17 09:32:06.614 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.primeframework.jwt.JWTDecoder ===69
2022-10-17 09:32:06.995 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
    }
2022-10-17 09:32:07.713 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm!=Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:32:07.713 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:08.347 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:32:12.174 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm<Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:32:12.175 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:12.799 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:32:12.806 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm<=Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:32:12.806 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:13.410 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:32:13.417 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm>Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:32:13.417 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:14.022 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:32:14.029 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm>=Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:32:14.029 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:14.602 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:32:14.608 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm != Algorithm.none && parts.length != 2 && verifiers.length == 0) {
2022-10-17 09:32:14.608 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:15.298 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:32:19.135 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm < Algorithm.none && parts.length < 2 && verifiers.length == 0) {
2022-10-17 09:32:19.135 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:19.678 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:32:19.685 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm <= Algorithm.none && parts.length <= 2 && verifiers.length == 0) {
2022-10-17 09:32:19.685 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:20.250 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:32:20.255 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm > Algorithm.none && parts.length > 2 && verifiers.length == 0) {
2022-10-17 09:32:20.255 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:20.839 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:32:20.858 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm >= Algorithm.none && parts.length >= 2 && verifiers.length == 0) {
2022-10-17 09:32:20.858 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:21.370 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:32:21.376 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length!=2 && verifiers.length == 0) {
2022-10-17 09:32:21.376 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:21.974 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:32:25.670 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length<2 && verifiers.length == 0) {
2022-10-17 09:32:25.670 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:26.278 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:32:30.192 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length<=2 && verifiers.length == 0) {
2022-10-17 09:32:30.192 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:30.804 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:32:34.754 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length>2 && verifiers.length == 0) {
2022-10-17 09:32:34.754 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:35.401 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:32:39.367 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length>=2 && verifiers.length == 0) {
2022-10-17 09:32:39.367 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:40.039 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:32:43.895 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length!=0) {
2022-10-17 09:32:43.895 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:44.518 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:32:48.376 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length<0) {
2022-10-17 09:32:48.376 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:49.004 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:32:52.867 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length<=0) {
2022-10-17 09:32:52.867 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:53.458 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:32:57.032 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length>0) {
2022-10-17 09:32:57.033 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:32:57.655 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:01.675 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length>=0) {
2022-10-17 09:33:01.675 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:02.377 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:06.304 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || (v.canVerify(header.algorithm))) {
2022-10-17 09:33:06.305 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:06.844 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:33:06.850 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && (v.canVerify(header.algorithm))) {
2022-10-17 09:33:06.850 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:07.462 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:33:07.467 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || !(v.canVerify(header.algorithm))) {
2022-10-17 09:33:07.467 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:08.020 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:33:08.026 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && !(v.canVerify(header.algorithm))) {
2022-10-17 09:33:08.026 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:08.623 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:33:08.629 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:33:08.629 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:09.244 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:33:09.250 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:33:09.250 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:09.851 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:33:09.866 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || !(header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:33:09.866 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:10.423 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:33:10.428 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && !(header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:33:10.428 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:10.988 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:33:10.994 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || (parts.length == 3)) {
2022-10-17 09:33:10.994 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:11.555 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:15.238 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && (parts.length == 3)) {
2022-10-17 09:33:15.238 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:15.895 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:19.808 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || !(parts.length == 3)) {
2022-10-17 09:33:19.808 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:20.426 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:24.087 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && !(parts.length == 3)) {
2022-10-17 09:33:24.087 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:24.685 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:28.299 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || (parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:33:28.299 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:28.923 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:32.836 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && (parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:33:32.836 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:33.487 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:37.360 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || !(parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:33:37.360 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:37.914 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:41.715 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && !(parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:33:41.715 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:42.333 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:45.967 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || ((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:33:45.967 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:46.608 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:50.678 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && ((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:33:50.678 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:51.230 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:54.655 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || !((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:33:54.656 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:55.250 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:33:58.997 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && !((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:33:58.997 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:33:59.596 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:03.770 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || (verifiers.isEmpty())) {
2022-10-17 09:34:03.770 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:04.415 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:34:04.421 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && (verifiers.isEmpty())) {
2022-10-17 09:34:04.421 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:04.946 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:34:04.951 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || !(verifiers.isEmpty())) {
2022-10-17 09:34:04.951 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:05.588 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:34:05.594 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && !(verifiers.isEmpty())) {
2022-10-17 09:34:05.594 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:06.179 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:34:06.185 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || (!verifier.canVerify(header.algorithm))) {
2022-10-17 09:34:06.185 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:06.797 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:34:06.802 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && (!verifier.canVerify(header.algorithm))) {
2022-10-17 09:34:06.803 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:07.467 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:34:07.472 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) || !(!verifier.canVerify(header.algorithm))) {
2022-10-17 09:34:07.473 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:08.116 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:34:08.123 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) && !(!verifier.canVerify(header.algorithm))) {
2022-10-17 09:34:08.123 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:08.718 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:34:08.770 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:34:08.771 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:09.333 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:13.270 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && verifiers.length == 0) {
2022-10-17 09:34:13.270 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:13.932 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:17.884 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length == 2) {
2022-10-17 09:34:17.884 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:18.543 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:22.464 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (verifiers.length == 0) {
2022-10-17 09:34:22.464 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:23.061 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:26.881 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none || parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:34:26.881 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:27.519 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:31.336 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == Algorithm.none && parts.length == 2 || verifiers.length == 0) {
2022-10-17 09:34:31.336 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:31.949 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:35.777 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,9 +66,12 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm != null) {
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+	}
+
2022-10-17 09:34:35.777 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:36.394 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:40.311 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,10 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == null) {
+	    throw new IllegalArgumentException("Null 'header.algorithm' argument.");
+	}
+if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:34:40.311 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:41.009 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:45.018 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,10 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == null) {
+	    return null;
+	}
+if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:34:45.018 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:45.579 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:49.494 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,8 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == null) header.algorithm = new null();
+ if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:34:49.494 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:49.802 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:34:49.807 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,8 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm == null) return new JWT();
+	 if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:34:49.807 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:50.457 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:54.281 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,9 +66,12 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (Algorithm.none != null) {
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+	}
+
2022-10-17 09:34:54.281 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:54.829 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:34:58.473 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,10 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (Algorithm.none == null) {
+	    throw new IllegalArgumentException("Null 'Algorithm.none' argument.");
+	}
+if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:34:58.473 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:34:59.134 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:02.968 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,10 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (Algorithm.none == null) {
+	    return null;
+	}
+if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:35:02.968 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:03.526 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:07.247 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,8 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (Algorithm.none == null) Algorithm.none = new null();
+ if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:35:07.247 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:07.585 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:07.591 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,7 +66,8 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (Algorithm.none == null) return new JWT();
+	 if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
2022-10-17 09:35:07.591 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:08.209 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:11.914 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,9 +66,12 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+    if (header.algorithm != null && Algorithm.none != null) {
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+	}
+
2022-10-17 09:35:11.914 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:12.532 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:16.264 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -58,7 +58,10 @@ public class JWTDecoder {
-    Objects.requireNonNull(encodedJWT);
+    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+    }
+	Objects.requireNonNull(encodedJWT);
@@ -66,9 +69,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
2022-10-17 09:35:16.264 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:16.867 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:16.872 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -59,16 +59,17 @@ public class JWTDecoder {
-    Objects.requireNonNull(verifiers);
+    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+    }
+	Objects.requireNonNull(verifiers);
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
2022-10-17 09:35:16.872 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:17.384 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:17.390 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -62,13 +62,14 @@ public class JWTDecoder {
-    String[] parts = getParts(encodedJWT);
-    Header header = Mapper.deserialize(base64Decode(parts[0].getBytes(StandardCharsets.UTF_8)), Header.class);
-
-    // Be particular about decoding an unsecured JWT. If the JWT is signed or any verifiers were provided don't do it.
+	String[] parts = getParts(encodedJWT);
+    Header header = Mapper.deserialize(base64Decode(parts[0].getBytes(StandardCharsets.UTF_8)), Header.class);
+
+    // Be particular about decoding an unsecured JWT. If the JWT is signed or any verifiers were provided don't do it.
+
2022-10-17 09:35:17.390 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:17.997 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:18.003 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -63,12 +63,13 @@ public class JWTDecoder {
-    Header header = Mapper.deserialize(base64Decode(parts[0].getBytes(StandardCharsets.UTF_8)), Header.class);
-
-    // Be particular about decoding an unsecured JWT. If the JWT is signed or any verifiers were provided don't do it.
+	Header header = Mapper.deserialize(base64Decode(parts[0].getBytes(StandardCharsets.UTF_8)), Header.class);
+
+    // Be particular about decoding an unsecured JWT. If the JWT is signed or any verifiers were provided don't do it.
+
2022-10-17 09:35:18.003 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:18.578 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:18.585 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,12 +66,14 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+    }
+
2022-10-17 09:35:18.585 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:19.278 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:22.981 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,9 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
@@ -77,6 +75,10 @@ public class JWTDecoder {
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+    }
+
2022-10-17 09:35:22.981 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:23.539 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:27.413 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,9 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
@@ -79,6 +77,10 @@ public class JWTDecoder {
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
+      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+    }
+
2022-10-17 09:35:27.413 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:28.019 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:28.062 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,9 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+    return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
2022-10-17 09:35:28.062 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:28.632 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:28.638 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -66,9 +66,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
2022-10-17 09:35:28.638 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:29.253 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:33.048 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -46,40 +46,7 @@ public class JWTDecoder {
-  /**
-   * Decode the JWT using one of they provided verifiers. One more verifiers may be provided, the first verifier found
-   * supporting the algorithm reported by the JWT header will be utilized.
-   * <p>
-   * A JWT that is expired or not yet valid will not be decoded, instead a {@link JWTExpiredException} or {@link
-   * JWTUnavailableForProcessingException} exception will be thrown respectively.
-   *
-   * @param encodedJWT The encoded JWT in string format.
-   * @param verifiers  A map of verifiers.
-   * @return a decoded JWT.
-   */
-  public JWT decode(String encodedJWT, Verifier... verifiers) {
-    Objects.requireNonNull(encodedJWT);
-    Objects.requireNonNull(verifiers);
-
-    // An unsecured JWT will not contain a signature and should only have a header and a payload.
-    String[] parts = getParts(encodedJWT);
-    Header header = Mapper.deserialize(base64Decode(parts[0].getBytes(StandardCharsets.UTF_8)), Header.class);
-
-    // Be particular about decoding an unsecured JWT. If the JWT is signed or any verifiers were provided don't do it.
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
-
-    // If verifiers were provided, ensure it is able to verify this JWT.
-    Verifier verifier = null;
-    for (Verifier v : verifiers) {
-      if (v.canVerify(header.algorithm)) {
-        verifier = v;
-      }
-    }
-
-    return decode(encodedJWT, header, parts, verifier);
-  }
+
2022-10-17 09:35:33.048 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:33.718 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:37.539 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.primeframework.jwt.JWTDecoder ===119
2022-10-17 09:35:37.574 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
    }
2022-10-17 09:35:37.613 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm!=Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:35:37.613 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:38.273 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:41.956 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm<Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:35:41.957 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:42.601 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:42.607 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm<=Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:35:42.607 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:43.151 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:43.156 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm>Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:35:43.157 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:43.749 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:43.755 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm>=Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:35:43.755 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:44.303 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:44.312 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm != Algorithm.none && parts.length != 2 && verifiers.isEmpty()) {
2022-10-17 09:35:44.312 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:44.984 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:48.624 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm < Algorithm.none && parts.length < 2 && verifiers.isEmpty()) {
2022-10-17 09:35:48.624 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:49.180 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:49.189 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm <= Algorithm.none && parts.length <= 2 && verifiers.isEmpty()) {
2022-10-17 09:35:49.189 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:49.810 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:49.816 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm > Algorithm.none && parts.length > 2 && verifiers.isEmpty()) {
2022-10-17 09:35:49.817 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:50.378 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:50.384 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm >= Algorithm.none && parts.length >= 2 && verifiers.isEmpty()) {
2022-10-17 09:35:50.384 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:50.928 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:35:50.935 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == Algorithm.none && parts.length!=2 && verifiers.isEmpty()) {
2022-10-17 09:35:50.935 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:51.622 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:55.608 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == Algorithm.none && parts.length<2 && verifiers.isEmpty()) {
2022-10-17 09:35:55.609 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:35:56.192 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:35:59.869 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == Algorithm.none && parts.length<=2 && verifiers.isEmpty()) {
2022-10-17 09:35:59.869 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:00.511 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:04.494 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == Algorithm.none && parts.length>2 && verifiers.isEmpty()) {
2022-10-17 09:36:04.495 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:05.150 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:09.139 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == Algorithm.none && parts.length>=2 && verifiers.isEmpty()) {
2022-10-17 09:36:09.140 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:09.805 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:13.494 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || (parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:36:13.494 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:14.150 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:17.852 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && (parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:36:17.852 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:18.482 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:22.185 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || !(parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:36:22.185 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:22.749 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:26.668 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && !(parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:36:26.668 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:27.325 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:31.294 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || (parts.length == 3)) {
2022-10-17 09:36:31.295 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:32.045 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:35.847 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && (parts.length == 3)) {
2022-10-17 09:36:35.847 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:36.506 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:40.076 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || !(parts.length == 3)) {
2022-10-17 09:36:40.076 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:40.715 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:44.364 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && !(parts.length == 3)) {
2022-10-17 09:36:44.364 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:44.983 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:48.835 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:36:48.835 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:49.385 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:36:49.389 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:36:49.390 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:50.000 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:36:50.006 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || !(header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:36:50.006 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:50.516 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:36:50.521 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && !(header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:36:50.521 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:51.037 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:36:51.043 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || ((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:36:51.043 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:51.670 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:55.478 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && ((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:36:55.478 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:36:56.053 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:36:59.932 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || !((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:36:59.933 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:00.549 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:37:04.892 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && !((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:37:04.893 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:05.492 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:37:09.589 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || (verifiers.length == 0)) {
2022-10-17 09:37:09.589 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:10.188 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:10.196 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && (verifiers.length == 0)) {
2022-10-17 09:37:10.196 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:10.777 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:10.783 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || !(verifiers.length == 0)) {
2022-10-17 09:37:10.783 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:11.363 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:11.369 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && !(verifiers.length == 0)) {
2022-10-17 09:37:11.369 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:11.932 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:11.938 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || (v.canVerify(header.algorithm))) {
2022-10-17 09:37:11.938 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:12.533 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:12.538 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && (v.canVerify(header.algorithm))) {
2022-10-17 09:37:12.539 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:13.136 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:13.142 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || !(v.canVerify(header.algorithm))) {
2022-10-17 09:37:13.142 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:13.677 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:13.682 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && !(v.canVerify(header.algorithm))) {
2022-10-17 09:37:13.683 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:14.224 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:14.229 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || (!verifier.canVerify(header.algorithm))) {
2022-10-17 09:37:14.229 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:14.792 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:14.798 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && (!verifier.canVerify(header.algorithm))) {
2022-10-17 09:37:14.798 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:15.367 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:15.372 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) || !(!verifier.canVerify(header.algorithm))) {
2022-10-17 09:37:15.372 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:15.913 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:15.919 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if ((header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) && !(!verifier.canVerify(header.algorithm))) {
2022-10-17 09:37:15.919 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:16.528 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:16.561 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == Algorithm.none && parts.length == 2) {
2022-10-17 09:37:16.561 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:17.267 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:37:20.897 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:37:20.897 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:21.549 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:37:25.221 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == Algorithm.none && verifiers.isEmpty()) {
2022-10-17 09:37:25.221 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:25.808 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:37:29.491 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (verifiers.isEmpty()) {
2022-10-17 09:37:29.491 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:30.062 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:37:33.634 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == Algorithm.none || parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:37:33.634 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:34.246 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:37:38.025 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == Algorithm.none && parts.length == 2 || verifiers.isEmpty()) {
2022-10-17 09:37:38.025 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:38.581 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:37:42.346 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == Algorithm.none && parts.length == 2 && getInstance().isEmpty()) {
2022-10-17 09:37:42.346 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:43.077 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:43.101 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,9 +116,12 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm != null) {
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+	}
+
2022-10-17 09:37:43.102 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:43.814 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:37:47.440 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,10 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == null) {
+	    throw new IllegalArgumentException("Null 'header.algorithm' argument.");
+	}
+if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:37:47.440 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:48.077 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:37:51.867 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,10 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == null) {
+	    return null;
+	}
+if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:37:51.867 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:52.488 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:37:56.242 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,8 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == null) header.algorithm = new null();
+ if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:37:56.242 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:56.535 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:37:56.540 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,8 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm == null) return new JWT();
+	 if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:37:56.540 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:37:57.215 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:00.864 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,9 +116,12 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (Algorithm.none != null) {
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+	}
+
2022-10-17 09:38:00.864 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:01.519 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:05.118 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,10 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (Algorithm.none == null) {
+	    throw new IllegalArgumentException("Null 'Algorithm.none' argument.");
+	}
+if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:38:05.118 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:05.720 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:09.306 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,10 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (Algorithm.none == null) {
+	    return null;
+	}
+if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:38:09.306 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:09.909 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:13.794 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,8 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (Algorithm.none == null) Algorithm.none = new null();
+ if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:38:13.794 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:14.080 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:38:14.085 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,8 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (Algorithm.none == null) return new JWT();
+	 if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:38:14.085 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:14.777 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:18.349 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,8 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (verifiers != null) {
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
@@ -130,6 +131,8 @@ public class JWTDecoder {
+	}
+
2022-10-17 09:38:18.349 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:18.927 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:38:18.932 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,10 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (verifiers == null) {
+	    throw new IllegalArgumentException("Null 'verifiers' argument.");
+	}
+if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:38:18.933 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:19.527 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:22.962 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,10 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (verifiers == null) {
+	    return null;
+	}
+if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:38:22.962 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:23.599 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:27.421 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,8 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (verifiers == null) verifiers = new Map();
+ if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:38:27.421 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:27.952 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:38:27.958 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,7 +116,8 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (verifiers == null) return new JWT();
+	 if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
2022-10-17 09:38:27.958 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:28.587 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:32.457 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,9 +116,12 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+    if (header.algorithm != null && Algorithm.none != null && verifiers != null) {
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+	}
+
2022-10-17 09:38:32.457 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:33.090 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:37.318 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -110,15 +110,16 @@ public class JWTDecoder {
-    Objects.requireNonNull(encodedJWT);
+    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+    }
+	Objects.requireNonNull(encodedJWT);
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
2022-10-17 09:38:37.318 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:37.928 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:38:37.934 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -111,14 +111,15 @@ public class JWTDecoder {
-    Objects.requireNonNull(verifiers);
+    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+    }
+	Objects.requireNonNull(verifiers);
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
2022-10-17 09:38:37.934 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:38.517 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:38:38.522 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -113,12 +113,13 @@ public class JWTDecoder {
-    String[] parts = getParts(encodedJWT);
-    Header header = Mapper.deserialize(base64Decode(parts[0].getBytes(StandardCharsets.UTF_8)), Header.class);
-    // Be particular about decoding an unsecured JWT. If the JWT is signed or any verifiers were provided don't do it.
+	String[] parts = getParts(encodedJWT);
+    Header header = Mapper.deserialize(base64Decode(parts[0].getBytes(StandardCharsets.UTF_8)), Header.class);
+    // Be particular about decoding an unsecured JWT. If the JWT is signed or any verifiers were provided don't do it.
+
2022-10-17 09:38:38.522 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:39.152 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:38:39.158 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -114,11 +114,12 @@ public class JWTDecoder {
-    Header header = Mapper.deserialize(base64Decode(parts[0].getBytes(StandardCharsets.UTF_8)), Header.class);
-    // Be particular about decoding an unsecured JWT. If the JWT is signed or any verifiers were provided don't do it.
+	Header header = Mapper.deserialize(base64Decode(parts[0].getBytes(StandardCharsets.UTF_8)), Header.class);
+    // Be particular about decoding an unsecured JWT. If the JWT is signed or any verifiers were provided don't do it.
+
2022-10-17 09:38:39.158 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:39.712 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:38:39.718 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,12 +116,14 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+    }
+
2022-10-17 09:38:39.718 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:40.297 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:43.993 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,13 +116,15 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+    }
+
2022-10-17 09:38:43.993 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:44.684 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:48.613 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,9 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
@@ -128,6 +126,10 @@ public class JWTDecoder {
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+    }
+
2022-10-17 09:38:48.613 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:49.239 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:53.068 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,9 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
@@ -130,6 +128,10 @@ public class JWTDecoder {
+	if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
+      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
+    }
+
2022-10-17 09:38:53.068 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:53.624 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:38:53.640 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,9 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+    return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
2022-10-17 09:38:53.640 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:54.295 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:38:54.300 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -116,9 +116,7 @@ public class JWTDecoder {
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
+
2022-10-17 09:38:54.300 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:54.913 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:38:58.684 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -96,41 +96,7 @@ public class JWTDecoder {
-  /**
-   * Decode the JWT using one of they provided verifiers. The key used to lookup the correct verifier is provided by the
-   * <code>keyFunction</code>. The key function is provided the JWT header and is expected to return a string key to
-   * look up the correct verifier.
-   * <p>
-   * A JWT that is expired or not yet valid will not be decoded, instead a {@link JWTExpiredException} or {@link
-   * JWTUnavailableForProcessingException} exception will be thrown respectively.
-   *
-   * @param encodedJWT  The encoded JWT in string format.
-   * @param verifiers   A map of verifiers.
-   * @param keyFunction A function used to lookup the verifier key from the header.
-   * @return a decoded JWT.
-   */
-  public JWT decode(String encodedJWT, Map<String, Verifier> verifiers, Function<Header, String> keyFunction) {
-    Objects.requireNonNull(encodedJWT);
-    Objects.requireNonNull(verifiers);
-
-    String[] parts = getParts(encodedJWT);
-    Header header = Mapper.deserialize(base64Decode(parts[0].getBytes(StandardCharsets.UTF_8)), Header.class);
-    // Be particular about decoding an unsecured JWT. If the JWT is signed or any verifiers were provided don't do it.
-    if (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty()) {
-      return Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-    }
-
-    // If verifiers were provided, ensure it is able to verify this JWT.
-    String key = keyFunction.apply(header);
-    Verifier verifier = verifiers.get(key);
-    if (verifier != null) {
-      if (!verifier.canVerify(header.algorithm)) {
-        verifier = null;
-      }
-    }
-
-    return decode(encodedJWT, header, parts, verifier);
-  }
+
2022-10-17 09:38:58.684 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:59.224 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:38:59.232 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.primeframework.jwt.JWTDecoder ===149
2022-10-17 09:38:59.254 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
if (parts.length == 3 && verifier == null) {
      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
    }
2022-10-17 09:38:59.272 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length!=3 && verifier == null) {
2022-10-17 09:38:59.273 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:38:59.895 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:03.719 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length<3 && verifier == null) {
2022-10-17 09:39:03.719 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:04.376 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:08.259 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length<=3 && verifier == null) {
2022-10-17 09:39:08.259 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:08.836 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:12.529 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length>3 && verifier == null) {
2022-10-17 09:39:12.529 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:13.146 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:16.937 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length>=3 && verifier == null) {
2022-10-17 09:39:16.938 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:17.632 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:21.408 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length != 3 && verifier != null) {
2022-10-17 09:39:21.408 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:21.998 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:25.777 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length < 3 && verifier < null) {
2022-10-17 09:39:25.777 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:26.385 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:26.391 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length <= 3 && verifier <= null) {
2022-10-17 09:39:26.391 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:26.903 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:26.909 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length > 3 && verifier > null) {
2022-10-17 09:39:26.909 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:27.523 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:27.528 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length >= 3 && verifier >= null) {
2022-10-17 09:39:27.528 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:28.140 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:28.145 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length == 3 && verifier != null) {
2022-10-17 09:39:28.145 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:28.807 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:32.664 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:39:32.664 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:33.166 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:33.174 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:39:33.174 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:33.778 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:33.784 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || !(header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:39:33.784 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:34.344 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:34.350 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && !(header.algorithm == Algorithm.none && parts.length == 2 && verifiers.length == 0)) {
2022-10-17 09:39:34.350 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:34.904 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:34.909 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || (parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:39:34.909 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:35.504 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:39.108 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && (parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:39:39.108 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:39.706 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:43.475 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || !(parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:39:43.475 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:44.107 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:47.946 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && !(parts.length == 3 || (parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:39:47.946 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:48.550 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:52.568 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:39:52.568 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:53.142 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:53.147 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && (header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:39:53.148 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:53.746 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:53.752 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || !(header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:39:53.752 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:54.349 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:54.354 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && !(header.algorithm == Algorithm.none && parts.length == 2 && verifiers.isEmpty())) {
2022-10-17 09:39:54.354 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:54.931 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:39:54.936 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || (header.algorithm == Algorithm.none && parts.length == 2)) {
2022-10-17 09:39:54.936 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:55.571 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:39:59.143 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && (header.algorithm == Algorithm.none && parts.length == 2)) {
2022-10-17 09:39:59.143 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:39:59.739 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:03.727 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || !(header.algorithm == Algorithm.none && parts.length == 2)) {
2022-10-17 09:40:03.727 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:04.432 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:08.456 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && !(header.algorithm == Algorithm.none && parts.length == 2)) {
2022-10-17 09:40:08.457 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:09.096 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:13.172 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || (verifiers.length == 0)) {
2022-10-17 09:40:13.172 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:13.747 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:40:13.752 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && (verifiers.length == 0)) {
2022-10-17 09:40:13.752 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:14.348 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:40:14.361 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || !(verifiers.length == 0)) {
2022-10-17 09:40:14.361 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:14.878 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:40:14.883 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && !(verifiers.length == 0)) {
2022-10-17 09:40:14.883 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:15.478 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:40:15.483 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || ((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:40:15.483 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:16.183 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:20.087 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && ((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:40:20.087 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:20.735 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:24.520 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || !((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:40:24.520 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:25.128 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:29.143 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && !((parts.length == 2 && encodedJWT.endsWith(".")))) {
2022-10-17 09:40:29.143 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:29.842 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:33.670 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || (!verifier.canVerify(header.algorithm))) {
2022-10-17 09:40:33.670 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:34.287 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:38.646 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && (!verifier.canVerify(header.algorithm))) {
2022-10-17 09:40:38.647 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:39.250 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:43.127 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || !(!verifier.canVerify(header.algorithm))) {
2022-10-17 09:40:43.127 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:43.804 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:47.528 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && !(!verifier.canVerify(header.algorithm))) {
2022-10-17 09:40:47.528 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:48.144 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:51.871 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || (parts.length == 2)) {
2022-10-17 09:40:51.871 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:52.512 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:40:56.278 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && (parts.length == 2)) {
2022-10-17 09:40:56.278 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:40:56.868 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:00.749 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) || !(parts.length == 2)) {
2022-10-17 09:41:00.750 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:01.430 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:05.020 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if ((parts.length == 3 && verifier == null) && !(parts.length == 2)) {
2022-10-17 09:41:05.020 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:05.677 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:09.653 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length == 3) {
2022-10-17 09:41:09.653 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:10.328 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:14.126 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (verifier == null) {
2022-10-17 09:41:14.126 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:14.754 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:18.684 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length == 3 || verifier == null) {
2022-10-17 09:41:18.684 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:19.232 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:23.030 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,7 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
+    if (parts.length == 3 && getInstance() == null) {
2022-10-17 09:41:23.030 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:23.734 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:27.753 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -141,14 +141,15 @@ public class JWTDecoder {
-    int index = encodedJWT.lastIndexOf(".");
+    if (parts.length == 3 && verifier == null) {
+      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
+    }
+	int index = encodedJWT.lastIndexOf(".");
-    if (parts.length == 3 && verifier == null) {
-      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
-    }
+
2022-10-17 09:41:27.753 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:28.439 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:32.269 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -143,12 +143,13 @@ public class JWTDecoder {
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
-
-    // If a signature is provided and verifier must be provided.
+	byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
+
+    // If a signature is provided and verifier must be provided.
+
2022-10-17 09:41:32.269 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:32.812 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:36.469 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,15 +146,17 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
-      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
-    }
+
+	if (parts.length == 3 && verifier == null) {
+      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
+    }
+
2022-10-17 09:41:36.469 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:37.101 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:41.058 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,9 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
-      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
-    }
+
@@ -157,6 +155,10 @@ public class JWTDecoder {
+	if (parts.length == 3 && verifier == null) {
+      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
+    }
+
2022-10-17 09:41:41.058 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:41.709 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:45.692 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,9 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
-      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
-    }
+
@@ -162,6 +160,10 @@ public class JWTDecoder {
+	if (parts.length == 3 && verifier == null) {
+      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
+    }
+
2022-10-17 09:41:45.692 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:46.395 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:50.134 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,9 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
-      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
-    }
+
@@ -167,6 +165,10 @@ public class JWTDecoder {
+	if (parts.length == 3 && verifier == null) {
+      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
+    }
+
2022-10-17 09:41:50.134 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:50.737 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:41:54.556 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,9 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
-      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
-    }
+
@@ -169,6 +167,10 @@ public class JWTDecoder {
+	if (parts.length == 3 && verifier == null) {
+      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
+    }
+
2022-10-17 09:41:54.556 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:55.117 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:41:55.130 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,9 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
-      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
-    }
+    throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
2022-10-17 09:41:55.130 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:55.696 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:41:55.702 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -146,9 +146,7 @@ public class JWTDecoder {
-    if (parts.length == 3 && verifier == null) {
-      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
-    }
+
2022-10-17 09:41:55.702 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:41:56.240 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-10-17 09:42:00.450 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -140,36 +140,7 @@ public class JWTDecoder {
-  private JWT decode(String encodedJWT, Header header, String[] parts, Verifier verifier) {
-    int index = encodedJWT.lastIndexOf(".");
-    // The message comprises the first two segments of the entire JWT, the signature is the last segment.
-    byte[] message = encodedJWT.substring(0, index).getBytes(StandardCharsets.UTF_8);
-
-    // If a signature is provided and verifier must be provided.
-    if (parts.length == 3 && verifier == null) {
-      throw new MissingVerifierException("No Verifier has been provided for verify a signature signed using [" + header.algorithm.getName() + "]");
-    }
-
-    if (parts.length == 3) {
-      // Verify the signature before de-serializing the payload.
-      byte[] signature = base64Decode(parts[2].getBytes(StandardCharsets.UTF_8));
-      verifier.verify(header.algorithm, message, signature);
-    }
-
-    JWT jwt = Mapper.deserialize(base64Decode(parts[1].getBytes(StandardCharsets.UTF_8)), JWT.class);
-
-    // Verify expiration claim
-    if (jwt.isExpired()) {
-      throw new JWTExpiredException();
-    }
-
-    // Verify the notBefore claim
-    if (jwt.isUnavailableForProcessing()) {
-      throw new JWTUnavailableForProcessingException();
-    }
-
-    return jwt;
-  }
+
2022-10-17 09:42:00.450 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-10-17 09:42:00.966 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-10-17 09:42:00.972 [main] INFO  edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Finish off fixing======
Failed to fix bug


Node: 2c8178711f7b



Date: Mon Oct 17 09:42:00 EDT 2022

