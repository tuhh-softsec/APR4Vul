cd /workdir/TBar_vul4j_apache_commons-compress_VUL4J-8;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/jdk1.7.0_80/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/jdk1.7.0_80";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m \
    -cp /script/../libs/tbar_external/com.gzoltar-0.1.1-jdk7.jar:/script/../repair_tools/tbar.jar edu.lu.uni.serval.tbar.main.Main \
    "/workdir/TBar_vul4j_apache_commons-compress_VUL4J-8" "org.apache.commons.compress.archivers.zip.NioZipEncodingTest#partialSurrogatePair" "/src/main/java/" "/src/test/java/" "/target/classes/" "/target/test-classes/" "/script/../data/benchmarks/vul4j/perfectfl/VUL4J-8/spectra.txt" "mvn test -Dtest=org.apache.commons.compress.archivers.zip.NioZipEncodingTest#partialSurrogatePair -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" "mvn test -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" "/root/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-optional-jcl/1.8.2/pax-swissbox-optional-jcl-1.8.2.jar:/root/.m2/repository/org/ops4j/base/ops4j-base-util-property/1.5.0/ops4j-base-util-property-1.5.0.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-lifecycle/1.8.2/pax-swissbox-lifecycle-1.8.2.jar:/root/.m2/repository/org/ops4j/pax/exam/pax-exam-link-mvn/4.13.1/pax-exam-link-mvn-4.13.1.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/.m2/repository/org/ops4j/pax/tinybundles/tinybundles/2.1.1/tinybundles-2.1.1.jar:/root/.m2/repository/org/powermock/powermock-api-mockito/1.7.4/powermock-api-mockito-1.7.4.jar:/root/.m2/repository/org/ops4j/pax/exam/pax-exam/4.13.1/pax-exam-4.13.1.jar:/root/.m2/repository/org/ops4j/base/ops4j-base-lang/1.5.0/ops4j-base-lang-1.5.0.jar:/root/.m2/repository/org/mockito/mockito-core/1.10.19/mockito-core-1.10.19.jar:/root/.m2/repository/org/powermock/powermock-module-junit4-common/1.7.4/powermock-module-junit4-common-1.7.4.jar:/root/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/root/.m2/repository/org/ops4j/base/ops4j-base-spi/1.5.0/ops4j-base-spi-1.5.0.jar:/root/.m2/repository/org/powermock/powermock-core/1.7.4/powermock-core-1.7.4.jar:/root/.m2/repository/org/ops4j/pax/exam/pax-exam-cm/4.13.1/pax-exam-cm-4.13.1.jar:/root/.m2/repository/org/ops4j/base/ops4j-base-io/1.5.0/ops4j-base-io-1.5.0.jar:/root/.m2/repository/org/powermock/powermock-api-mockito-common/1.7.4/powermock-api-mockito-common-1.7.4.jar:/root/.m2/repository/org/ops4j/pax/url/pax-url-aether/2.4.5/pax-url-aether-2.4.5.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.6/jcl-over-slf4j-1.6.6.jar:/root/.m2/repository/org/osgi/org.osgi.core/6.0.0/org.osgi.core-6.0.0.jar:/root/.m2/repository/org/ops4j/pax/url/pax-url-classpath/2.4.5/pax-url-classpath-2.4.5.jar:/root/.m2/repository/com/github/luben/zstd-jni/1.4.0-1/zstd-jni-1.4.0-1.jar:/root/.m2/repository/org/ops4j/base/ops4j-base-net/1.5.0/ops4j-base-net-1.5.0.jar:/root/.m2/repository/biz/aQute/bnd/bndlib/2.4.0/bndlib-2.4.0.jar:/root/.m2/repository/org/apache/felix/org.apache.felix.framework/6.0.2/org.apache.felix.framework-6.0.2.jar:/root/.m2/repository/org/ops4j/pax/exam/pax-exam-junit4/4.13.1/pax-exam-junit4-4.13.1.jar:/root/.m2/repository/org/javassist/javassist/3.21.0-GA/javassist-3.21.0-GA.jar:/root/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-core/1.8.2/pax-swissbox-core-1.8.2.jar:/root/.m2/repository/org/ops4j/base/ops4j-base-monitors/1.5.0/ops4j-base-monitors-1.5.0.jar:/root/.m2/repository/org/ops4j/pax/exam/pax-exam-container-native/4.13.1/pax-exam-container-native-4.13.1.jar:/root/.m2/repository/org/ops4j/base/ops4j-base-store/1.5.0/ops4j-base-store-1.5.0.jar:/root/.m2/repository/org/ops4j/pax/url/pax-url-commons/2.4.5/pax-url-commons-2.4.5.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar:/root/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-tracker/1.8.2/pax-swissbox-tracker-1.8.2.jar:/root/.m2/repository/org/powermock/powermock-api-support/1.7.4/powermock-api-support-1.7.4.jar:/root/.m2/repository/org/tukaani/xz/1.8/xz-1.8.jar:/root/.m2/repository/org/powermock/powermock-module-junit4/1.7.4/powermock-module-junit4-1.7.4.jar:/root/.m2/repository/junit/junit/4.12/junit-4.12.jar:/root/.m2/repository/org/ops4j/pax/exam/pax-exam-spi/4.13.1/pax-exam-spi-4.13.1.jar:/root/.m2/repository/org/powermock/powermock-reflect/1.7.4/powermock-reflect-1.7.4.jar:/root/.m2/repository/org/ops4j/pax/url/pax-url-link/2.4.5/pax-url-link-2.4.5.jar:/root/.m2/repository/org/brotli/dec/0.1.2/dec-0.1.2.jar:/root/.m2/repository/org/ops4j/pax/swissbox/pax-swissbox-property/1.8.2/pax-swissbox-property-1.8.2.jar:/root/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.9/animal-sniffer-annotations-1.9.jar";
echo "\n\nNode: `hostname`\n";
echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
06:20:04,249 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Could NOT find resource [logback-test.xml]
06:20:04,249 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Could NOT find resource [logback.groovy]
06:20:04,249 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Found resource [logback.xml] at [jar:file:/repair_tools/tbar.jar!/logback.xml]
06:20:04,265 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@32e02ddd - URL [jar:file:/repair_tools/tbar.jar!/logback.xml] is not of type file
06:20:04,303 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
06:20:04,305 |-INFO in ch.qos.logback.classic.joran.action.ContextNameAction - Setting logger context name as [TBar]
06:20:04,305 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
06:20:04,308 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
06:20:04,365 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.hibernate.engine.query.HQLQueryPlan] to DEBUG
06:20:04,365 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.hibernate.engine.query.HQLQueryPlan] to false
06:20:04,365 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [com.piedra.logback] to DEBUG
06:20:04,365 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - Could not find an appender named [FILE]. Did you define it below instead of above in the configuration file?
06:20:04,365 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - See http://logback.qos.ch/codes.html#appender_order for more details.
06:20:04,366 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to DEBUG
06:20:04,366 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
06:20:04,366 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - Could not find an appender named [ROLLINGFILE]. Did you define it below instead of above in the configuration file?
06:20:04,366 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - See http://logback.qos.ch/codes.html#appender_order for more details.
06:20:04,366 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
06:20:04,368 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@1be32243 - Registering current configuration as safe fallback point

2022-09-14 06:20:04.707 [main] INFO  edu.lu.uni.serval.tbar.AbstractFixer - TBar_vul4j_apache_commons-compress_VUL4J-8 Failed Tests: 1
2022-09-14 06:20:04.711 [main] INFO  edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Start to fix suspicious code======
2022-09-14 06:20:04.711 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.apache.commons.compress.archivers.zip.NioZipEncoding ===112
2022-09-14 06:20:05.231 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
if (res.isOverflow()) {
                int increment = estimateIncrementalEncodingSize(enc, cb.remaining());
                out = ZipEncodingHelper.growBufferBy(out, increment);
            }
2022-09-14 06:20:06.610 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) || (res.isUnmappable() || res.isMalformed())) {
2022-09-14 06:20:06.610 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:20:07.477 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:20:20.691 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) && (res.isUnmappable() || res.isMalformed())) {
2022-09-14 06:20:20.691 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:20:21.535 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:20:33.884 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) || !(res.isUnmappable() || res.isMalformed())) {
2022-09-14 06:20:33.885 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:20:34.584 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:20:46.907 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) && !(res.isUnmappable() || res.isMalformed())) {
2022-09-14 06:20:46.907 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:20:47.749 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:20:59.863 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) || (res.isUnmappable())) {
2022-09-14 06:20:59.864 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:21:00.734 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:21:13.267 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) && (res.isUnmappable())) {
2022-09-14 06:21:13.267 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:21:14.189 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:21:27.416 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) || !(res.isUnmappable())) {
2022-09-14 06:21:27.416 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:21:28.260 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:21:40.839 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) && !(res.isUnmappable())) {
2022-09-14 06:21:40.839 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:21:41.577 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:21:54.012 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) || (res.isMalformed())) {
2022-09-14 06:21:54.012 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:21:54.837 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:22:07.588 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) && (res.isMalformed())) {
2022-09-14 06:22:07.588 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:22:08.472 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:22:21.036 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) || !(res.isMalformed())) {
2022-09-14 06:22:21.036 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:22:21.899 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:22:34.296 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if ((res.isOverflow()) && !(res.isMalformed())) {
2022-09-14 06:22:34.296 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:22:34.996 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:22:47.877 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (getCharset().isOverflow()) {
2022-09-14 06:22:47.877 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:22:48.725 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 06:22:48.733 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (newEncoder().isOverflow()) {
2022-09-14 06:22:48.734 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:22:49.604 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 06:22:49.611 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (newDecoder().isOverflow()) {
2022-09-14 06:22:49.611 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:22:50.512 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 06:22:50.577 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,10 +109,13 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (res != null) {
+	if (res.isOverflow()) {
+	}
+
2022-09-14 06:22:50.577 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:22:51.315 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:23:03.906 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,10 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (res == null) {
+	    throw new IllegalArgumentException("Null 'res' argument.");
+	}
+if (res.isOverflow()) {
2022-09-14 06:23:03.906 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:23:04.761 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:23:17.431 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,10 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (res == null) {
+	    return null;
+	}
+if (res.isOverflow()) {
2022-09-14 06:23:17.431 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:23:18.264 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:23:30.798 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,8 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (res == null) res = new CoderResult();
+ if (res.isOverflow()) {
2022-09-14 06:23:30.799 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:23:31.698 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 06:23:31.721 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,8 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (res == null) return new ByteBuffer();
+	 if (res.isOverflow()) {
2022-09-14 06:23:31.721 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:23:32.597 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 06:23:32.605 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,8 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (res == null) return out;
+	 if (res.isOverflow()) {
2022-09-14 06:23:32.605 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:23:33.481 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:23:46.057 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,8 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (res == null) continue;
+	if (res.isOverflow()) {
2022-09-14 06:23:46.057 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:23:46.911 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:23:59.342 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (res != null && res.isOverflow()) {
2022-09-14 06:23:59.343 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:24:00.214 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:24:12.649 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,7 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
+            } else if (res != null || res.isOverflow()) {
2022-09-14 06:24:12.649 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:24:13.609 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 06:24:26.398 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,10 +109,8 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
-                int increment = estimateIncrementalEncodingSize(enc, cb.remaining());
+            } else int increment = estimateIncrementalEncodingSize(enc, cb.remaining());
-            }
2022-09-14 06:24:26.399 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:24:26.771 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 06:24:26.778 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -109,10 +109,7 @@ public ByteBuffer encode(final String name) {
-            } else if (res.isOverflow()) {
-                int increment = estimateIncrementalEncodingSize(enc, cb.remaining());
-                out = ZipEncodingHelper.growBufferBy(out, increment);
-            }
+            } else
2022-09-14 06:24:26.779 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:24:27.092 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 06:24:27.110 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -71,57 +71,7 @@ public boolean canEncode(final String name) {
-    /**
-     * @see ZipEncoding#encode(java.lang.String)
-     */
-    @Override
-    public ByteBuffer encode(final String name) {
-        final CharsetEncoder enc = newEncoder();
-
-        final CharBuffer cb = CharBuffer.wrap(name);
-        CharBuffer tmp = null;
-        ByteBuffer out = ByteBuffer.allocate(estimateInitialBufferSize(enc, cb.remaining()));
-
-        while (cb.remaining() > 0) {
-            final CoderResult res = enc.encode(cb, out, false);
-
-            if (res.isUnmappable() || res.isMalformed()) {
-
-                // write the unmappable characters in utf-16
-                // pseudo-URL encoding style to ByteBuffer.
-
-                int spaceForSurrogate = estimateIncrementalEncodingSize(enc, 6 * res.length());
-                if (spaceForSurrogate > out.remaining()) {
-                    // if the destination buffer isn't over sized, assume that the presence of one
-                    // unmappable character makes it likely that there will be more. Find all the
-                    // un-encoded characters and allocate space based on those estimates.
-                    int charCount = 0;
-                    for (int i = cb.position() ; i < cb.limit(); i++) {
-                        charCount += !enc.canEncode(cb.get(i)) ? 6 : 1;
-                    }
-                    int totalExtraSpace = estimateIncrementalEncodingSize(enc, charCount);
-                    out = ZipEncodingHelper.growBufferBy(out, totalExtraSpace - out.remaining());
-                }
-                if (tmp == null) {
-                    tmp = CharBuffer.allocate(6);
-                }
-                for (int i = 0; i < res.length(); ++i) {
-                    out = encodeFully(enc, encodeSurrogate(tmp, cb.get()), out);
-                }
-
-            } else if (res.isOverflow()) {
-                int increment = estimateIncrementalEncodingSize(enc, cb.remaining());
-                out = ZipEncodingHelper.growBufferBy(out, increment);
-            }
-        }
-        // tell the encoder we are done
-        enc.encode(cb, out, true);
-        // may have caused underflow, but that's been ignored traditionally
-
-        out.limit(out.position());
-        out.rewind();
-        return out;
-    }
+
2022-09-14 06:24:27.111 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 06:24:27.941 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 06:24:27.970 [main] INFO  edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Finish off fixing======
Failed to fix bug


Node: ee2bf67284b9



Date: Wed Sep 14 06:24:27 EDT 2022

