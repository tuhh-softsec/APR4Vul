{
  "repair_end": "2022-09-09 05:28:33.653765", 
  "repair_begin": "2022-09-09 04:58:31.739103", 
  "patches": [
    {
      "PATCH_DIFF_ORIG": "--- \\/workdir\\/Cardumen_vul4j_apache_tika_VUL4J-36\\/tika-parsers\\/src\\/main\\/java\\/org\\/apache\\/tika\\/parser\\/iptc\\/IptcAnpaParserjava\\n+++ \\/workdir\\/Cardumen_vul4j_apache_tika_VUL4J-36\\/tika-parsers\\/src\\/main\\/java\\/org\\/apache\\/tika\\/parser\\/iptc\\/IptcAnpaParserjava\\n@@ -511,2 +511 @@\\n-\\t\\t\\t\\t\\t\\tif (read > value.length) { \\t\\t\\t\\t\\t\\t\\tbreak;}\\n-\\t\\t\\t\\t\\t} \\n+\\t\\t\\t\\t\\t\\tif (\\n@@ -514,3 +512,0 @@\\n-\\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CT) {\\n-\\t\\t\\t\\t\\t\\t--read;\\n-\\t\\t\\t\\t\\t}\\n@@ -518 +513,0 @@\\n-\\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.LT) {\\n@@ -520,2 +514,0 @@\\n-\\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0;\\n-\\t\\t\\t\\t\\t}\\n@@ -523,8 +515,0 @@\\n-\\t\\t\\t\\t\\twhile ((bdy_title.length() > 0) && ((val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CR) || (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.LF))) {\\n-\\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0;\\n-\\t\\t\\t\\t\\t\\tif ((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) {\\n-\\t\\t\\t\\t\\t\\t\\t--read;\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t} \\n-\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t{\\n@@ -534,6 +518,0 @@\\n-\\t\\t\\t\\t\\tif (FORMAT == this.FMT_IPTC_BLM) {\\n-\\t\\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.TB) {\\n-\\t\\t\\t\\t\\t\\t\\tvalue[--read] = org.apache.tika.parser.iptc.IptcAnpaParser.CT;\\n-\\t\\t\\t\\t\\t\\t\\tcontinue;\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t}\\n@@ -542,2 +520,0 @@\\n-\\t\\t\\t\\t\\tif (FORMAT == this.FMT_IPTC_RTR) {\\n-\\t\\t\\t\\t\\t\\tif (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CT) {\\n@@ -545,10 +521,0 @@\\n-\\t\\t\\t\\t\\t\\t\\tif ((((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.SP) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.TB)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) {\\n-\\t\\t\\t\\t\\t\\t\\t\\t--read;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t\\tvalue[--read] = org.apache.tika.parser.iptc.IptcAnpaParser.CT;\\n-\\t\\t\\t\\t\\t\\t\\tcontinue;\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t\\tbreak;\\n-\\t\\t\\t} \\n@@ -560,5 +526,0 @@\\n-\\t\\t\\tboolean metastarted = false;\\n-\\t\\t\\tjava.lang.String longline = \\\"\\\";\\n-\\t\\t\\tjava.lang.String longkey = \\\"\\\";\\n-\\t\\t\\twhile (read < value.length) {\\n-\\t\\t\\t\\tbyte val_next = value[read++];\\n@@ -567,3 +528,0 @@\\n-\\t\\t\\t\\tif ((((val_next == org.apache.tika.parser.iptc.IptcAnpaParser.SP) || (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.TB)) || (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CR)) || (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.LF)) {\\n-\\t\\t\\t\\t\\tcontinue;\\n-\\t\\t\\t\\t}\\n@@ -571,4 +529,0 @@\\n-\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CT) {\\n-\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0;\\n-\\t\\t\\t\\t\\tjava.lang.String tmp_line = \\\"\\\";\\n-\\t\\t\\t\\t\\twhile (((((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LT) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CT)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) && (val_next != 0)) {\\n@@ -576,4 +530,0 @@\\n-\\t\\t\\t\\t\\t\\ttmp_line += ((char) (val_next & 0xff));\\n-\\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0;\\n-\\t\\t\\t\\t\\t\\tif (read > value.length) { \\t\\t\\t\\t\\t\\t\\tbreak;}\\n-\\t\\t\\t\\t\\t} \\n@@ -581,3 +531,0 @@\\n-\\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CT) {\\n-\\t\\t\\t\\t\\t\\t--read;\\n-\\t\\t\\t\\t\\t}\\n@@ -585 +532,0 @@\\n-\\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.LT) {\\n@@ -587,2 +533,0 @@\\n-\\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0;\\n-\\t\\t\\t\\t\\t}\\n@@ -590,8 +534,0 @@\\n-\\t\\t\\t\\t\\twhile ((val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CR) || (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.LF)) {\\n-\\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0;\\n-\\t\\t\\t\\t\\t\\tif ((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) {\\n-\\t\\t\\t\\t\\t\\t\\t--read;\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t} \\n-\\t\\t\\t\\t\\tif (tmp_line.toLowerCase(java.util.Locale.ROOT).startsWith(\\\"by\\\") || longline.equals(\\\"bdy_author\\\")) {\\n-\\t\\t\\t\\t\\t\\tlongkey = \\\"bdy_author\\\";\\n@@ -600 +536,0 @@\\n-\\t\\t\\t\\t\\t\\ttmp_line = (longline.equals(longkey) ? \\\" \\\" : \\\"\\\") + tmp_line;\\n@@ -603,13 +538,0 @@\\n-\\t\\t\\t\\t\\t\\tint term = tmp_line.length();\\n-\\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"<\\\") ? tmp_line.indexOf(\\\"<\\\") : term);\\n-\\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"=\\\") ? tmp_line.indexOf(\\\"=\\\") : term);\\n-\\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"\\\\n\\\") ? tmp_line.indexOf(\\\"\\\\n\\\") : term);\\n-\\t\\t\\t\\t\\t\\tterm = (term > 0) ? term : tmp_line.length();\\n-\\t\\t\\t\\t\\t\\tbdy_author += tmp_line.substring(tmp_line.indexOf(\\\" \\\"), term);\\n-\\t\\t\\t\\t\\t\\tmetastarted = true;\\n-\\t\\t\\t\\t\\t\\tlongline = (tmp_line.contains(\\\"=\\\") && (!longline.equals(longkey))) ? longkey : \\\"\\\";\\n-\\t\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t\\tif (FORMAT == this.FMT_IPTC_BLM) {\\n-\\t\\t\\t\\t\\t\\tjava.lang.String byline = \\\"   by \\\";\\n-\\t\\t\\t\\t\\t\\tif (tmp_line.toLowerCase(java.util.Locale.ROOT).contains(byline)) {\\n-\\t\\t\\t\\t\\t\\t\\tlongkey = \\\"bdy_author\\\";\\n@@ -617,5 +539,0 @@\\n-\\t\\t\\t\\t\\t\\t\\tint term = tmp_line.length();\\n-\\t\\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"<\\\") ? tmp_line.indexOf(\\\"<\\\") : term);\\n-\\t\\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"=\\\") ? tmp_line.indexOf(\\\"=\\\") : term);\\n-\\t\\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"\\\\n\\\") ? tmp_line.indexOf(\\\"\\\\n\\\") : term);\\n-\\t\\t\\t\\t\\t\\t\\tterm = (term > 0) ? term : tmp_line.length();\\n@@ -623,5 +540,0 @@\\n-\\t\\t\\t\\t\\t\\t\\tbdy_author += tmp_line.substring(tmp_line.toLowerCase(java.util.Locale.ROOT).indexOf(byline) + byline.length(), term) + \\\" \\\";\\n-\\t\\t\\t\\t\\t\\t\\tmetastarted = true;\\n-\\t\\t\\t\\t\\t\\t\\tlongline = (tmp_line.contains(\\\"=\\\") && (!longline.equals(longkey))) ? longkey : \\\"\\\";\\n-\\t\\t\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t\\t\\tif (tmp_line.toLowerCase(java.util.Locale.ROOT).startsWith(\\\"c.\\\")) {\\n@@ -630,6 +542,0 @@\\n-\\t\\t\\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.TB) {\\n-\\t\\t\\t\\t\\t\\t\\t\\tvalue[--read] = org.apache.tika.parser.iptc.IptcAnpaParser.CT;\\n-\\t\\t\\t\\t\\t\\t\\t\\tcontinue;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t\\t\\tif (tmp_line.toLowerCase(java.util.Locale.ROOT).trim().startsWith(\\\"(\\\") && tmp_line.toLowerCase(java.util.Locale.ROOT).trim().endsWith(\\\")\\\")) {\\n@@ -638,6 +544,0 @@\\n-\\t\\t\\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.TB) {\\n-\\t\\t\\t\\t\\t\\t\\t\\tvalue[--read] = org.apache.tika.parser.iptc.IptcAnpaParser.CT;\\n-\\t\\t\\t\\t\\t\\t\\t\\tcontinue;\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t} else \\n@@ -645,2 +545,0 @@\\n-\\t\\t\\t\\t\\tif (tmp_line.toLowerCase(java.util.Locale.ROOT).startsWith(\\\"eds\\\") || longline.equals(\\\"bdy_source\\\")) {\\n-\\t\\t\\t\\t\\t\\tlongkey = \\\"bdy_source\\\";\\n@@ -648 +546,0 @@\\n-\\t\\t\\t\\t\\t\\ttmp_line = (longline.equals(longkey) ? \\\" \\\" : \\\"\\\") + tmp_line;\\n@@ -651,3 +548,0 @@\\n-\\t\\t\\t\\t\\t\\tint term = tmp_line.length();\\n-\\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"<\\\") ? tmp_line.indexOf(\\\"<\\\") : term);\\n-\\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"=\\\") ? tmp_line.indexOf(\\\"=\\\") : term);\\n@@ -655,5 +549,0 @@\\n-\\t\\t\\t\\t\\t\\tterm = (term > 0) ? term : tmp_line.length();\\n-\\t\\t\\t\\t\\t\\tbdy_source += tmp_line.substring(tmp_line.indexOf(\\\" \\\") + 1, term) + \\\" \\\";\\n-\\t\\t\\t\\t\\t\\tmetastarted = true;\\n-\\t\\t\\t\\t\\t\\tlongline = (!longline.equals(longkey)) ? longkey : \\\"\\\";\\n-\\t\\t\\t\\t\\t} else \\n@@ -663,4 +552,0 @@\\n-\\t\\t\\t\\t\\tif (!metastarted) {\\n-\\t\\t\\t\\t\\t\\tbdy_title += \\\" , \\\" + tmp_line;\\n-\\t\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t\\t{\\n@@ -668,2 +553,0 @@\\n-\\t\\t\\t\\t\\t\\tbdy_body += (\\\" \\\" + tmp_line) + \\\" , \\\";\\n-\\t\\t\\t\\t\\t}\\n@@ -671,3 +554,0 @@\\n-\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t{\\n-\\t\\t\\t\\t\\twhile ((read < value.length) && (val_next != 0)) {\\n@@ -675,4 +555,0 @@\\n-\\t\\t\\t\\t\\t\\tbdy_body += ((char) (val_next & 0xff));\\n-\\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0;\\n-\\t\\t\\t\\t\\t\\tif (read > value.length) { \\t\\t\\t\\t\\t\\t\\tbreak;}\\n-\\t\\t\\t\\t\\t} \\n@@ -680 +556,0 @@\\n-\\t\\t\\t\\t}\\n@@ -682,8 +557,0 @@\\n-\\t\\t\\t} \\n-\\t\\t\\tdone = true;\\n-\\t\\t} \\n-\\t\\tproperties.put(\\\"body\\\", bdy_body);\\n-\\t\\tproperties.put(\\\"title\\\", bdy_title);\\n-\\t\\tproperties.put(\\\"subject\\\", bdy_heading);\\n-\\t\\tproperties.put(\\\"author\\\", bdy_author);\\n-\\t\\tproperties.put(\\\"source\\\", bdy_source);\\n@@ -691,4 +558,0 @@\\n-\\t\\tadded = ((((bdy_body.length() + bdy_title.length()) + bdy_heading.length()) + bdy_author.length()) + \\n-\\t\\tbdy_source.length()) > 0;\\n-\\t\\treturn added;\\n-\\t}\\n@@ -697,2 +560,0 @@\\n-\\tprivate boolean parseFooter(byte[] value, java.util.HashMap<java.lang.String, java.lang.String> properties) {\\n-\\t\\tboolean added = false;\\n@@ -700,2 +561,0 @@\\n-\\t\\tjava.lang.String ftr_source = \\\"\\\";\\n-\\t\\tjava.lang.String ftr_datetime = \\\"\\\";\\n@@ -703,2 +562,0 @@\\n-\\t\\tint read = 0;\\n-\\t\\tboolean done = false;\\n@@ -706 +563,0 @@\\n-\\t\\twhile ((!done) && (read < value.length)) {\\n@@ -709,2 +565,0 @@\\n-\\t\\t\\tbyte val_next = value[read++];\\n-\\t\\t\\tbyte val_peek = (read < value.length) ? value[read + 1] : 0x0;\\n@@ -712,6 +566,0 @@\\n-\\t\\t\\twhile (((val_next < ((byte) (0x30))) || (val_next > ((byte) (0x39)))) && (val_next != 0)) {\\n-\\t\\t\\t\\tftr_source += ((char) (val_next & 0xff));\\n-\\t\\t\\t\\tval_next = (read < value.length) ? value[read] : 0x0;\\n-\\t\\t\\t\\tread++;\\n-\\t\\t\\t\\tif (read > value.length) { \\t\\t\\t\\t\\tbreak;}\\n-\\t\\t\\t} \\n@@ -719 +568,152 @@\\n-\\t\\t\\twhile ((((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LT) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) && (val_next != 0)) {\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\t\\t\\t(((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LT) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) && (val_next != 0)) { \\t\\t\\t\\t\\t\\t\\tbreak;}} \\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CT) { \\t\\t\\t\\t\\t\\t--read;} \\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.LT) { \\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0;} \\t\\t\\t\\t\\twhile ((bdy_title.length() > 0) && ((val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CR) || (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.LF))) { \\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0; \\t\\t\\t\\t\\t\\tif ((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) { \\t\\t\\t\\t\\t\\t\\t--read;}} } else { \\t\\t\\t\\t\\tif (FORMAT == this.FMT_IPTC_BLM) { \\t\\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.TB) { \\t\\t\\t\\t\\t\\t\\tvalue[--read] = org.apache.tika.parser.iptc.IptcAnpaParser.CT; \\t\\t\\t\\t\\t\\t\\tcontinue;}} \\t\\t\\t\\t\\tif (FORMAT == this.FMT_IPTC_RTR) { \\t\\t\\t\\t\\t\\tif (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CT) { \\t\\t\\t\\t\\t\\t\\tif ((((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.SP) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.TB)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) { \\t\\t\\t\\t\\t\\t\\t\\t--read;} \\t\\t\\t\\t\\t\\t\\tvalue[--read] = org.apache.tika.parser.iptc.IptcAnpaParser.CT; \\t\\t\\t\\t\\t\\t\\tcontinue;}}} \\t\\t\\t\\tbreak;} \\t\\t\\tboolean metastarted = false; \\t\\t\\tjava.lang.String longline = \\\"\\\"; \\t\\t\\tjava.lang.String longkey = \\\"\\\"; \\t\\t\\twhile (read < value.length) { \\t\\t\\t\\tbyte val_next = value[read++]; \\t\\t\\t\\tif ((((val_next == org.apache.tika.parser.iptc.IptcAnpaParser.SP) || (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.TB)) || (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CR)) || (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.LF)) { \\t\\t\\t\\t\\tcontinue;} \\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CT) { \\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0; \\t\\t\\t\\t\\tjava.lang.String tmp_line = \\\"\\\"; \\t\\t\\t\\t\\twhile (((((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LT) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CT)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) && (val_next != 0)) { \\t\\t\\t\\t\\t\\ttmp_line += ((char) (val_next & 0xff)); \\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0; \\t\\t\\t\\t\\t\\tif (read > value.length) { \\t\\t\\t\\t\\t\\t\\tbreak;}} \\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CT) { \\t\\t\\t\\t\\t\\t--read;} \\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.LT) { \\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0;} \\t\\t\\t\\t\\twhile ((val_next == org.apache.tika.parser.iptc.IptcAnpaParser.CR) || (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.LF)) { \\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0; \\t\\t\\t\\t\\t\\tif ((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) { \\t\\t\\t\\t\\t\\t\\t--read;}} \\t\\t\\t\\t\\tif (tmp_line.toLowerCase(java.util.Locale.ROOT).startsWith(\\\"by\\\") || longline.equals(\\\"bdy_author\\\")) { \\t\\t\\t\\t\\t\\tlongkey = \\\"bdy_author\\\"; \\t\\t\\t\\t\\t\\ttmp_line = (longline.equals(longkey) ? \\\" \\\" : \\\"\\\") + tmp_line; \\t\\t\\t\\t\\t\\tint term = tmp_line.length(); \\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"<\\\") ? tmp_line.indexOf(\\\"<\\\") : term); \\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"=\\\") ? tmp_line.indexOf(\\\"=\\\") : term); \\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"\\\\n\\\") ? tmp_line.indexOf(\\\"\\\\n\\\") : term); \\t\\t\\t\\t\\t\\tterm = (term > 0) ? term : tmp_line.length(); \\t\\t\\t\\t\\t\\tbdy_author += tmp_line.substring(tmp_line.indexOf(\\\" \\\"), term); \\t\\t\\t\\t\\t\\tmetastarted = true; \\t\\t\\t\\t\\t\\tlongline = (tmp_line.contains(\\\"=\\\") && (!longline.equals(longkey))) ? longkey : \\\"\\\";} else if (FORMAT == this.FMT_IPTC_BLM) { \\t\\t\\t\\t\\t\\tjava.lang.String byline = \\\"   by \\\"; \\t\\t\\t\\t\\t\\tif (tmp_line.toLowerCase(java.util.Locale.ROOT).contains(byline)) { \\t\\t\\t\\t\\t\\t\\tlongkey = \\\"bdy_author\\\"; \\t\\t\\t\\t\\t\\t\\tint term = tmp_line.length(); \\t\\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"<\\\") ? tmp_line.indexOf(\\\"<\\\") : term); \\t\\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"=\\\") ? tmp_line.indexOf(\\\"=\\\") : term); \\t\\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"\\\\n\\\") ? tmp_line.indexOf(\\\"\\\\n\\\") : term); \\t\\t\\t\\t\\t\\t\\tterm = (term > 0) ? term : tmp_line.length(); \\t\\t\\t\\t\\t\\t\\tbdy_author += tmp_line.substring(tmp_line.toLowerCase(java.util.Locale.ROOT).indexOf(byline) + byline.length(), term) + \\\" \\\"; \\t\\t\\t\\t\\t\\t\\tmetastarted = true; \\t\\t\\t\\t\\t\\t\\tlongline = (tmp_line.contains(\\\"=\\\") && (!longline.equals(longkey))) ? longkey : \\\"\\\";} else if (tmp_line.toLowerCase(java.util.Locale.ROOT).startsWith(\\\"c.\\\")) { \\t\\t\\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.TB) { \\t\\t\\t\\t\\t\\t\\t\\tvalue[--read] = org.apache.tika.parser.iptc.IptcAnpaParser.CT; \\t\\t\\t\\t\\t\\t\\t\\tcontinue;}} else if (tmp_line.toLowerCase(java.util.Locale.ROOT).trim().startsWith(\\\"(\\\") && tmp_line.toLowerCase(java.util.Locale.ROOT).trim().endsWith(\\\")\\\")) { \\t\\t\\t\\t\\t\\t\\tif (val_next == org.apache.tika.parser.iptc.IptcAnpaParser.TB) { \\t\\t\\t\\t\\t\\t\\t\\tvalue[--read] = org.apache.tika.parser.iptc.IptcAnpaParser.CT; \\t\\t\\t\\t\\t\\t\\t\\tcontinue;}}} else if (tmp_line.toLowerCase(java.util.Locale.ROOT).startsWith(\\\"eds\\\") || longline.equals(\\\"bdy_source\\\")) { \\t\\t\\t\\t\\t\\tlongkey = \\\"bdy_source\\\"; \\t\\t\\t\\t\\t\\ttmp_line = (longline.equals(longkey) ? \\\" \\\" : \\\"\\\") + tmp_line; \\t\\t\\t\\t\\t\\tint term = tmp_line.length(); \\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"<\\\") ? tmp_line.indexOf(\\\"<\\\") : term); \\t\\t\\t\\t\\t\\tterm = java.lang.Math.min(term, tmp_line.contains(\\\"=\\\") ? tmp_line.indexOf(\\\"=\\\") : term); \\t\\t\\t\\t\\t\\tterm = (term > 0) ? term : tmp_line.length(); \\t\\t\\t\\t\\t\\tbdy_source += tmp_line.substring(tmp_line.indexOf(\\\" \\\") + 1, term) + \\\" \\\"; \\t\\t\\t\\t\\t\\tmetastarted = true; \\t\\t\\t\\t\\t\\tlongline = (!longline.equals(longkey)) ? longkey : \\\"\\\";} else if (!metastarted) { \\t\\t\\t\\t\\t\\tbdy_title += \\\" , \\\" + tmp_line;} else { \\t\\t\\t\\t\\t\\tbdy_body += (\\\" \\\" + tmp_line) + \\\" , \\\";}} else { \\t\\t\\t\\t\\twhile ((read < value.length) && (val_next != 0)) { \\t\\t\\t\\t\\t\\tbdy_body += ((char) (val_next & 0xff)); \\t\\t\\t\\t\\t\\tval_next = (read < value.length) ? value[read++] : 0x0; \\t\\t\\t\\t\\t\\tif (read > value.length) { \\t\\t\\t\\t\\t\\t\\tbreak;}} }} \\t\\t\\tdone = true;} \\t\\tproperties.put(\\\"body\\\", bdy_body); \\t\\tproperties.put(\\\"title\\\", bdy_title); \\t\\tproperties.put(\\\"subject\\\", bdy_heading); \\t\\tproperties.put(\\\"author\\\", bdy_author); \\t\\tproperties.put(\\\"source\\\", bdy_source); \\t\\tadded = ((((bdy_body.length() + bdy_title.length()) + bdy_heading.length()) + bdy_author.length()) + bdy_source.length()) > 0; \\t\\treturn added;} \\tprivate boolean parseFooter(byte[] value, java.util.HashMap<java.lang.String, java.lang.String> properties) { \\t\\tboolean added = false; \\t\\tjava.lang.String ftr_source = \\\"\\\"; \\t\\tjava.lang.String ftr_datetime = \\\"\\\"; \\t\\tint read = 0; \\t\\tboolean done = false; \\t\\twhile ((!done) && (read < value.length)) { \\t\\t\\tbyte val_next = value[read++]; \\t\\t\\tbyte val_peek = (read < value.length) ? value[read + 1] : 0x0; \\t\\t\\twhile (((val_next < ((byte) (0x30))) || (val_next > ((byte) (0x39)))) && (val_next != 0)) { \\t\\t\\t\\tftr_source += ((char) (val_next & 0xff)); \\t\\t\\t\\tval_next = (read < value.length) ? value[read] : 0x0; \\t\\t\\t\\tread++; \\t\\t\\t\\tif (read > value.length) { \\t\\t\\t\\t\\tbreak;}} \\t\\t\\twhile ((((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LT) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) && (val_next != 0)) {\\n\\n", 
      "patchhunks": [
        {
          "MODIFIED_FILE_PATH": "\\/workdir\\/Cardumen_vul4j_apache_tika_VUL4J-36\\/.\\/output_astor\\/AstorMain-apache_tika-VUL4J-36\\/\\/src\\/\\/variant-42\\/org\\/apache\\/tika\\/parser\\/iptc\\/IptcAnpaParser.java", 
          "ORIGINAL_CODE": "read > value.length", 
          "INGREDIENT_SCOPE": "-", 
          "PATCH_HUNK_CODE": "(((val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LT) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.CR)) && (val_next != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) && (val_next != 0)", 
          "INGREDIENT_PARENT": "(((_byte_0 != org.apache.tika.parser.iptc.IptcAnpaParser.LT) && (_byte_0 != org.apache.tika.parser.iptc.IptcAnpaParser.CR)) && (_byte_0 != org.apache.tika.parser.iptc.IptcAnpaParser.LF)) && (_byte_0 != 0)", 
          "LOCATION": "org.apache.tika.parser.iptc.IptcAnpaParser", 
          "BUGGY_CODE_TYPE": "CtBinaryOperatorImpl|CtIfImpl", 
          "OPERATOR": "ExpressionReplaceOperator", 
          "PATH": "\\/workdir\\/Cardumen_vul4j_apache_tika_VUL4J-36\\/tika-parsers\\/src\\/main\\/java\\/org\\/apache\\/tika\\/parser\\/iptc\\/IptcAnpaParser.java", 
          "LINE": "511", 
          "MP_RANKING": "1", 
          "SUSPICIOUNESS": "1", 
          "PATCH_HUNK_TYPE": "CtBinaryOperatorImpl|CtIfImpl"
        }
      ], 
      "GENERATION": "21", 
      "VARIANT_ID": "42", 
      "TIME": "1662", 
      "VALIDATION": "|true|0|0|[]|", 
      "FOLDER_SOLUTION_CODE": "\\/workdir\\/Cardumen_vul4j_apache_tika_VUL4J-36\\/.\\/output_astor\\/AstorMain-apache_tika-VUL4J-36\\/\\/src\\/\\/variant-42"
    }
  ]
}