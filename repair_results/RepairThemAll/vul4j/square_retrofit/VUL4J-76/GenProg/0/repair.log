cd /workdir/GenProg_vul4j_square_retrofit_VUL4J-76;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-8-openjdk-amd64/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m -cp /script/../libs/jmetal.jar:/script/../repair_tools/arja.jar us.msu.cse.repair.Main \
	GenProg \
	-DexternalProjRoot /script/../libs/arja_external \
	-DprojectDir /workdir/GenProg_vul4j_square_retrofit_VUL4J-76 \
    -DtestFiltered false \
    -DrunTestCommand "mvn test -pl retrofit -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" \
	-DsrcJavaDir /workdir/GenProg_vul4j_square_retrofit_VUL4J-76/retrofit/src/main/java \
	-DbinJavaDir /workdir/GenProg_vul4j_square_retrofit_VUL4J-76/retrofit/target/classes \
	-DbinTestDir /workdir/GenProg_vul4j_square_retrofit_VUL4J-76/retrofit/target/test-classes \
	-DdiffFormat true \
	-Dseed 0 \
	-DgzoltarDataDir /script/../data/benchmarks/vul4j/perfectfl/VUL4J-76 \
	-Ddependences /root/.m2/repository/com/google/android/apps/common/testing/accessibility/framework/accessibility-test-framework/1.0/accessibility-test-framework-1.0.jar:/root/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar:/root/.m2/repository/org/apache/httpcomponents/httpcore/4.0.1/httpcore-4.0.1.jar:/root/.m2/repository/com/squareup/okhttp3/mockwebserver/3.11.0/mockwebserver-3.11.0.jar:/root/.m2/repository/org/json/json/20080701/json-20080701.jar:/root/.m2/repository/com/squareup/okhttp3/okhttp/3.11.0/okhttp-3.11.0.jar:/root/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.2.60/kotlin-stdlib-common-1.2.60.jar:/root/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.2.60/kotlin-stdlib-1.2.60.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/.m2/repository/org/ow2/asm/asm-analysis/5.0.1/asm-analysis-5.0.1.jar:/root/.m2/repository/com/almworks/sqlite4java/sqlite4java/0.282/sqlite4java-0.282.jar:/root/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar:/root/.m2/repository/org/robolectric/robolectric/3.0/robolectric-3.0.jar:/root/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/root/.m2/repository/org/ow2/asm/asm-commons/5.0.1/asm-commons-5.0.1.jar:/root/.m2/repository/xpp3/xpp3/1.1.4c/xpp3-1.1.4c.jar:/root/.m2/repository/org/ow2/asm/asm-tree/5.0.1/asm-tree-5.0.1.jar:/root/.m2/repository/com/squareup/okio/okio/1.14.0/okio-1.14.0.jar:/root/.m2/repository/org/robolectric/robolectric-utils/3.0/robolectric-utils-3.0.jar:/root/.m2/repository/com/ibm/icu/icu4j/53.1/icu4j-53.1.jar:/root/.m2/repository/org/robolectric/shadows-core/3.0/shadows-core-3.0.jar:/root/.m2/repository/com/google/guava/guava/19.0/guava-19.0.jar:/root/.m2/repository/org/apache/httpcomponents/httpclient/4.0.1/httpclient-4.0.1.jar:/root/.m2/repository/org/robolectric/robolectric-resources/3.0/robolectric-resources-3.0.jar:/root/.m2/repository/org/robolectric/robolectric-annotations/3.0/robolectric-annotations-3.0.jar:/root/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar:/root/.m2/repository/org/khronos/opengl-api/gl1.1-android-2.1_r1/opengl-api-gl1.1-android-2.1_r1.jar:/root/.m2/repository/org/apache/ant/ant-launcher/1.8.0/ant-launcher-1.8.0.jar:/root/.m2/repository/org/apache/ant/ant/1.8.0/ant-1.8.0.jar:/root/.m2/repository/org/ow2/asm/asm-util/5.0.1/asm-util-5.0.1.jar:/root/.m2/repository/com/ximpleware/vtd-xml/2.11/vtd-xml-2.11.jar:/root/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar:/root/.m2/repository/org/ow2/asm/asm/5.0.1/asm-5.0.1.jar:/root/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/root/.m2/repository/com/google/android/android/4.1.1.4/android-4.1.1.4.jar:/root/.m2/repository/org/assertj/assertj-core/1.7.0/assertj-core-1.7.0.jar:/root/.m2/repository/org/apache/maven/maven-ant-tasks/2.1.3/maven-ant-tasks-2.1.3.jar:/root/.m2/repository/junit/junit/4.12/junit-4.12.jar:/root/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk16/1.46/bcprov-jdk16-1.46.jar:/root/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
Fault localization starts...
Number of positive tests: 313
Number of negative tests: 3
Negative tests: [retrofit2.RequestFactoryTest#encodedPathParametersAndPathTraversal, retrofit2.RequestFactoryTest#dotDotsOkayWhenNotFullPathSegment, retrofit2.RequestFactoryTest#pathParametersAndPathTraversal]
Faulty Lines: 
retrofit2.RequestBuilder#94:1.0
Fault localization is finished!
AST parsing starts...
AST parsing is finished!
Detection of local variables starts...
Detection of local variables is finished!
Detection of fields starts...
Detection of fields is finished!
Detection of methods starts...
Detection of methods is finished!
Ingredient screener starts...
Ingredient screener is finished!
Initialization of manipulations starts...
Initialization of manipulations is finished!
Filtering of the tests starts...
Number of positive tests considered: 313
Filtering of the tests is finished!
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.initPopulation(GenProgGA.java:107)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:49)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 21
Fitness: 24.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    Platform platform = Platform.get();
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.initPopulation(GenProgGA.java:107)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:49)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Timeout occurs!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.initPopulation(GenProgGA.java:107)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:49)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.initPopulation(GenProgGA.java:107)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:49)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.initPopulation(GenProgGA.java:107)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:49)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.initPopulation(GenProgGA.java:107)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:49)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.initPopulation(GenProgGA.java:107)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:49)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    if (baseUrl == null) {
+		throw new IllegalStateException("Base URL required.");
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    contentType = MediaType.get(value);
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 21
Fitness: 24.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Timeout occurs!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Timeout occurs!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream Closed
	at java.io.FileInputStream.available0(Native Method)
	at java.io.FileInputStream.available(FileInputStream.java:306)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:353)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Timeout occurs!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Timeout occurs!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,14 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,14 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	body = formBuilder.build();
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 21
Fitness: 24.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,14 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,14 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,14 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    if (contentType != null) {
+		if (body != null) {
+			body = new ContentTypeOverridingRequestBody(body, contentType);
+		} else {
+			requestBuilder.addHeader("Content-Type", contentType.toString());
+		}
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    ParameterHandler<?> result = null;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 21
Fitness: 24.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 21
Fitness: 24.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:58)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Timeout occurs!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	body = new ContentTypeOverridingRequestBody(body, contentType);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    multipartBuilder.setType(MultipartBody.FORM);
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 21
Fitness: 24.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	throw new IllegalStateException(
+			"Cannot read raw response body of a converted body.");
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	urlBuilder.addEncodedQueryParameter(name, value);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	urlBuilder.addEncodedQueryParameter(name, value);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	urlBuilder.addEncodedQueryParameter(name, value);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 21
Fitness: 24.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    multipartBuilder.setType(MultipartBody.FORM);
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 21
Fitness: 24.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder.setType(MultipartBody.FORM);
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	MediaType contentType = this.contentType;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	RequestBody body = this.body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	contentType = MediaType.get(value);
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	if (value.isEmpty()) {
+		return;
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	if (value.isEmpty()) {
+		return;
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    if (value.isEmpty()) {
+		return;
+	}
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 4
Fitness: 7.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Timeout occurs!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	if (encoded) {
+		urlBuilder.addEncodedQueryParameter(name, value);
+	} else {
+		urlBuilder.addQueryParameter(name, value);
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,14 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	if (encoded) {
+		urlBuilder.addEncodedQueryParameter(name, value);
+	} else {
+		urlBuilder.addQueryParameter(name, value);
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	if (encoded) {
+		urlBuilder.addEncodedQueryParameter(name, value);
+	} else {
+		urlBuilder.addQueryParameter(name, value);
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	if (encoded) {
+		urlBuilder.addEncodedQueryParameter(name, value);
+	} else {
+		urlBuilder.addQueryParameter(name, value);
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,14 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	if (encoded) {
+		urlBuilder.addEncodedQueryParameter(name, value);
+	} else {
+		urlBuilder.addQueryParameter(name, value);
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	if (encoded) {
+		urlBuilder.addEncodedQueryParameter(name, value);
+	} else {
+		urlBuilder.addQueryParameter(name, value);
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	if (encoded) {
+		urlBuilder.addEncodedQueryParameter(name, value);
+	} else {
+		urlBuilder.addQueryParameter(name, value);
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	if (encoded) {
+		urlBuilder.addEncodedQueryParameter(name, value);
+	} else {
+		urlBuilder.addQueryParameter(name, value);
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	if (encoded) {
+		urlBuilder.addEncodedQueryParameter(name, value);
+	} else {
+		urlBuilder.addQueryParameter(name, value);
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,18 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,6 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 16
Fitness: 19.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,18 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,15 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    if (encoded) {
+		urlBuilder.addEncodedQueryParameter(name, value);
+	} else {
+		urlBuilder.addQueryParameter(name, value);
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 21
Fitness: 24.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	if (encoded) {
+		urlBuilder.addEncodedQueryParameter(name, value);
+	} else {
+		urlBuilder.addQueryParameter(name, value);
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	multipartBuilder = new MultipartBody.Builder();
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,18 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,18 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:45)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,13 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,19 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	if (body == null) {
+		if (formBuilder != null) {
+			body = formBuilder.build();
+		} else if (multipartBuilder != null) {
+			body = multipartBuilder.build();
+		} else if (hasBody) {
+			body = RequestBody.create(null, new byte[0]);
+		}
+	}
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,18 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,18 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    relativeUrl = relativeUrl.replace("{" + name + "}",
+			canonicalizeForPath(value, encoded));
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:118)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:58)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Timeout occurs!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,11 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,12 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,10 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	this.relativeUrl = relativeUrl;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,7 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,9 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {
Number of failed tests: 1
Fitness: 1.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -91,7 +91,8 @@ final class RequestBuilder {
// The relative URL is cleared when the first query parameter is set.
throw new AssertionError();
}
-    relativeUrl = relativeUrl.replace("{" + name + "}", canonicalizeForPath(value, encoded));
+    this.body = body;
+	this.body = body;
}

private static String canonicalizeForPath(String input, boolean alreadyEncoded) {


Node: 2c8178711f7b



Date: Mon Nov 28 05:37:49 EST 2022

