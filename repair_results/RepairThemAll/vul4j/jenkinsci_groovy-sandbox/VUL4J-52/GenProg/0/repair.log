cd /workdir/GenProg_vul4j_jenkinsci_groovy-sandbox_VUL4J-52;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-8-openjdk-amd64/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m -cp /script/../libs/jmetal.jar:/script/../repair_tools/arja.jar us.msu.cse.repair.Main \
	GenProg \
	-DexternalProjRoot /script/../libs/arja_external \
	-DprojectDir /workdir/GenProg_vul4j_jenkinsci_groovy-sandbox_VUL4J-52 \
    -DtestFiltered false \
    -DrunTestCommand "mvn test -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" \
	-DsrcJavaDir /workdir/GenProg_vul4j_jenkinsci_groovy-sandbox_VUL4J-52/src/main/java \
	-DbinJavaDir /workdir/GenProg_vul4j_jenkinsci_groovy-sandbox_VUL4J-52/target/classes \
	-DbinTestDir /workdir/GenProg_vul4j_jenkinsci_groovy-sandbox_VUL4J-52/target/test-classes \
	-DdiffFormat true \
	-Dseed 0 \
	-DgzoltarDataDir /script/../data/benchmarks/vul4j/perfectfl/VUL4J-52 \
	-Ddependences /root/.m2/repository/junit/junit/4.12/junit-4.12.jar:/root/.m2/repository/org/jenkins-ci/test-annotations/1.2/test-annotations-1.2.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/.m2/repository/org/codehaus/groovy/groovy/2.4.7/groovy-2.4.7.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
Fault localization starts...
Number of positive tests: 54
Number of negative tests: 1
Negative tests: [org.kohsuke.groovy.sandbox.FinalizerTest#testOverridingFinalizeForbidden]
Faulty Lines: 
org.kohsuke.groovy.sandbox.SandboxTransformer#140:1.0
Fault localization is finished!
AST parsing starts...
AST parsing is finished!
Detection of local variables starts...
Detection of local variables is finished!
Detection of fields starts...
Detection of fields is finished!
Detection of methods starts...
Detection of methods is finished!
Ingredient screener starts...
Ingredient screener is finished!
Initialization of manipulations starts...
Initialization of manipulations is finished!
Filtering of the tests starts...
Number of positive tests considered: 54
Filtering of the tests is finished!
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            processConstructors(visitor, classNode);
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.initPopulation(GenProgGA.java:107)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:49)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.initPopulation(GenProgGA.java:107)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:49)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.initPopulation(GenProgGA.java:107)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:49)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.initPopulation(GenProgGA.java:107)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:49)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            List<Expression> scwArgs = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            ConstructorNode syntheticConstructor = new ConstructorNode(
+					Modifier.PUBLIC, new BlockStatement());
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            ClassNode superClass = classNode.getSuperClass();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            ClassNode superClass = classNode.getSuperClass();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            int x = 0;
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            for (FieldNode f : classNode.getFields()) {
+				visitor.visitField(f);
+			}
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            for (Statement s : classNode.getObjectInitializerStatements()) {
+				s.visit(visitor);
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            for (Statement s : classNode.getObjectInitializerStatements()) {
+				s.visit(visitor);
+			}
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            List<Expression> scwArgs = new ArrayList<>();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            int x = 0;
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            ConstructorNode syntheticConstructor = new ConstructorNode(
+					Modifier.PUBLIC, new BlockStatement());
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            return;
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            List<Expression> scwArgs = new ArrayList<>();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            processConstructors(visitor, classNode);
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            for (Statement s : classNode.getObjectInitializerStatements()) {
+				s.visit(visitor);
+			}
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            for (Statement s : classNode.getObjectInitializerStatements()) {
+				s.visit(visitor);
+			}
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            processConstructors(visitor, classNode);
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -138,6 +138,7 @@ public class SandboxTransformer extends CompilationCustomizer {
processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
visitor.visitMethod(m);
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 46
Fitness: 47.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -138,6 +138,8 @@ public class SandboxTransformer extends CompilationCustomizer {
processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
visitor.visitMethod(m);
+			ClassNode superClass = classNode.getSuperClass();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 46
Fitness: 47.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            ConstructorNode syntheticConstructor = new ConstructorNode(
+					Modifier.PUBLIC, new BlockStatement());
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            ConstructorNode syntheticConstructor = new ConstructorNode(
+					Modifier.PUBLIC, new BlockStatement());
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Timeout occurs!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            processConstructors(visitor, classNode);
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            for (Statement s : classNode.getObjectInitializerStatements()) {
+				s.visit(visitor);
+			}
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            for (Statement s : classNode.getObjectInitializerStatements()) {
+				s.visit(visitor);
+			}
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            processConstructors(visitor, classNode);
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            String name = null;
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            ConstructorNode syntheticConstructor = new ConstructorNode(
+					Modifier.PUBLIC, new BlockStatement());
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            ConstructorNode syntheticConstructor = new ConstructorNode(
+					Modifier.PUBLIC, new BlockStatement());
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,6 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            for (Statement s : classNode.getObjectInitializerStatements()) {
+				s.visit(visitor);
+			}
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            for (Statement s : classNode.getObjectInitializerStatements()) {
+				s.visit(visitor);
+			}
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
Timeout occurs!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,13 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			List<Statement> body2 = new ArrayList<>();
+			List<ConstructorNode> declaredConstructors = classNode
+					.getDeclaredConstructors();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,13 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			ConstructorNode syntheticConstructor = new ConstructorNode(
+					Modifier.PUBLIC, new BlockStatement());
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            List<Statement> body2 = new ArrayList<>();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			List<Expression> thisArgs = new ArrayList<>();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			String name = null;
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,14 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,13 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			ClassNode superClass = classNode.getSuperClass();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,13 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,9 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,14 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			String name = null;
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			final AtomicReference<Expression> superArgsTransformed = new AtomicReference<>();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,14 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			List<Expression> scwArgs = new ArrayList<>();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,7 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 2
Fitness: 3.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
Compilation fails!
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.GenProgProblem.invokeTestExecutor(GenProgProblem.java:144)
	at us.msu.cse.repair.ec.problems.GenProgProblem.evaluate(GenProgProblem.java:99)
	at us.msu.cse.repair.ec.algorithms.GenProgGA.execute(GenProgGA.java:76)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.GenProgMain.main(GenProgMain.java:65)
	at us.msu.cse.repair.Main.main(Main.java:10)
java.lang.NullPointerException
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,10 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,11 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            if (classNode == null) {
+				return;
+			}
+			TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);
Number of failed tests: 1
Fitness: 2.0
One fitness evaluation is finished...
One fitness evaluation starts...
----------------------------------
Patch Candidate:
@@ -137,7 +137,8 @@ public class SandboxTransformer extends CompilationCustomizer {

processConstructors(visitor, classNode);
for (MethodNode m : classNode.getMethods()) {
-            visitor.visitMethod(m);
+            TupleExpression superArgs = new TupleExpression();
+			visitor.visitMethod(m);
}
for (Statement s : classNode.getObjectInitializerStatements()) {
s.visit(visitor);


Node: 2c8178711f7b



Date: Mon Oct  3 12:01:35 EDT 2022

