cd /workdir/Arja_vul4j_apache_camel_VUL4J-3;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-8-openjdk-amd64/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m -cp /script/../libs/jmetal.jar:/script/../repair_tools/arja.jar us.msu.cse.repair.Main \
	Arja \
	-DexternalProjRoot /script/../libs/arja_external \
	-DprojectDir /workdir/Arja_vul4j_apache_camel_VUL4J-3 \
    -DtestFiltered false \
    -DrunTestCommand "mvn test -pl camel-core -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" \
	-DsrcJavaDir /workdir/Arja_vul4j_apache_camel_VUL4J-3/camel-core/src/main/java \
	-DbinJavaDir /workdir/Arja_vul4j_apache_camel_VUL4J-3/camel-core/target/classes \
	-DbinTestDir /workdir/Arja_vul4j_apache_camel_VUL4J-3/camel-core/target/test-classes \
	-DdiffFormat true \
	-Dseed 0 \
	-DgzoltarDataDir /script/../data/benchmarks/vul4j/perfectfl/VUL4J-3 \
	-Ddependences /root/.m2/repository/org/apache/camel/apt/2.15-SNAPSHOT/apt-2.15-SNAPSHOT.jar:/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.3/jackson-core-2.4.3.jar:/root/.m2/repository/com/sun/xml/bind/jaxb-core/2.2.11/jaxb-core-2.2.11.jar:/root/.m2/repository/org/codehaus/woodstox/woodstox-core-asl/4.4.1/woodstox-core-asl-4.4.1.jar:/root/.m2/repository/org/apache/camel/spi-annotations/2.15-SNAPSHOT/spi-annotations-2.15-SNAPSHOT.jar:/root/.m2/repository/cglib/cglib-nodep/2.2.2/cglib-nodep-2.2.2.jar:/root/.m2/repository/org/easymock/easymock/3.2/easymock-3.2.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/.m2/repository/xml-resolver/xml-resolver/1.2/xml-resolver-1.2.jar:/root/.m2/repository/com/googlecode/concurrentlinkedhashmap/concurrentlinkedhashmap-lru/1.4.2/concurrentlinkedhashmap-lru-1.4.2.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.7.10/slf4j-log4j12-1.7.10.jar:/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar:/root/.m2/repository/junit/junit/4.12/junit-4.12.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.6.6/slf4j-api-1.6.6.jar:/root/.m2/repository/org/osgi/org.osgi.core/4.3.1/org.osgi.core-4.3.1.jar:/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.3/jackson-databind-2.4.3.jar:/root/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.11/jaxb-impl-2.2.11.jar:/root/.m2/repository/org/objenesis/objenesis/1.3/objenesis-1.3.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
Fault localization starts...
Number of positive tests: 5221
Number of negative tests: 1
Negative tests: [org.apache.camel.component.xslt.XsltDTDTest#testSendingStringMessage]
Faulty Lines: 
org.apache.camel.converter.jaxp.XmlConverter#595:1.0
org.apache.camel.converter.jaxp.XmlConverter#593:1.0
Fault localization is finished!
AST parsing starts...
AST parsing is finished!
Detection of local variables starts...
Detection of local variables is finished!
Detection of fields starts...
Detection of fields is finished!
Detection of methods starts...
Detection of methods is finished!
Ingredient screener starts...
Ingredient screener is finished!
Initialization of manipulations starts...
Initialization of manipulations is finished!
Filtering of the tests starts...
Number of positive tests considered: 5221
Filtering of the tests is finished!
----------------------------------
Patch Candidate:
@@ -590,7 +590,6 @@ public class XmlConverter {
sfactory = exchange.getProperty(Exchange.SAXPARSER_FACTORY, SAXParserFactory.class);
}
if (sfactory == null) {
-                sfactory = SAXParserFactory.newInstance();
try {
sfactory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);
} catch (Exception e) {
Number of failed tests: 1, 5
Weighted failure rate: 1.0004788354721317
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:99)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:99)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -592,7 +592,6 @@ public class XmlConverter {
if (sfactory == null) {
sfactory = SAXParserFactory.newInstance();
try {
-                    sfactory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);
} catch (Exception e) {
LOG.warn("SAXParser doesn't support the feature {} with value {}, due to {}.", new Object[]{javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e});
}
Number of failed tests: 1, 5
Weighted failure rate: 1.0004788354721317
----------------------------------
Patch Candidate:
@@ -590,9 +590,7 @@ public class XmlConverter {
sfactory = exchange.getProperty(Exchange.SAXPARSER_FACTORY, SAXParserFactory.class);
}
if (sfactory == null) {
-                sfactory = SAXParserFactory.newInstance();
try {
-                    sfactory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);
} catch (Exception e) {
LOG.warn("SAXParser doesn't support the feature {} with value {}, due to {}.", new Object[]{javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e});
}
Number of failed tests: 1, 4
Weighted failure rate: 1.0003830683777055
----------------------------------
Patch Candidate:
@@ -590,9 +590,7 @@ public class XmlConverter {
sfactory = exchange.getProperty(Exchange.SAXPARSER_FACTORY, SAXParserFactory.class);
}
if (sfactory == null) {
-                sfactory = SAXParserFactory.newInstance();
try {
-                    sfactory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);
} catch (Exception e) {
LOG.warn("SAXParser doesn't support the feature {} with value {}, due to {}.", new Object[]{javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e});
}
Number of failed tests: 1, 3
Weighted failure rate: 1.0002873012832791
----------------------------------
Patch Candidate:
@@ -592,7 +592,6 @@ public class XmlConverter {
if (sfactory == null) {
sfactory = SAXParserFactory.newInstance();
try {
-                    sfactory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);
} catch (Exception e) {
LOG.warn("SAXParser doesn't support the feature {} with value {}, due to {}.", new Object[]{javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e});
}
Number of failed tests: 1, 3
Weighted failure rate: 1.0002873012832791
----------------------------------
Patch Candidate:
@@ -590,9 +590,7 @@ public class XmlConverter {
sfactory = exchange.getProperty(Exchange.SAXPARSER_FACTORY, SAXParserFactory.class);
}
if (sfactory == null) {
-                sfactory = SAXParserFactory.newInstance();
try {
-                    sfactory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);
} catch (Exception e) {
LOG.warn("SAXParser doesn't support the feature {} with value {}, due to {}.", new Object[]{javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e});
}
Number of failed tests: 1, 4
Weighted failure rate: 1.0003830683777055
----------------------------------
Patch Candidate:
@@ -592,7 +592,6 @@ public class XmlConverter {
if (sfactory == null) {
sfactory = SAXParserFactory.newInstance();
try {
-                    sfactory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);
} catch (Exception e) {
LOG.warn("SAXParser doesn't support the feature {} with value {}, due to {}.", new Object[]{javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e});
}
Number of failed tests: 1, 4
Weighted failure rate: 1.0003830683777055
----------------------------------
Patch Candidate:
@@ -590,9 +590,7 @@ public class XmlConverter {
sfactory = exchange.getProperty(Exchange.SAXPARSER_FACTORY, SAXParserFactory.class);
}
if (sfactory == null) {
-                sfactory = SAXParserFactory.newInstance();
try {
-                    sfactory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);
} catch (Exception e) {
LOG.warn("SAXParser doesn't support the feature {} with value {}, due to {}.", new Object[]{javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e});
}
Number of failed tests: 1, 6
Weighted failure rate: 1.000574602566558
----------------------------------
Patch Candidate:
@@ -592,7 +592,6 @@ public class XmlConverter {
if (sfactory == null) {
sfactory = SAXParserFactory.newInstance();
try {
-                    sfactory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);
} catch (Exception e) {
LOG.warn("SAXParser doesn't support the feature {} with value {}, due to {}.", new Object[]{javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e});
}
Number of failed tests: 1, 4
Weighted failure rate: 1.0003830683777055
----------------------------------
Patch Candidate:
@@ -590,9 +590,7 @@ public class XmlConverter {
sfactory = exchange.getProperty(Exchange.SAXPARSER_FACTORY, SAXParserFactory.class);
}
if (sfactory == null) {
-                sfactory = SAXParserFactory.newInstance();
try {
-                    sfactory.setFeature(javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, true);
} catch (Exception e) {
LOG.warn("SAXParser doesn't support the feature {} with value {}, due to {}.", new Object[]{javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING, "true", e});
}


Node: b97f25038321



Date: Fri Sep 16 14:52:53 EDT 2022

