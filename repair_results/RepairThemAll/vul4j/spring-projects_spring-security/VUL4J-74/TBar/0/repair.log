cd /workdir/TBar_vul4j_spring-projects_spring-security_VUL4J-74;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-8-openjdk-amd64/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m \
    -cp /script/../libs/tbar_external/com.gzoltar-0.1.1-jdk7.jar:/script/../repair_tools/tbar.jar edu.lu.uni.serval.tbar.main.Main \
    "/workdir/TBar_vul4j_spring-projects_spring-security_VUL4J-74" "org.springframework.security.core.token.SecureRandomFactoryBeanTests#testCreatesUsingSeed" "/core/src/main/java/" "/core/src/test/java/" "/core/build/classes/java/main/" "/core/build/classes/java/test/" "/script/../data/benchmarks/vul4j/perfectfl/VUL4J-74/spectra.txt" "./gradlew :spring-security-core:test --tests org.springframework.security.core.token.SecureRandomFactoryBeanTests.testCreatesUsingSeed" "./gradlew :spring-security-core:test" "/workdir/TBar_vul4j_spring-projects_spring-security_VUL4J-74/core/build/classes/java/test:/workdir/TBar_vul4j_spring-projects_spring-security_VUL4J-74/core/build/resources/test:/workdir/TBar_vul4j_spring-projects_spring-security_VUL4J-74/core/build/classes/java/main:/workdir/TBar_vul4j_spring-projects_spring-security_VUL4J-74/core/build/resources/main:/root/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/5.0.13.RELEASE/16f61ac3bf75131034d4ace1ac24b199e03c6ba1/spring-context-5.0.13.RELEASE.jar:/root/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/5.0.13.RELEASE/eb756b27d894d4de9491513a7f641e1ad2effcab/spring-aop-5.0.13.RELEASE.jar:/root/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/5.0.13.RELEASE/13880e7cd21df626736d6a4f5decd17b42cdeaca/spring-beans-5.0.13.RELEASE.jar:/root/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/5.0.13.RELEASE/eb4651b7c53be5a74f45717f262106758e58b681/spring-expression-5.0.13.RELEASE.jar:/root/.gradle/caches/modules-2/files-2.1/org.springframework/spring-test/5.0.13.RELEASE/6558aba528b690efcd04cef853862e66d7ad1fab/spring-test-5.0.13.RELEASE.jar:/root/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/5.0.13.RELEASE/5a306ec429a43ce126dae5df85927bc91e395894/spring-core-5.0.13.RELEASE.jar:/workdir/TBar_vul4j_spring-projects_spring-security_VUL4J-74/crypto/build/libs/spring-security-crypto-5.0.12.BUILD-SNAPSHOT.jar:/root/.gradle/caches/modules-2/files-2.1/org.powermock/powermock-module-junit4/2.0.0/6930eaf4dec9736d25423f4382d6212c169df576/powermock-module-junit4-2.0.0.jar:/root/.gradle/caches/modules-2/files-2.1/org.powermock/powermock-module-junit4-common/2.0.0/b04042e0669345b338fcd62fe5383de7cb761cf6/powermock-module-junit4-common-2.0.0.jar:/root/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/2973d150c0dc1fefe998f834810d68f278ea58ec/junit-4.12.jar:/root/.gradle/caches/modules-2/files-2.1/org.powermock/powermock-api-mockito2/2.0.0/12d4d2de4152d75421bf0d1da2114370abfa29a5/powermock-api-mockito2-2.0.0.jar:/root/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/2.18.3/98aa130476c5d1915dac35b5ad053a7ffcd675bc/mockito-core-2.18.3.jar:/root/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-core/3.11.1/fdac3217b804d6900fa3650f17b5cb48e620b140/assertj-core-3.11.1.jar:/root/.gradle/caches/modules-2/files-2.1/org.powermock/powermock-api-support/2.0.0/baf2d5520bb281b166cef0e9edc7b1ac0b85f813/powermock-api-support-2.0.0.jar:/root/.gradle/caches/modules-2/files-2.1/org.powermock/powermock-core/2.0.0/c34a6706f810172e210d218627abf0541b9d66d2/powermock-core-2.0.0.jar:/root/.gradle/caches/modules-2/files-2.1/org.powermock/powermock-reflect/2.0.0/cd452bc345ec9f88ec5efecd41139de0cb1d4265/powermock-reflect-2.0.0.jar:/root/.gradle/caches/modules-2/files-2.1/commons-collections/commons-collections/3.2.2/8ad72fe39fa8c91eaaf12aadb21e0c3661fe26d5/commons-collections-3.2.2.jar:/root/.gradle/caches/modules-2/files-2.1/io.projectreactor/reactor-test/3.1.16.RELEASE/10759da94b566a03af3892fdf74c1104680a875c/reactor-test-3.1.16.RELEASE.jar:/root/.gradle/caches/modules-2/files-2.1/org.skyscreamer/jsonassert/1.5.0/6c9d5fe2f59da598d9aefc1cfc6528ff3cf32df3/jsonassert-1.5.0.jar:/root/.gradle/caches/modules-2/files-2.1/org.slf4j/jcl-over-slf4j/1.7.26/33fbc2d93de829fa5e263c5ce97f5eab8f57d53e/jcl-over-slf4j-1.7.26.jar:/root/.gradle/caches/modules-2/files-2.1/org.hsqldb/hsqldb/2.4.1/9daff99b4fbd6809fd46ab4327650ad00a1be6d4/hsqldb-2.4.1.jar:/root/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/5.0.13.RELEASE/db00d2cd65e1b556229104cc95ece433a83c72fe/spring-jcl-5.0.13.RELEASE.jar:/root/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar:/root/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.7.9/51218a01a882c04d0aba8c028179cce488bbcb58/byte-buddy-1.7.9.jar:/root/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy-agent/1.7.9/a6c65f9da7f467ee1f02ff2841ffd3155aee2fc9/byte-buddy-agent-1.7.9.jar:/root/.gradle/caches/modules-2/files-2.1/org.objenesis/objenesis/2.6/639033469776fd37c08358c6b92a4761feb2af4b/objenesis-2.6.jar:/root/.gradle/caches/modules-2/files-2.1/org.javassist/javassist/3.22.0-CR2/44eaf0990dea92f4bca4b9931b2239c0e8756ee7/javassist-3.22.0-CR2.jar:/root/.gradle/caches/modules-2/files-2.1/io.projectreactor/reactor-core/3.1.16.RELEASE/80d2b9cdcd3cee810a6a763e084f842b798c2299/reactor-core-3.1.16.RELEASE.jar:/root/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar:/root/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.7.26/77100a62c2e6f04b53977b9f541044d7d722693d/slf4j-api-1.7.26.jar:/root/.gradle/caches/modules-2/files-2.1/org.reactivestreams/reactive-streams/1.0.1/1b1c911686eb40179219466e6a59b634b9d7a748/reactive-streams-1.0.1.jar:/root/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.9.8/11283f21cc480aa86c4df7a0a3243ec508372ed2/jackson-databind-2.9.8.jar:/root/.gradle/caches/modules-2/files-2.1/javax.annotation/jsr250-api/1.0/5025422767732a1ab45d93abfea846513d742dcf/jsr250-api-1.0.jar:/root/.gradle/caches/modules-2/files-2.1/net.sf.ehcache/ehcache/2.10.6/38076997b10f5c762a210ea8b9f6099da35ac5f/ehcache-2.10.6.jar:/root/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjrt/1.9.2/aa6462d131f63569997e74ecd345359a7d22d1d3/aspectjrt-1.9.2.jar:/root/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/5.0.13.RELEASE/a88af1289bb3253b9d2051956b40b1a3796372c2/spring-jdbc-5.0.13.RELEASE.jar:/root/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/5.0.13.RELEASE/a8442e8d2c11fd6a64f0c5476fa0416bb20463fa/spring-tx-5.0.13.RELEASE.jar:/root/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.9.8/ba7f0e6f8f1b28d251eeff2a5604bed34c53ff35/jackson-annotations-2.9.8.jar:/root/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.9.8/f5a654e4675769c716e5b387830d19b501ca191/jackson-core-2.9.8.jar";
echo "\n\nNode: `hostname`\n";
echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
18:53:36,015 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Could NOT find resource [logback-test.xml]
18:53:36,015 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Could NOT find resource [logback.groovy]
18:53:36,015 |-INFO in ch.qos.logback.classic.LoggerContext[TBar] - Found resource [logback.xml] at [jar:file:/repair_tools/tbar.jar!/logback.xml]
18:53:36,026 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@5a42bbf4 - URL [jar:file:/repair_tools/tbar.jar!/logback.xml] is not of type file
18:53:36,077 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
18:53:36,080 |-INFO in ch.qos.logback.classic.joran.action.ContextNameAction - Setting logger context name as [TBar]
18:53:36,080 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
18:53:36,083 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
18:53:36,126 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.hibernate.engine.query.HQLQueryPlan] to DEBUG
18:53:36,126 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.hibernate.engine.query.HQLQueryPlan] to false
18:53:36,126 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [com.piedra.logback] to DEBUG
18:53:36,126 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - Could not find an appender named [FILE]. Did you define it below instead of above in the configuration file?
18:53:36,126 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - See http://logback.qos.ch/codes.html#appender_order for more details.
18:53:36,126 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to DEBUG
18:53:36,126 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
18:53:36,127 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - Could not find an appender named [ROLLINGFILE]. Did you define it below instead of above in the configuration file?
18:53:36,127 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - See http://logback.qos.ch/codes.html#appender_order for more details.
18:53:36,127 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
18:53:36,129 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@270421f5 - Registering current configuration as safe fallback point

2022-09-14 18:53:36.393 [main] INFO  edu.lu.uni.serval.tbar.AbstractFixer - TBar_vul4j_spring-projects_spring-security_VUL4J-74 Failed Tests: 1
2022-09-14 18:53:36.397 [main] INFO  edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Start to fix suspicious code======
2022-09-14 18:53:36.397 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.springframework.security.core.token.SecureRandomFactoryBean ===38
2022-09-14 18:53:36.767 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
SecureRandom rnd = SecureRandom.getInstance(algorithm);
2022-09-14 18:53:38.890 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -35,7 +35,7 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-		SecureRandom rnd = SecureRandom.getInstance(algorithm);
+		SecureRandom rnd = SecureRandom.getInstance(getObjectType());
2022-09-14 18:53:38.890 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:53:39.535 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 18:53:39.548 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -35,7 +35,7 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-		SecureRandom rnd = SecureRandom.getInstance(algorithm);
+		SecureRandom rnd = SecureRandom.getInstance(isSingleton());
2022-09-14 18:53:39.548 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:53:40.161 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 18:53:40.187 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -35,7 +35,8 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-		SecureRandom rnd = SecureRandom.getInstance(algorithm);
+		if (algorithm != null) {
+	SecureRandom rnd = SecureRandom.getInstance(algorithm);
@@ -51,6 +52,8 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
+	}
+
2022-09-14 18:53:40.188 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:53:40.798 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 18:53:40.817 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -35,7 +35,10 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-		SecureRandom rnd = SecureRandom.getInstance(algorithm);
+		if (algorithm == null) {
+	    throw new IllegalArgumentException("Null 'algorithm' argument.");
+	}
+SecureRandom rnd = SecureRandom.getInstance(algorithm);
2022-09-14 18:53:40.817 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:53:41.514 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 18:54:09.850 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -35,7 +35,10 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-		SecureRandom rnd = SecureRandom.getInstance(algorithm);
+		if (algorithm == null) {
+	    return null;
+	}
+SecureRandom rnd = SecureRandom.getInstance(algorithm);
2022-09-14 18:54:09.850 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:54:10.585 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 18:54:23.270 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -35,7 +35,8 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-		SecureRandom rnd = SecureRandom.getInstance(algorithm);
+		if (algorithm == null) algorithm = new String();
+ SecureRandom rnd = SecureRandom.getInstance(algorithm);
2022-09-14 18:54:23.270 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:54:23.893 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 18:54:37.610 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -35,7 +35,8 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-		SecureRandom rnd = SecureRandom.getInstance(algorithm);
+		if (algorithm == null) return new SecureRandom();
+	 SecureRandom rnd = SecureRandom.getInstance(algorithm);
2022-09-14 18:54:37.610 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:54:38.219 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 18:54:49.657 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -35,7 +35,8 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-		SecureRandom rnd = SecureRandom.getInstance(algorithm);
+		if (algorithm == null) return rnd;
+	 SecureRandom rnd = SecureRandom.getInstance(algorithm);
2022-09-14 18:54:49.657 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:54:50.286 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 18:54:50.369 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -35,7 +35,7 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-		SecureRandom rnd = SecureRandom.getInstance(algorithm);
+
2022-09-14 18:54:50.369 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:54:50.995 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 18:54:51.017 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -34,22 +34,7 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-	public SecureRandom getObject() throws Exception {
-		SecureRandom rnd = SecureRandom.getInstance(algorithm);
-
-		if (seed != null) {
-			// Seed specified, so use it
-			byte[] seedBytes = FileCopyUtils.copyToByteArray(seed.getInputStream());
-			rnd.setSeed(seedBytes);
-		}
-		else {
-			// Request the next bytes, thus eagerly incurring the expense of default
-			// seeding
-			rnd.nextBytes(new byte[1]);
-		}
-
-		return rnd;
-	}
+
2022-09-14 18:54:51.018 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:54:51.615 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 18:54:51.620 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.springframework.security.core.token.SecureRandomFactoryBean ===45
2022-09-14 18:54:51.628 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed to identify the buggy statement in: org.springframework.security.core.token.SecureRandomFactoryBean --- 45
2022-09-14 18:54:51.628 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.springframework.security.core.token.SecureRandomFactoryBean ===48
2022-09-14 18:54:51.634 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
rnd.nextBytes(new byte[1]);
2022-09-14 18:54:51.675 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -45,7 +45,7 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-			rnd.nextBytes(new byte[1]);
+			getObjectType().nextBytes(new byte[1]);
2022-09-14 18:54:51.675 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:54:52.319 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 18:54:52.336 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -45,7 +45,7 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-			rnd.nextBytes(new byte[1]);
+			isSingleton().nextBytes(new byte[1]);
2022-09-14 18:54:52.336 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:54:52.951 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 18:54:52.980 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -45,7 +45,10 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-			rnd.nextBytes(new byte[1]);
+			if (rnd != null) {
+	rnd.nextBytes(new byte[1]);
+	}
+
2022-09-14 18:54:52.981 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:54:53.571 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 18:55:04.760 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -45,7 +45,10 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-			rnd.nextBytes(new byte[1]);
+			if (rnd == null) {
+	    throw new IllegalArgumentException("Null 'rnd' argument.");
+	}
+rnd.nextBytes(new byte[1]);
2022-09-14 18:55:04.760 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:55:05.468 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 18:55:17.062 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -45,7 +45,10 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-			rnd.nextBytes(new byte[1]);
+			if (rnd == null) {
+	    return null;
+	}
+rnd.nextBytes(new byte[1]);
2022-09-14 18:55:17.062 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:55:17.764 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 18:55:29.444 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -45,7 +45,8 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-			rnd.nextBytes(new byte[1]);
+			if (rnd == null) rnd = new SecureRandom();
+ rnd.nextBytes(new byte[1]);
2022-09-14 18:55:29.445 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:55:30.115 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 18:55:41.301 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -45,7 +45,8 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-			rnd.nextBytes(new byte[1]);
+			if (rnd == null) return new SecureRandom();
+	 rnd.nextBytes(new byte[1]);
2022-09-14 18:55:41.301 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:55:41.999 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 18:55:53.062 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -45,7 +45,7 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-			rnd.nextBytes(new byte[1]);
+			rnd.nextBytes(new byte[1d]);
2022-09-14 18:55:53.062 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:55:53.687 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 18:55:53.706 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -45,7 +45,7 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-			rnd.nextBytes(new byte[1]);
+			rnd.nextBytes(new byte[1f]);
2022-09-14 18:55:53.706 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:55:54.382 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - BuggyProject ---Fixer: fix fail because of failed compiling! 
2022-09-14 18:55:54.420 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Patch Candidate:
@@ -45,7 +45,7 @@ public class SecureRandomFactoryBean implements FactoryBean<SecureRandom> {
-			rnd.nextBytes(new byte[1]);
+
2022-09-14 18:55:54.421 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
2022-09-14 18:55:55.085 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
2022-09-14 18:56:06.703 [main] INFO  edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Finish off fixing======
Failed to fix bug


Node: ee2bf67284b9



Date: Wed Sep 14 18:56:06 EDT 2022

