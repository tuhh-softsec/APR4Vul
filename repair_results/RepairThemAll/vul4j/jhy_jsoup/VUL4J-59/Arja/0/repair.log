cd /workdir/Arja_vul4j_jhy_jsoup_VUL4J-59;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-8-openjdk-amd64/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64";
timeout 240m java -Xmx4g -Xms1g -XX:MaxPermSize=512m -cp /script/../libs/jmetal.jar:/script/../repair_tools/arja.jar us.msu.cse.repair.Main \
	Arja \
	-DexternalProjRoot /script/../libs/arja_external \
	-DprojectDir /workdir/Arja_vul4j_jhy_jsoup_VUL4J-59 \
    -DtestFiltered false \
    -DrunTestCommand "mvn test -Dhttps.protocols=TLSv1.2 -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipITs=true -Drat.skip=true -Dlicense.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true -Danimal.sniffer.skip=true -V -B" \
	-DsrcJavaDir /workdir/Arja_vul4j_jhy_jsoup_VUL4J-59/src/main/java \
	-DbinJavaDir /workdir/Arja_vul4j_jhy_jsoup_VUL4J-59/target/classes \
	-DbinTestDir /workdir/Arja_vul4j_jhy_jsoup_VUL4J-59/target/test-classes \
	-DdiffFormat true \
	-Dseed 0 \
	-DgzoltarDataDir /script/../data/benchmarks/vul4j/perfectfl/VUL4J-59 \
	-Ddependences /root/.m2/repository/junit/junit/4.5/junit-4.5.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
Fault localization starts...
Number of positive tests: 453
Number of negative tests: 1
Negative tests: [org.jsoup.parser.XmlTreeBuilderTest#testDoesHandleEOFInTag]
Faulty Lines: 
org.jsoup.parser.TokeniserState#759:1.0
org.jsoup.parser.TokeniserState#760:1.0
Fault localization is finished!
AST parsing starts...
AST parsing is finished!
Detection of local variables starts...
Detection of local variables is finished!
Detection of fields starts...
Detection of fields is finished!
Detection of methods starts...
Detection of methods is finished!
Ingredient screener starts...
Ingredient screener is finished!
Initialization of manipulations starts...
Initialization of manipulations is finished!
Filtering of the tests starts...
Number of positive tests considered: 453
Filtering of the tests is finished!
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -756,7 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					if (c == '&' || c == '<' || c == TokeniserState.nullChar)
+						break;
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.emitTagPending();
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,13 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+							|| c == ' ' || c == '/' || c == '>'
+							|| c == TokeniserState.nullChar)
+						break;
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,14 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				{
+					if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+							|| c == ' ' || c == '/' || c == '>'
+							|| c == TokeniserState.nullChar)
+						break;
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,14 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emit("</" + t.dataBuffer.toString());
+					t.eofError(this);
+				}
+				{
+					Arrays.sort(attributeNameCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+						|| c == ' ' || c == '/' || c == '>'
+						|| c == TokeniserState.nullChar)
+					break;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,12 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.tagPending.appendTagName(name.toLowerCase());
+					t.dataBuffer.append(name);
+					return;
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,12 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				{
+					if (c == '&' || c == '<' || c == TokeniserState.nullChar)
+						break;
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				Arrays.sort(attributeDoubleValueCharsSorted);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.transition(BeforeAttributeName);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.emitTagPending();
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,14 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeSingleValueCharsSorted);
+					t.eofError(this);
+				}
+				if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+						|| c == ' ' || c == '/' || c == '>'
+						|| c == TokeniserState.nullChar)
+					break;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				Arrays.sort(attributeNameCharsSorted);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+						|| c == ' ' || c == '/' || c == '>'
+						|| c == TokeniserState.nullChar)
+					break;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				t.transition(BeforeAttributeName);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (c == '&' || c == '<' || c == TokeniserState.nullChar)
+					break;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				Arrays.sort(attributeDoubleValueCharsSorted);
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.transition(Data);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,13 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+							|| c == ' ' || c == '/' || c == '>'
+							|| c == TokeniserState.nullChar)
+						break;
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emit("</" + t.dataBuffer.toString());
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.transition(Data);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				Arrays.sort(attributeNameCharsSorted);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					r.unconsume();
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.transition(Data);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				Arrays.sort(attributeSingleValueCharsSorted);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,16 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emit(c);
+					t.eofError(this);
+				}
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.tagPending.appendTagName(name.toLowerCase());
+					t.dataBuffer.append(name);
+					return;
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.transition(Data);
+					t.eofError(this);
+				}
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				{
+					t.transition(Data);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,13 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.tagPending.appendTagName(name.toLowerCase());
+					t.dataBuffer.append(name);
+					return;
+				}
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				t.transition(BeforeAttributeName);
+				t.emit("</" + t.dataBuffer.toString());
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emit(c);
+					t.eofError(this);
+				}
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.emitTagPending();
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,14 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeNameCharsSorted);
+					t.eofError(this);
+				}
+				{
+					Arrays.sort(attributeNameCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.emit("</" + t.dataBuffer.toString());
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emit(c);
+					t.eofError(this);
+				}
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,13 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.tagPending.appendTagName(name.toLowerCase());
+					t.dataBuffer.append(name);
+					return;
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					Arrays.sort(attributeDoubleValueCharsSorted);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					if (c == '&' || c == '<' || c == TokeniserState.nullChar)
+						break;
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,15 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					if (r.matchesLetter()) {
+						String name = r.consumeLetterSequence();
+						t.dataBuffer.append(name.toLowerCase());
+						t.emit(name);
+						return;
+					}
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.emitTagPending();
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,12 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.dataBuffer.append(name.toLowerCase());
+					t.emit(name);
+					return;
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.transition(Data);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.transition(Data);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -757,7 +757,13 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+							|| c == ' ' || c == '/' || c == '>'
+							|| c == TokeniserState.nullChar)
+						break;
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.emitTagPending();
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.transition(BeforeAttributeName);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,12 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.tagPending.appendTagName(name.toLowerCase());
+					t.dataBuffer.append(name);
+					return;
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeSingleValueCharsSorted);
+					t.eofError(this);
+				}
+				Arrays.sort(attributeSingleValueCharsSorted);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				{
+					r.unconsume();
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+						|| c == ' ' || c == '/' || c == '>'
+						|| c == TokeniserState.nullChar)
+					break;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.dataBuffer.append(c);
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,15 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					if (r.matchesLetter()) {
+						String name = r.consumeLetterSequence();
+						t.dataBuffer.append(name.toLowerCase());
+						t.emit(name);
+						return;
+					}
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,12 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.tagPending.appendTagName(name.toLowerCase());
+					t.dataBuffer.append(name);
+					return;
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				Arrays.sort(attributeNameCharsSorted);
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeSingleValueCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.transition(BeforeAttributeName);
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.dataBuffer.append(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,15 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					if (r.matchesLetter()) {
+						String name = r.consumeLetterSequence();
+						t.tagPending.appendTagName(name.toLowerCase());
+						t.dataBuffer.append(name);
+						return;
+					}
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,15 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					if (r.matchesLetter()) {
+						String name = r.consumeLetterSequence();
+						t.dataBuffer.append(name.toLowerCase());
+						t.emit(name);
+						return;
+					}
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					Arrays.sort(attributeDoubleValueCharsSorted);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				t.emit("</" + t.dataBuffer.toString());
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,16 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.dataBuffer.append(name.toLowerCase());
+					t.emit(name);
+					return;
+				}
+				if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+						|| c == ' ' || c == '/' || c == '>'
+						|| c == TokeniserState.nullChar)
+					break;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.emitTagPending();
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				{
+					Arrays.sort(attributeNameCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				t.transition(Data);
+				{
+					t.transition(BeforeAttributeName);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				Arrays.sort(attributeSingleValueCharsSorted);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.transition(BeforeAttributeName);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emit("</" + t.dataBuffer.toString());
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,16 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					if (r.matchesLetter()) {
+						String name = r.consumeLetterSequence();
+						t.dataBuffer.append(name.toLowerCase());
+						t.emit(name);
+						return;
+					}
+					t.eofError(this);
+				}
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				Arrays.sort(attributeDoubleValueCharsSorted);
break;
case '>':
t.error(this);
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:64)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.dataBuffer.append(c);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				Arrays.sort(attributeDoubleValueCharsSorted);
+				{
+					t.emit(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emit("</" + t.dataBuffer.toString());
+					t.eofError(this);
+				}
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emitTagPending();
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.emit(c);
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.transition(Data);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,14 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeSingleValueCharsSorted);
+					t.eofError(this);
+				}
+				{
+					Arrays.sort(attributeNameCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emit(c);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				Arrays.sort(attributeSingleValueCharsSorted);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					if (c == '&' || c == '<' || c == TokeniserState.nullChar)
+						break;
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				t.emit(c);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				Arrays.sort(attributeSingleValueCharsSorted);
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,16 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					if (r.matchesLetter()) {
+						String name = r.consumeLetterSequence();
+						t.dataBuffer.append(name.toLowerCase());
+						t.emit(name);
+						return;
+					}
+					t.eofError(this);
+				}
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.emit("</" + t.dataBuffer.toString());
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,19 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeNameCharsSorted);
+					t.eofError(this);
+				}
+				{
+					if (r.matchesLetter()) {
+						String name = r.consumeLetterSequence();
+						t.tagPending.appendTagName(name.toLowerCase());
+						t.dataBuffer.append(name);
+						return;
+					}
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeSingleValueCharsSorted);
+					t.eofError(this);
+				}
+				t.transition(BeforeAttributeName);
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				Arrays.sort(attributeDoubleValueCharsSorted);
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emit(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+						|| c == ' ' || c == '/' || c == '>'
+						|| c == TokeniserState.nullChar)
+					break;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				r.unconsume();
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.transition(BeforeAttributeName);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				Arrays.sort(attributeNameCharsSorted);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.dataBuffer.append(c);
+					t.eofError(this);
+				}
+				t.dataBuffer.append(c);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeSingleValueCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.transition(BeforeAttributeName);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.emitTagPending();
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,12 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.tagPending.appendTagName(name.toLowerCase());
+					t.dataBuffer.append(name);
+					return;
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.transition(BeforeAttributeName);
+					t.eofError(this);
+				}
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emitTagPending();
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,18 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					if (c == '&' || c == '<' || c == TokeniserState.nullChar)
+						break;
+					t.eofError(this);
+				}
+				{
+					if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+							|| c == ' ' || c == '/' || c == '>'
+							|| c == TokeniserState.nullChar)
+						break;
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				t.emit(c);
+				{
+					t.transition(Data);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeSingleValueCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emit(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -757,7 +757,15 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					if (r.matchesLetter()) {
+						String name = r.consumeLetterSequence();
+						t.tagPending.appendTagName(name.toLowerCase());
+						t.dataBuffer.append(name);
+						return;
+					}
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emit(c);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				{
+					t.emitTagPending();
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeSingleValueCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.transition(BeforeAttributeName);
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.transition(Data);
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.transition(BeforeAttributeName);
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+						|| c == ' ' || c == '/' || c == '>'
+						|| c == TokeniserState.nullChar)
+					break;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emit(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -756,8 +756,15 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					if (c == '&' || c == '<' || c == TokeniserState.nullChar)
+						break;
+					t.eofError(this);
+				}
+				{
+					t.emit(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
java.io.IOException: Bad file descriptor
	at java.io.FileInputStream.available0(Native Method)
	at java.io.FileInputStream.available(FileInputStream.java:306)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:353)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emitTagPending();
+					t.eofError(this);
+				}
+				r.unconsume();
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,12 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.tagPending.appendTagName(name.toLowerCase());
+					t.dataBuffer.append(name);
+					return;
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,16 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					if (r.matchesLetter()) {
+						String name = r.consumeLetterSequence();
+						t.tagPending.appendTagName(name.toLowerCase());
+						t.dataBuffer.append(name);
+						return;
+					}
+					t.eofError(this);
+				}
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,15 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					if (r.matchesLetter()) {
+						String name = r.consumeLetterSequence();
+						t.tagPending.appendTagName(name.toLowerCase());
+						t.dataBuffer.append(name);
+						return;
+					}
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.emit(c);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,12 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.tagPending.appendTagName(name.toLowerCase());
+					t.dataBuffer.append(name);
+					return;
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.transition(Data);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emitTagPending();
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.dataBuffer.append(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emitTagPending();
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.dataBuffer.append(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.transition(BeforeAttributeName);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emit("</" + t.dataBuffer.toString());
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				Arrays.sort(attributeDoubleValueCharsSorted);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				Arrays.sort(attributeNameCharsSorted);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,9 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				if (c == '&' || c == '<' || c == TokeniserState.nullChar)
+					break;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					r.unconsume();
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					r.unconsume();
+					t.eofError(this);
+				}
+				;
break;
case '>':
t.error(this);
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:122)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emit(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emit(c);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeNameCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.emitTagPending();
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				t.transition(BeforeAttributeName);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.transition(BeforeAttributeName);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					if (c == '&' || c == '<' || c == TokeniserState.nullChar)
+						break;
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					Arrays.sort(attributeSingleValueCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.emit(c);
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.emitTagPending();
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.emitTagPending();
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -756,8 +756,14 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emitTagPending();
+					t.eofError(this);
+				}
+				{
+					t.transition(Data);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					r.unconsume();
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (c == '&' || c == '<' || c == TokeniserState.nullChar)
+					break;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.dataBuffer.append(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+						|| c == ' ' || c == '/' || c == '>'
+						|| c == TokeniserState.nullChar)
+					break;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,13 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				if (r.matchesLetter()) {
+					String name = r.consumeLetterSequence();
+					t.tagPending.appendTagName(name.toLowerCase());
+					t.dataBuffer.append(name);
+					return;
+				}
+				t.emit("</" + t.dataBuffer.toString());
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				;
+				{
+					Arrays.sort(attributeNameCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.transition(BeforeAttributeName);
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.dataBuffer.append(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.emit(c);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,19 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emit(c);
+					t.eofError(this);
+				}
+				{
+					if (r.matchesLetter()) {
+						String name = r.consumeLetterSequence();
+						t.tagPending.appendTagName(name.toLowerCase());
+						t.dataBuffer.append(name);
+						return;
+					}
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emitTagPending();
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at us.msu.cse.repair.core.util.StreamReaderThread.run(StreamReaderThread.java:36)
java.lang.IllegalStateException: Exception Occurred
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runShell(RExternalTestExecutor.java:108)
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:44)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
java.lang.NullPointerException
	at us.msu.cse.repair.core.testexecutors.RExternalTestExecutor.runTests(RExternalTestExecutor.java:85)
	at us.msu.cse.repair.ec.problems.ArjaProblem.invokeTestExecutor(ArjaProblem.java:248)
	at us.msu.cse.repair.ec.problems.ArjaProblem.evaluate(ArjaProblem.java:177)
	at jmetal.metaheuristics.nsgaII.NSGAII.execute(NSGAII.java:124)
	at us.msu.cse.repair.core.AbstractRepairAlgorithm.execute(AbstractRepairAlgorithm.java:18)
	at us.msu.cse.repair.ArjaMain.main(ArjaMain.java:66)
	at us.msu.cse.repair.Main.main(Main.java:8)
----------------------------------
Patch Candidate:
@@ -756,8 +756,8 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				t.emitTagPending();
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					Arrays.sort(attributeSingleValueCharsSorted);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,13 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+							|| c == ' ' || c == '/' || c == '>'
+							|| c == TokeniserState.nullChar)
+						break;
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emitTagPending();
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,13 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+							|| c == ' ' || c == '/' || c == '>'
+							|| c == TokeniserState.nullChar)
+						break;
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emit("</" + t.dataBuffer.toString());
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.transition(BeforeAttributeName);
+					t.eofError(this);
+				}
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emitTagPending();
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					if (c == '&' || c == '<' || c == TokeniserState.nullChar)
+						break;
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				t.transition(BeforeAttributeName);
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,14 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					t.emitTagPending();
+					t.eofError(this);
+				}
+				{
+					Arrays.sort(attributeSingleValueCharsSorted);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 0, 0
Weighted failure rate: 0.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,14 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					if (c == '\t' || c == '\n' || c == '\r' || c == '\f'
+							|| c == ' ' || c == '/' || c == '>'
+							|| c == TokeniserState.nullChar)
+						break;
+					t.eofError(this);
+				}
+				t.emit(c);
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				;
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.emit(c);
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.dataBuffer.append(c);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.transition(BeforeAttributeName);
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,7 +756,10 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				{
+					t.emit(c);
+					t.eofError(this);
+				}
t.transition(Data);
break;
case '>':
Number of failed tests: 0, 10
Weighted failure rate: 0.011037527593818985
----------------------------------
Patch Candidate:
@@ -756,7 +756,7 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
+				t.emit("</" + t.dataBuffer.toString());
t.transition(Data);
break;
case '>':
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,7 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				;
break;
case '>':
t.error(this);
Number of failed tests: 1, 1
Weighted failure rate: 1.0011037527593818
----------------------------------
Patch Candidate:
@@ -757,7 +757,10 @@ enum TokeniserState {
break;
case eof:
t.eofError(this);
-                    t.transition(Data);
+				{
+					t.transition(BeforeAttributeName);
+					t.transition(Data);
+				}
break;
case '>':
t.error(this);
Number of failed tests: 1, 0
Weighted failure rate: 1.0
----------------------------------
Patch Candidate:
@@ -756,8 +756,11 @@ enum TokeniserState {
t.transition(AttributeValue_unquoted);
break;
case eof:
-                    t.eofError(this);
-                    t.transition(Data);
+				{
+					r.unconsume();
+					t.eofError(this);
+				}
+				;
break;
case '>':
t.error(this);


Node: 2c8178711f7b



Date: Wed Nov 16 13:06:20 EST 2022

